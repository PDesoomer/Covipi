{"version":3,"sources":["../../../../../../src/cdk/portal/portal-errors.ts","../../../../../../src/cdk/portal/portal.ts","../../../../../../src/cdk/portal/dom-portal-outlet.ts","../../../../../../src/cdk/portal/portal-directives.ts","../../../../../../src/cdk/portal/portal-injector.ts","../../../../../../src/cdk/portal/public-api.ts","../../../../../../src/cdk/portal/index.ts","./src/app/user-profile/user-profile.component.ts","../../../../../../src/cdk/collections/data-source.ts","../../../../../../src/cdk/collections/array-data-source.ts","../../../../../../src/cdk/collections/collection-viewer.ts","../../../../../../src/cdk/collections/dispose-view-repeater-strategy.ts","../../../../../../src/cdk/collections/recycle-view-repeater-strategy.ts","../../../../../../src/cdk/collections/selection-model.ts","../../../../../../src/cdk/collections/unique-selection-dispatcher.ts","../../../../../../src/cdk/collections/tree-adapter.ts","../../../../../../src/cdk/collections/view-repeater.ts","../../../../../../src/cdk/collections/public-api.ts","../../../../../../src/cdk/collections/index.ts","../../../../../../src/cdk/layout/layout-module.ts","../../../../../../src/cdk/layout/media-matcher.ts","../../../../../../src/cdk/layout/breakpoints-observer.ts","../../../../../../src/cdk/layout/breakpoints.ts","../../../../../../src/cdk/layout/public-api.ts","../../../../../../src/cdk/layout/index.ts","./src/app/icons/icons.component.css","./src/app/maps/maps.component.html","./src/app/notifications/notifications.component.ts","./src/app/icons/icons.component.ts","../../../../../../src/cdk/coercion/boolean-property.ts","../../../../../../src/cdk/coercion/number-property.ts","../../../../../../src/cdk/coercion/array.ts","../../../../../../src/cdk/coercion/css-pixel-value.ts","../../../../../../src/cdk/coercion/element.ts","../../../../../../src/cdk/coercion/public-api.ts","../../../../../../src/cdk/coercion/index.ts","./src/app/user-profile/user-profile.component.css","./src/app/notifications/notifications.component.css","../../../../../../src/material/core/version.ts","../../../../../../src/material/core/animation/animation.ts","../../../../../../src/material/core/common-behaviors/common-module.ts","../../../../../../src/material/core/common-behaviors/disabled.ts","../../../../../../src/material/core/common-behaviors/color.ts","../../../../../../src/material/core/common-behaviors/disable-ripple.ts","../../../../../../src/material/core/common-behaviors/tabindex.ts","../../../../../../src/material/core/common-behaviors/error-state.ts","../../../../../../src/material/core/common-behaviors/initialized.ts","../../../../../../src/material/core/common-behaviors/index.ts","../../../../../../src/material/core/datetime/date-adapter.ts","../../../../../../src/material/core/datetime/date-formats.ts","../../../../../../src/material/core/datetime/native-date-adapter.ts","../../../../../../src/material/core/datetime/native-date-formats.ts","../../../../../../src/material/core/datetime/index.ts","../../../../../../src/material/core/error/error-options.ts","../../../../../../src/material/core/line/line.ts","../../../../../../src/material/core/ripple/ripple-ref.ts","../../../../../../src/material/core/ripple/ripple-renderer.ts","../../../../../../src/material/core/ripple/ripple.ts","../../../../../../src/material/core/ripple/index.ts","../../../../../../src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../../../../src/material/core/selection/index.ts","../../../../../../src/material/core/option/optgroup.ts","../../../../../../src/material/core/option/option.ts","../../../../../../src/material/core/option/index.ts","../../../../../../src/material/core/label/label-options.ts","../../../../../../src/material/core/month-constants.ts","../../../../../../src/material/core/public-api.ts","../../../../../../src/material/core/index.ts","./src/app/notifications/notifications.component.html","../../../../../../src/cdk/keycodes/keycodes.ts","../../../../../../src/cdk/keycodes/modifiers.ts","../../../../../../src/cdk/keycodes/public-api.ts","../../../../../../src/cdk/keycodes/index.ts","../../../../../../src/cdk/observers/observe-content.ts","../../../../../../src/cdk/observers/public-api.ts","../../../../../../src/cdk/observers/index.ts","./src/app/dashboard/dashboard.component.html","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/upgrade/upgrade.component.css","./src/app/typography/typography.component.html","./src/app/upgrade/upgrade.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/table-list/table-list.component.html","../../../../../../src/material/tooltip/tooltip-animations.ts","../../../../../../src/material/tooltip/tooltip.ts","../../../../../../src/material/tooltip/tooltip-module.ts","../../../../../../src/material/tooltip/public-api.ts","../../../../../../src/material/tooltip/index.ts","./src/app/user-profile/user-profile.component.html","./src/app/dashboard/dashboard.component.css","./src/app/typography/typography.component.css","./src/app/maps/maps.component.css","./src/app/upgrade/upgrade.component.ts","../../../../../../src/material/button/button.ts","../../../../../../src/material/button/button-module.ts","../../../../../../src/material/button/public-api.ts","../../../../../../src/material/button/index.ts","../../../../../../src/cdk/bidi/dir-document-token.ts","../../../../../../src/cdk/bidi/directionality.ts","../../../../../../src/cdk/bidi/dir.ts","../../../../../../src/cdk/bidi/bidi-module.ts","../../../../../../src/cdk/bidi/public-api.ts","../../../../../../src/cdk/bidi/index.ts","../../../../../../src/material/select/select-animations.ts","../../../../../../src/material/select/select-errors.ts","../../../../../../src/material/select/select.ts","../../../../../../src/material/select/select-module.ts","../../../../../../src/material/select/public-api.ts","../../../../../../src/material/select/index.ts","../../../../../../src/cdk/text-field/autofill.ts","../../../../../../src/cdk/text-field/autosize.ts","../../../../../../src/cdk/text-field/text-field-module.ts","../../../../../../src/cdk/text-field/public-api.ts","../../../../../../src/cdk/text-field/index.ts","./src/app/table-list/table-list.component.css","../../../../../../src/material/form-field/error.ts","../../../../../../src/material/form-field/form-field-animations.ts","../../../../../../src/material/form-field/form-field-control.ts","../../../../../../src/material/form-field/form-field-errors.ts","../../../../../../src/material/form-field/hint.ts","../../../../../../src/material/form-field/label.ts","../../../../../../src/material/form-field/placeholder.ts","../../../../../../src/material/form-field/prefix.ts","../../../../../../src/material/form-field/suffix.ts","../../../../../../src/material/form-field/form-field.ts","../../../../../../src/material/form-field/form-field-module.ts","../../../../../../src/material/form-field/public-api.ts","../../../../../../src/material/form-field/index.ts","../../../../../../src/cdk/platform/platform.ts","../../../../../../src/cdk/platform/platform-module.ts","../../../../../../src/cdk/platform/features/input-types.ts","../../../../../../src/cdk/platform/features/passive-listeners.ts","../../../../../../src/cdk/platform/features/scrolling.ts","../../../../../../src/cdk/platform/features/shadow-dom.ts","../../../../../../src/cdk/platform/public-api.ts","../../../../../../src/cdk/platform/index.ts","../../../../../../src/material/input/autosize.ts","../../../../../../src/material/input/input-errors.ts","../../../../../../src/material/input/input-value-accessor.ts","../../../../../../src/material/input/input.ts","../../../../../../src/material/input/input-module.ts","../../../../../../src/material/input/public-api.ts","../../../../../../src/material/input/index.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","../../../../../../src/cdk/overlay/scroll/block-scroll-strategy.ts","../../../../../../src/cdk/overlay/scroll/scroll-strategy.ts","../../../../../../src/cdk/overlay/scroll/close-scroll-strategy.ts","../../../../../../src/cdk/overlay/scroll/noop-scroll-strategy.ts","../../../../../../src/cdk/overlay/position/scroll-clip.ts","../../../../../../src/cdk/overlay/scroll/reposition-scroll-strategy.ts","../../../../../../src/cdk/overlay/scroll/scroll-strategy-options.ts","../../../../../../src/cdk/overlay/scroll/index.ts","../../../../../../src/cdk/overlay/overlay-config.ts","../../../../../../src/cdk/overlay/position/connected-position.ts","../../../../../../src/cdk/overlay/dispatchers/base-overlay-dispatcher.ts","../../../../../../src/cdk/overlay/dispatchers/overlay-keyboard-dispatcher.ts","../../../../../../src/cdk/overlay/dispatchers/overlay-outside-click-dispatcher.ts","../../../../../../src/cdk/overlay/overlay-container.ts","../../../../../../src/cdk/overlay/overlay-ref.ts","../../../../../../src/cdk/overlay/position/flexible-connected-position-strategy.ts","../../../../../../src/cdk/overlay/position/connected-position-strategy.ts","../../../../../../src/cdk/overlay/position/global-position-strategy.ts","../../../../../../src/cdk/overlay/position/overlay-position-builder.ts","../../../../../../src/cdk/overlay/overlay.ts","../../../../../../src/cdk/overlay/overlay-directives.ts","../../../../../../src/cdk/overlay/overlay-module.ts","../../../../../../src/cdk/overlay/dispatchers/index.ts","../../../../../../src/cdk/overlay/fullscreen-overlay-container.ts","../../../../../../src/cdk/overlay/public-api.ts","../../../../../../src/cdk/overlay/index.ts","./src/app/table-list/table-list.component.ts","./src/app/icons/icons.component.html","../../../../../../src/cdk/a11y/aria-describer/aria-reference.ts","../../../../../../src/cdk/a11y/aria-describer/aria-describer.ts","../../../../../../src/cdk/a11y/key-manager/list-key-manager.ts","../../../../../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../../../../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../../../../../src/cdk/a11y/interactivity-checker/interactivity-checker.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap.ts","../../../../../../src/cdk/a11y/focus-trap/polyfill.ts","../../../../../../src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap-manager.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts","../../../../../../src/cdk/a11y/live-announcer/live-announcer-tokens.ts","../../../../../../src/cdk/a11y/live-announcer/live-announcer.ts","../../../../../../src/cdk/a11y/fake-mousedown.ts","../../../../../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../../../../../src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts","../../../../../../src/cdk/a11y/a11y-module.ts","../../../../../../src/cdk/a11y/public-api.ts","../../../../../../src/cdk/a11y/index.ts","./node_modules/chartist/dist/chartist.js","./src/app/typography/typography.component.ts","./src/app/maps/maps.component.ts","../../../../../../src/cdk/scrolling/virtual-scroll-strategy.ts","../../../../../../src/cdk/scrolling/fixed-size-virtual-scroll.ts","../../../../../../src/cdk/scrolling/scroll-dispatcher.ts","../../../../../../src/cdk/scrolling/scrollable.ts","../../../../../../src/cdk/scrolling/viewport-ruler.ts","../../../../../../src/cdk/scrolling/virtual-scroll-viewport.ts","../../../../../../src/cdk/scrolling/virtual-for-of.ts","../../../../../../src/cdk/scrolling/scrolling-module.ts","../../../../../../src/cdk/scrolling/virtual-scroll-repeater.ts","../../../../../../src/cdk/scrolling/public-api.ts","../../../../../../src/cdk/scrolling/index.ts","../../../../../../src/cdk/version.ts","../../../../../../src/cdk/public-api.ts","../../../../../../src/cdk/index.ts"],"names":["observableOf","VERSION","CDK_VERSION","nextUniqueId","root","factory","define","Chartist","version","globalRoot","window","document","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","String","fromCharCode","extend","target","i","source","sourceProp","arguments","length","prop","Array","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","value","unit","quantity","input","match","exec","undefined","querySelector","query","Node","times","apply","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","result","Math","max","map","e","forEach","index","args","roundWithPrecision","digits","precision","pow","round","escapingMap","serialize","data","JSON","stringify","Object","keys","reduce","key","deserialize","parse","createSvg","container","width","height","className","prototype","slice","call","querySelectorAll","filter","filterChartistSvgObjects","getAttributeNS","removePreviousElement","removeChild","Svg","attr","addClass","_node","style","appendChild","normalizeData","reverse","multi","labelCount","output","raw","normalized","series","getDataArray","every","labels","push","reverseData","safeHasProperty","object","property","hasOwnProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","y","x","normalizePadding","padding","fallback","top","right","bottom","left","getMetaData","meta","orderOfMagnitude","floor","log","abs","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","options","chartPadding","axisX","offset","getHighLow","dimension","toUpperCase","highLow","high","Number","MAX_VALUE","low","findHigh","findLow","recursiveHighLow","referenceValue","min","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","x1","x2","divisor","getBounds","scaleMinSpace","onlyInteger","optimizationCounter","newMin","newMax","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","Error","EPSILON","safeIncrement","increment","values","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","position","createGrid","axis","group","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","join","emit","type","element","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","content","createElement","setAttribute","innerText","foreignObject","text","getSeriesOption","name","seriesOptions","optionsProvider","responsiveOptions","baseOptions","currentOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","mql","matchMedia","matches","removeMediaQueryListeners","removeListener","addListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","defaultOptions","increasingX","fillHoles","segments","hole","global","Interpolation","none","path","Path","currX","currY","currData","move","line","simple","d","prevX","prevY","prevData","curve","cardinal","tension","t","c","paths","segment","z","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","event","handler","removeEventHandler","splice","indexOf","starHandler","listToArray","list","properties","superProtoOverride","superProto","Class","proto","create","cloneDefinitions","constr","fn","constructor","instance","super","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","update","override","initializeTimeoutId","createChart","detach","removeEventListener","resizeListener","clearTimeout","on","off","initialize","addEventListener","bind","plugins","plugin","Base","supportsForeignObject","isSupported","supportsAnimations","__chartist__","setTimeout","attributes","parent","insertFirst","Element","createElementNS","firstChild","insertBefore","ns","getAttribute","namespacedAttribute","split","setAttributeNS","parentNode","SVGElement","node","nodeName","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","empty","remove","newElement","replaceChild","append","trim","names","concat","self","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animate","animations","guided","createAnimateForAttributes","attribute","createAnimate","animationDefinition","attributeProperties","timeout","easing","Easing","begin","dur","calcMode","keySplines","keyTimes","fill","from","attributeName","beginElement","err","to","handleBeginEvent","params","handleEndEvent","feature","implementation","hasFeature","easingCubicBeziers","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","SvgList","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","a","accuracy","command","pathElements","relative","pathElement","toLowerCase","forEachParam","pathElementIndex","paramName","paramIndex","SvgPath","close","count","arc","rx","ry","xAr","lAf","sf","chunks","pop","elements","chunk","shift","description","spliceArgs","accuracyMultiplier","scale","translate","transform","transformFnc","transformed","clone","cloneElements","splitByCommand","joinedPath","j","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","showLabel","label","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","b","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","start","end","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","smoothing","seriesMeta","areaBaseProjected","onlySolidSegments","pathSegment","convertToArea","solidPathSegments","firstElement","lastElement","createArea","areaPath","Line","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","biPol","periodHalfLength","projected","previousStack","labelAxisValueIndex","positions","metaData","Bar","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","seriesGroups","labelsGroup","labelRadius","totalDataSum","previousValue","currentValue","hasSingleValInSeries","val","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","Pie"],"mappings":"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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nexport function throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nexport function throwPortalOutletAlreadyDisposedError() {\n  throw Error('This PortalOutlet has already been disposed');\n}\n\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nexport function throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n              'a ComponentPortal or a TemplatePortal.');\n}\n\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nexport function throwNullPortalOutletError() {\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nexport function throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n    TemplateRef,\n    ViewContainerRef,\n    ElementRef,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injector,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport {\n    throwNullPortalOutletError,\n    throwPortalAlreadyAttachedError,\n    throwNoPortalAttachedError,\n    throwNullPortalError,\n    throwPortalOutletAlreadyDisposedError,\n    throwUnknownPortalTypeError\n} from './portal-errors';\n\n/** Interface that can be used to generically type a class. */\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nexport abstract class Portal<T> {\n  private _attachedHost: PortalOutlet | null;\n\n  /** Attach this portal to a host. */\n  attach(host: PortalOutlet): T {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (host == null) {\n        throwNullPortalOutletError();\n      }\n\n      if (host.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n    }\n\n    this._attachedHost = host;\n    return <T> host.attach(this);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    let host = this._attachedHost;\n\n    if (host != null) {\n      this._attachedHost = null;\n      host.detach();\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwNoPortalAttachedError();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host: PortalOutlet | null) {\n    this._attachedHost = host;\n  }\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalOutlet.\n   * The origin is necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef?: ViewContainerRef | null;\n\n  /** [Optional] Injector used for the instantiation of the component. */\n  injector?: Injector | null;\n\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * Defaults to using the resolver from the outlet that the portal is attached to.\n   */\n  componentFactoryResolver?: ComponentFactoryResolver | null;\n\n  constructor(\n      component: ComponentType<T>,\n      viewContainerRef?: ViewContainerRef | null,\n      injector?: Injector | null,\n      componentFactoryResolver?: ComponentFactoryResolver | null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.componentFactoryResolver = componentFactoryResolver;\n  }\n}\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal<C = any> extends Portal<EmbeddedViewRef<C>> {\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef: TemplateRef<C>;\n\n  /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef: ViewContainerRef;\n\n  /** Contextual data to be passed in to the embedded view. */\n  context: C | undefined;\n\n  constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n    this.context = context;\n  }\n\n  get origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n\n  /**\n   * Attach the portal to the provided `PortalOutlet`.\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\n   * instance.\n   */\n  attach(host: PortalOutlet, context: C | undefined = this.context): EmbeddedViewRef<C> {\n    this.context = context;\n    return super.attach(host);\n  }\n\n  detach(): void {\n    this.context = undefined;\n    return super.detach();\n  }\n}\n\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nexport class DomPortal<T = HTMLElement> extends Portal<T> {\n  /** DOM node hosting the portal's content. */\n  readonly element: T;\n\n  constructor(element: T | ElementRef<T>) {\n    super();\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n\n\n/** A `PortalOutlet` is an space that can contain a single `Portal`. */\nexport interface PortalOutlet {\n  /** Attaches a portal to this outlet. */\n  attach(portal: Portal<any>): any;\n\n  /** Detaches the currently attached portal from this outlet. */\n  detach(): any;\n\n  /** Performs cleanup before the outlet is destroyed. */\n  dispose(): void;\n\n  /** Whether there is currently a portal attached to this outlet. */\n  hasAttached(): boolean;\n}\n\n/**\n * @deprecated Use `PortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nexport type PortalHost = PortalOutlet;\n\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nexport abstract class BasePortalOutlet implements PortalOutlet {\n  /** The portal currently attached to the host. */\n  protected _attachedPortal: Portal<any> | null;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn: (() => void) | null;\n\n  /** Whether this host has already been permanently disposed. */\n  private _isDisposed: boolean = false;\n\n  /** Whether this host has an attached portal. */\n  hasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /** Attaches a portal. */\n  attach(portal: Portal<any>): any {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!portal) {\n        throwNullPortalError();\n      }\n\n      if (this.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n\n      if (this._isDisposed) {\n        throwPortalOutletAlreadyDisposedError();\n      }\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n      // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n    } else if (this.attachDomPortal && portal instanceof DomPortal) {\n      this._attachedPortal = portal;\n      return this.attachDomPortal(portal);\n    }\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwUnknownPortalTypeError();\n    }\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n\n  abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n\n  // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n  readonly attachDomPortal: null | ((portal: DomPortal) => any) = null;\n\n  /** Detaches a previously attached portal. */\n  detach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n\n  /** Permanently dispose of this portal host. */\n  dispose(): void {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n\n  /** @docs-private */\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n\n  private _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nexport abstract class BasePortalHost extends BasePortalOutlet {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport {BasePortalOutlet, ComponentPortal, TemplatePortal, DomPortal} from './portal';\n\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nexport class DomPortalOutlet extends BasePortalOutlet {\n  private _document: Document;\n\n  constructor(\n      /** Element into which the content is projected. */\n      public outletElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef,\n      private _defaultInjector: Injector,\n\n      /**\n       * @deprecated `_document` Parameter to be made required.\n       * @breaking-change 10.0.0\n       */\n      _document?: any) {\n    super();\n    this._document = _document;\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(\n          componentFactory,\n          portal.viewContainerRef.length,\n          portal.injector || portal.viewContainerRef.injector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n\n    // Note that we want to detect changes after the nodes have been moved so that\n    // any directives inside the portal that are looking at the DOM inside a lifecycle\n    // hook won't be invoked too early.\n    viewRef.detectChanges();\n\n    this.setDisposeFn((() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    // TODO(jelbourn): Return locals from view.\n    return viewRef;\n  }\n\n  /**\n   * Attaches a DOM portal by transferring its content into the outlet.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    // @breaking-change 10.0.0 Remove check and error once the\n    // `_document` constructor parameter is required.\n    if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot attach DOM portal without _document constructor parameter');\n    }\n\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode = this._document.createComment('dom-portal');\n\n    element.parentNode!.insertBefore(anchorNode, element);\n    this.outletElement.appendChild(element);\n\n    super.setDisposeFn(() => {\n      // We can't use `replaceWith` here because IE doesn't support it.\n      if (anchorNode.parentNode) {\n        anchorNode.parentNode.replaceChild(element, anchorNode);\n      }\n    });\n  }\n\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose(): void {\n    super.dispose();\n    if (this.outletElement.parentNode != null) {\n      this.outletElement.parentNode.removeChild(this.outletElement);\n    }\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nexport class DomPortalHost extends DomPortalOutlet {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  NgModule,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  Inject,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BasePortalOutlet, ComponentPortal, Portal, TemplatePortal, DomPortal} from './portal';\n\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\n@Directive({\n  selector: '[cdkPortal]',\n  exportAs: 'cdkPortal',\n})\nexport class CdkPortal extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\n@Directive({\n  selector: '[cdk-portal], [portal]',\n  exportAs: 'cdkPortal',\n  providers: [{\n    provide: CdkPortal,\n    useExisting: TemplatePortalDirective\n  }]\n})\nexport class TemplatePortalDirective extends CdkPortal {}\n\n/**\n * Possible attached references to the CdkPortalOutlet.\n */\nexport type CdkPortalOutletAttachedRef = ComponentRef<any> | EmbeddedViewRef<any> | null;\n\n\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\n@Directive({\n  selector: '[cdkPortalOutlet]',\n  exportAs: 'cdkPortalOutlet',\n  inputs: ['portal: cdkPortalOutlet']\n})\nexport class CdkPortalOutlet extends BasePortalOutlet implements OnInit, OnDestroy {\n  private _document: Document;\n\n  /** Whether the portal component is initialized. */\n  private _isInitialized = false;\n\n  /** Reference to the currently-attached component/view ref. */\n  private _attachedRef: CdkPortalOutletAttachedRef;\n\n  constructor(\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _viewContainerRef: ViewContainerRef,\n\n      /**\n       * @deprecated `_document` parameter to be made required.\n       * @breaking-change 9.0.0\n       */\n      @Inject(DOCUMENT) _document?: any) {\n    super();\n    this._document = _document;\n  }\n\n  /** Portal associated with the Portal outlet. */\n  get portal(): Portal<any> | null {\n    return this._attachedPortal;\n  }\n\n  set portal(portal: Portal<any> | null) {\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\n    if (this.hasAttached() && !portal && !this._isInitialized) {\n      return;\n    }\n\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._attachedPortal = portal;\n  }\n\n  /** Emits when a portal is attached to the outlet. */\n  @Output() attached: EventEmitter<CdkPortalOutletAttachedRef> =\n      new EventEmitter<CdkPortalOutletAttachedRef>();\n\n  /** Component or view reference that is attached to the portal. */\n  get attachedRef(): CdkPortalOutletAttachedRef {\n    return this._attachedRef;\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    super.dispose();\n    this._attachedPortal = null;\n    this._attachedRef = null;\n  }\n\n  /**\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal outlet.\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalOutlet.\n    const viewContainerRef = portal.viewContainerRef != null ?\n        portal.viewContainerRef :\n        this._viewContainerRef;\n\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    const ref = viewContainerRef.createComponent(\n        componentFactory, viewContainerRef.length,\n        portal.injector || viewContainerRef.injector);\n\n    // If we're using a view container that's different from the injected one (e.g. when the portal\n    // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n    // inside of the alternate view container.\n    if (viewContainerRef !== this._viewContainerRef) {\n      this._getRootNode().appendChild((ref.hostView as EmbeddedViewRef<any>).rootNodes[0]);\n    }\n\n    super.setDisposeFn(() => ref.destroy());\n    this._attachedPortal = portal;\n    this._attachedRef = ref;\n    this.attached.emit(ref);\n\n    return ref;\n  }\n\n  /**\n   * Attach the given TemplatePortal to this PortalHost as an embedded View.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    portal.setAttachedHost(this);\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._attachedPortal = portal;\n    this._attachedRef = viewRef;\n    this.attached.emit(viewRef);\n\n    return viewRef;\n  }\n\n  /**\n   * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    // @breaking-change 9.0.0 Remove check and error once the\n    // `_document` constructor parameter is required.\n    if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot attach DOM portal without _document constructor parameter');\n    }\n\n    const element = portal.element;\n    if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('DOM portal content must be attached to a parent node.');\n    }\n\n    // Anchor used to save the element's previous position so\n    // that we can restore it when the portal is detached.\n    const anchorNode = this._document.createComment('dom-portal');\n\n    portal.setAttachedHost(this);\n    element.parentNode!.insertBefore(anchorNode, element);\n    this._getRootNode().appendChild(element);\n\n    super.setDisposeFn(() => {\n      if (anchorNode.parentNode) {\n        anchorNode.parentNode!.replaceChild(element, anchorNode);\n      }\n    });\n  }\n\n  /** Gets the root node of the portal outlet. */\n  private _getRootNode(): HTMLElement {\n    const nativeElement: Node = this._viewContainerRef.element.nativeElement;\n\n    // The directive could be set on a template which will result in a comment\n    // node being the root. Use the comment's parent node if that is the case.\n    return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n           nativeElement : nativeElement.parentNode!) as HTMLElement;\n  }\n\n  static ngAcceptInputType_portal: Portal<any> | null | undefined | '';\n}\n\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\n@Directive({\n  selector: '[cdkPortalHost], [portalHost]',\n  exportAs: 'cdkPortalHost',\n  inputs: ['portal: cdkPortalHost'],\n  providers: [{\n    provide: CdkPortalOutlet,\n    useExisting: PortalHostDirective\n  }]\n})\nexport class PortalHostDirective extends CdkPortalOutlet {}\n\n\n@NgModule({\n  exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n  declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n})\nexport class PortalModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nexport class PortalInjector implements Injector {\n  constructor(\n    private _parentInjector: Injector,\n    private _customTokens: WeakMap<any, any>) { }\n\n  get(token: any, notFoundValue?: any): any {\n    const value = this._customTokens.get(token);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './portal';\nexport * from './dom-portal-outlet';\nexport * from './portal-directives';\nexport * from './portal-injector';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {CollectionViewer} from './collection-viewer';\n\nexport abstract class DataSource<T> {\n  /**\n   * Connects a collection viewer (such as a data-table) to this data source. Note that\n   * the stream provided will be accessed during change detection and should not directly change\n   * values that are bound in template views.\n   * @param collectionViewer The component that exposes a view over the data provided by this\n   *     data source.\n   * @returns Observable that emits a new value when the data changes.\n   */\n  abstract connect(collectionViewer: CollectionViewer): Observable<T[] | ReadonlyArray<T>>;\n\n  /**\n   * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n   * to perform any clean-up or tear-down operations when a view is being destroyed.\n   *\n   * @param collectionViewer The component that exposes a view over the data provided by this\n   *     data source.\n   */\n  abstract disconnect(collectionViewer: CollectionViewer): void;\n}\n\n/** Checks whether an object is a data source. */\nexport function isDataSource(value: any): value is DataSource<any> {\n  // Check if the value is a DataSource by observing if it has a connect function. Cannot\n  // be checked as an `instanceof DataSource` since people could create their own sources\n  // that match the interface, but don't extend DataSource.\n  return value && typeof value.connect === 'function';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, isObservable, of as observableOf} from 'rxjs';\nimport {DataSource} from './data-source';\n\n\n/** DataSource wrapper for a native array. */\nexport class ArrayDataSource<T> extends DataSource<T> {\n  constructor(private _data: T[] | ReadonlyArray<T> | Observable<T[] | ReadonlyArray<T>>) {\n    super();\n  }\n\n  connect(): Observable<T[] | ReadonlyArray<T>> {\n    return isObservable(this._data) ? this._data : observableOf(this._data);\n  }\n\n  disconnect() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n\n/** Represents a range of numbers with a specified start and end. */\nexport type ListRange = {start: number, end: number};\n\n\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n */\nexport interface CollectionViewer {\n  /**\n   * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n   * data. The `start` index is inclusive, while the `end` is exclusive.\n   */\n  viewChange: Observable<ListRange>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  EmbeddedViewRef,\n  IterableChangeRecord,\n  IterableChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  _ViewRepeater,\n  _ViewRepeaterItemChanged,\n  _ViewRepeaterItemContext,\n  _ViewRepeaterItemContextFactory,\n  _ViewRepeaterItemValueResolver,\n  _ViewRepeaterOperation\n} from './view-repeater';\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport class _DisposeViewRepeaterStrategy<T, R, C extends _ViewRepeaterItemContext<T>>\n    implements _ViewRepeater<T, R, C> {\n  applyChanges(changes: IterableChanges<R>,\n               viewContainerRef: ViewContainerRef,\n               itemContextFactory: _ViewRepeaterItemContextFactory<T, R, C>,\n               itemValueResolver: _ViewRepeaterItemValueResolver<T, R>,\n               itemViewChanged?: _ViewRepeaterItemChanged<R, C>) {\n    changes.forEachOperation(\n        (record: IterableChangeRecord<R>,\n         adjustedPreviousIndex: number | null,\n         currentIndex: number | null) => {\n          let view: EmbeddedViewRef<C> | undefined;\n          let operation: _ViewRepeaterOperation;\n          if (record.previousIndex == null) {\n            const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n            view = viewContainerRef.createEmbeddedView(\n                insertContext.templateRef, insertContext.context, insertContext.index);\n            operation = _ViewRepeaterOperation.INSERTED;\n          } else if (currentIndex == null) {\n            viewContainerRef.remove(adjustedPreviousIndex!);\n            operation = _ViewRepeaterOperation.REMOVED;\n          } else {\n            view = viewContainerRef.get(adjustedPreviousIndex!) as EmbeddedViewRef<C>;\n            viewContainerRef.move(view!, currentIndex);\n            operation = _ViewRepeaterOperation.MOVED;\n          }\n\n          if (itemViewChanged) {\n            itemViewChanged({\n              context: view?.context,\n              operation,\n              record,\n            });\n          }\n        });\n  }\n\n  detach() {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  EmbeddedViewRef,\n  IterableChangeRecord,\n  IterableChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  _ViewRepeater,\n  _ViewRepeaterItemChanged,\n  _ViewRepeaterItemContext,\n  _ViewRepeaterItemContextFactory,\n  _ViewRepeaterItemInsertArgs,\n  _ViewRepeaterItemValueResolver,\n  _ViewRepeaterOperation\n} from './view-repeater';\n\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport class _RecycleViewRepeaterStrategy<T, R, C extends _ViewRepeaterItemContext<T>>\n    implements _ViewRepeater<T, R, C> {\n  /**\n   * The size of the cache used to store unused views.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n   */\n  viewCacheSize: number = 20;\n\n  /**\n   * View cache that stores embedded view instances that have been previously stamped out,\n   * but don't are not currently rendered. The view repeater will reuse these views rather than\n   * creating brand new ones.\n   *\n   * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n   */\n  private _viewCache: EmbeddedViewRef<C>[] = [];\n\n  /** Apply changes to the DOM. */\n  applyChanges(changes: IterableChanges<R>,\n               viewContainerRef: ViewContainerRef,\n               itemContextFactory: _ViewRepeaterItemContextFactory<T, R, C>,\n               itemValueResolver: _ViewRepeaterItemValueResolver<T, R>,\n               itemViewChanged?: _ViewRepeaterItemChanged<R, C>) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record: IterableChangeRecord<R>,\n                              adjustedPreviousIndex: number | null,\n                              currentIndex: number | null) => {\n      let view: EmbeddedViewRef<C> | undefined;\n      let operation: _ViewRepeaterOperation;\n      if (record.previousIndex == null) {  // Item added.\n        const viewArgsFactory = () => itemContextFactory(\n            record, adjustedPreviousIndex, currentIndex);\n        view = this._insertView(viewArgsFactory, currentIndex!, viewContainerRef,\n            itemValueResolver(record));\n        operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n      } else if (currentIndex == null) {  // Item removed.\n        this._detachAndCacheView(adjustedPreviousIndex!, viewContainerRef);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {  // Item moved.\n        view = this._moveView(adjustedPreviousIndex!, currentIndex!, viewContainerRef,\n            itemValueResolver(record));\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record,\n        });\n      }\n    });\n  }\n\n  detach() {\n    for (const view of this._viewCache) {\n      view.destroy();\n    }\n  }\n\n  /**\n   * Inserts a view for a new item, either from the cache or by creating a new\n   * one. Returns `undefined` if the item was inserted into a cached view.\n   */\n  private _insertView(viewArgsFactory: () => _ViewRepeaterItemInsertArgs<C>, currentIndex: number,\n                      viewContainerRef: ViewContainerRef,\n                      value: T): EmbeddedViewRef<C> | undefined {\n    let cachedView = this._insertViewFromCache(currentIndex!, viewContainerRef);\n    if (cachedView) {\n      cachedView.context.$implicit = value;\n      return undefined;\n    }\n\n    const viewArgs = viewArgsFactory();\n    return viewContainerRef.createEmbeddedView(\n        viewArgs.templateRef, viewArgs.context, viewArgs.index);\n  }\n\n  /** Detaches the view at the given index and inserts into the view cache. */\n  private _detachAndCacheView(index: number, viewContainerRef: ViewContainerRef) {\n    const detachedView = this._detachView(index, viewContainerRef);\n    this._maybeCacheView(detachedView, viewContainerRef);\n  }\n\n  /** Moves view at the previous index to the current index. */\n  private _moveView(adjustedPreviousIndex: number, currentIndex: number,\n                    viewContainerRef: ViewContainerRef, value: T): EmbeddedViewRef<C> {\n    const view = viewContainerRef.get(adjustedPreviousIndex!) as\n        EmbeddedViewRef<C>;\n    viewContainerRef.move(view, currentIndex);\n    view.context.$implicit = value;\n    return view;\n  }\n\n  /**\n   * Cache the given detached view. If the cache is full, the view will be\n   * destroyed.\n   */\n  private _maybeCacheView(view: EmbeddedViewRef<C>, viewContainerRef: ViewContainerRef) {\n    if (this._viewCache.length < this.viewCacheSize) {\n      this._viewCache.push(view);\n    } else {\n      const index = viewContainerRef.indexOf(view);\n\n      // The host component could remove views from the container outside of\n      // the view repeater. It's unlikely this will occur, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        viewContainerRef.remove(index);\n      }\n    }\n  }\n\n  /** Inserts a recycled view from the cache at the given index. */\n  private _insertViewFromCache(index: number,\n                               viewContainerRef: ViewContainerRef): EmbeddedViewRef<C> | null {\n    const cachedView = this._viewCache.pop();\n    if (cachedView) {\n      viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n\n  /** Detaches the embedded view at the given index. */\n  private _detachView(index: number, viewContainerRef: ViewContainerRef): EmbeddedViewRef<C> {\n    return viewContainerRef.detach(index) as EmbeddedViewRef<C>;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject} from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nexport class SelectionModel<T> {\n  /** Currently-selected values. */\n  private _selection = new Set<T>();\n\n  /** Keeps track of the deselected options that haven't been emitted by the change event. */\n  private _deselectedToEmit: T[] = [];\n\n  /** Keeps track of the selected options that haven't been emitted by the change event. */\n  private _selectedToEmit: T[] = [];\n\n  /** Cache for the array value of the selected items. */\n  private _selected: T[] | null;\n\n  /** Selected values. */\n  get selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n\n  /** Event emitted when the value has changed. */\n  changed: Subject<SelectionChange<T>> = new Subject();\n\n  constructor(\n    private _multiple = false,\n    initiallySelectedValues?: T[],\n    private _emitChanges = true) {\n\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n\n  /**\n   * Selects a value or an array of values.\n   */\n  select(...values: T[]): void {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._markSelected(value));\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Deselects a value or an array of values.\n   */\n  deselect(...values: T[]): void {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._unmarkSelected(value));\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Toggles a value between selected and deselected.\n   */\n  toggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n\n  /**\n   * Clears all of the selected values.\n   */\n  clear(): void {\n    this._unmarkAll();\n    this._emitChangeEvent();\n  }\n\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value: T): boolean {\n    return this._selection.has(value);\n  }\n\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue(): boolean {\n    return !this.isEmpty();\n  }\n\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate?: (a: T, b: T) => number): void {\n    if (this._multiple && this.selected) {\n      this._selected!.sort(predicate);\n    }\n  }\n\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n\n  /** Emits a change event and clears the records of selected and deselected values. */\n  private _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit\n      });\n\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n\n  /** Selects a value. */\n  private _markSelected(value: T) {\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n\n      this._selection.add(value);\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Deselects a value. */\n  private _unmarkSelected(value: T) {\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Clears out the selected values. */\n  private _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  private _verifyValueAssignment(values: T[]) {\n    if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n}\n\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * @docs-private\n */\nexport interface SelectionChange<T> {\n  /** Model that dispatched the event. */\n  source: SelectionModel<T>;\n  /** Options that were added to the model. */\n  added: T[];\n  /** Options that were removed from the model. */\n  removed: T[];\n}\n\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nexport function getMultipleValuesInSingleSelectionError() {\n  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, OnDestroy} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\n@Injectable({providedIn: 'root'})\nexport class UniqueSelectionDispatcher implements OnDestroy {\n  private _listeners: UniqueSelectionDispatcherListener[] = [];\n\n  /**\n   * Notify other items that selection for the given name has been set.\n   * @param id ID of the item.\n   * @param name Name of the item.\n   */\n  notify(id: string, name: string) {\n    for (let listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n\n  /**\n   * Listen for future changes to item selection.\n   * @return Function used to deregister listener\n   */\n  listen(listener: UniqueSelectionDispatcherListener): () => void {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\n        return listener !== registered;\n      });\n    };\n  }\n\n  ngOnDestroy() {\n    this._listeners = [];\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SelectionModel} from './selection-model';\n\n\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n */\nexport interface TreeDataNodeFlattener<T> {\n  /** Transforms a set of hierarchical structured data into a flattened data array. */\n  flattenNodes(structuredData: any[]): T[];\n\n  /**\n   * Expands a flattened array of data into its hierarchical form using the provided expansion\n   * model.\n   */\n  expandFlattenedNodes(nodes: T[], expansionModel: SelectionModel<T>): T[];\n\n  /**\n   * Put node descendants of node in array.\n   * If `onlyExpandable` is true, then only process expandable descendants.\n   */\n  nodeDescendents(node: T, nodes: T[], onlyExpandable: boolean): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  InjectionToken,\n  IterableChangeRecord,\n  IterableChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * The context for an embedded view in the repeater's view container.\n *\n * @template T The type for the embedded view's $implicit property.\n */\nexport interface _ViewRepeaterItemContext<T> {\n  $implicit?: T;\n}\n\n/**\n * The arguments needed to construct an embedded view for an item in a view\n * container.\n *\n * @template C The type for the context passed to each embedded view.\n */\nexport interface _ViewRepeaterItemInsertArgs<C> {\n  templateRef: TemplateRef<C>;\n  context?: C;\n  index?: number;\n}\n\n/**\n * A factory that derives the embedded view context for an item in a view\n * container.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport type _ViewRepeaterItemContextFactory<T, R, C extends _ViewRepeaterItemContext<T>> =\n    (record: IterableChangeRecord<R>,\n     adjustedPreviousIndex: number | null,\n     currentIndex: number | null) => _ViewRepeaterItemInsertArgs<C>;\n\n/**\n * Extracts the value of an item from an {@link IterableChangeRecord}.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n */\nexport type _ViewRepeaterItemValueResolver<T, R> =\n    (record: IterableChangeRecord<R>) => T;\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nexport const enum _ViewRepeaterOperation {\n  /** The content of an existing view was replaced with another item. */\n  REPLACED,\n  /** A new view was created with `createEmbeddedView`. */\n  INSERTED,\n  /** The position of a view changed, but the content remains the same. */\n  MOVED,\n  /** A view was detached from the view container. */\n  REMOVED,\n}\n\n/**\n * Meta data describing the state of a view after it was updated by a\n * {@link _ViewRepeater}.\n *\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport interface _ViewRepeaterItemChange<R, C> {\n  /** The view's context after it was changed. */\n  context?: C;\n  /** Indicates how the view was changed. */\n  operation: _ViewRepeaterOperation;\n  /** The view's corresponding change record. */\n  record: IterableChangeRecord<R>;\n}\n\n/**\n * Type for a callback to be executed after a view has changed.\n *\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport type _ViewRepeaterItemChanged<R, C> =\n    (change: _ViewRepeaterItemChange<R, C>) => void;\n\n/**\n * Describes a strategy for rendering items in a {@link ViewContainerRef}.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nexport interface _ViewRepeater<T, R, C extends _ViewRepeaterItemContext<T>> {\n  applyChanges(\n      changes: IterableChanges<R>,\n      viewContainerRef: ViewContainerRef,\n      itemContextFactory: _ViewRepeaterItemContextFactory<T, R, C>,\n      itemValueResolver: _ViewRepeaterItemValueResolver<T, R>,\n      itemViewChanged?: _ViewRepeaterItemChanged<R, C>): void;\n\n  detach(): void;\n}\n\n/**\n * Injection token for {@link _ViewRepeater}.\n *\n * INTERNAL ONLY - not for public consumption.\n * @docs-private\n */\nexport const _VIEW_REPEATER_STRATEGY = new InjectionToken<\n        _ViewRepeater<unknown, unknown, _ViewRepeaterItemContext<unknown>>>('_ViewRepeater');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './array-data-source';\nexport * from './collection-viewer';\nexport * from './data-source';\nexport * from './dispose-view-repeater-strategy';\nexport * from './recycle-view-repeater-strategy';\nexport * from './selection-model';\nexport {\n  UniqueSelectionDispatcher,\n  UniqueSelectionDispatcherListener,\n} from './unique-selection-dispatcher';\nexport * from './tree-adapter';\nexport * from './view-repeater';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class LayoutModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility: Set<string> = new Set<string>();\n\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode: HTMLStyleElement | undefined;\n\n/** A utility for calling matchMedia queries. */\n@Injectable({providedIn: 'root'})\nexport class MediaMatcher {\n  /** The internal matchMedia method to return back a MediaQueryList like object. */\n  private _matchMedia: (query: string) => MediaQueryList;\n\n  constructor(private _platform: Platform) {\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) :\n      noopMatchMedia;\n  }\n\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n  matchMedia(query: string): MediaQueryList {\n    if (this._platform.WEBKIT) {\n      createEmptyStyleRule(query);\n    }\n    return this._matchMedia(query);\n  }\n}\n\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query: string) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head!.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      (mediaQueryStyleNode.sheet as CSSStyleSheet)\n          .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query: string): MediaQueryList {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  } as any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceArray} from '@angular/cdk/coercion';\nimport {Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {combineLatest, concat, Observable, Observer, Subject} from 'rxjs';\nimport {debounceTime, map, skip, startWith, take, takeUntil} from 'rxjs/operators';\nimport {MediaMatcher} from './media-matcher';\n\n\n/** The current state of a layout breakpoint. */\nexport interface BreakpointState {\n  /** Whether the breakpoint is currently matching. */\n  matches: boolean;\n  /**\n   * A key boolean pair for each query provided to the observe method,\n   * with its current matched state.\n   */\n  breakpoints: {\n    [key: string]: boolean;\n  };\n}\n\n/** The current state of a layout breakpoint. */\ninterface InternalBreakpointState {\n  /** Whether the breakpoint is currently matching. */\n  matches: boolean;\n  /** The media query being to be matched */\n  query: string;\n}\n\ninterface Query {\n  observable: Observable<InternalBreakpointState>;\n  mql: MediaQueryList;\n}\n\n/** Utility for checking the matching state of @media queries. */\n@Injectable({providedIn: 'root'})\nexport class BreakpointObserver implements OnDestroy {\n  /**  A map of all media queries currently being listened for. */\n  private _queries = new Map<string, Query>();\n  /** A subject for all other observables to takeUntil based on. */\n  private _destroySubject = new Subject<void>();\n\n  constructor(private _mediaMatcher: MediaMatcher, private _zone: NgZone) {}\n\n  /** Completes the active subject, signalling to all other observables to complete. */\n  ngOnDestroy() {\n    this._destroySubject.next();\n    this._destroySubject.complete();\n  }\n\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param value One or more media queries to check.\n   * @returns Whether any of the media queries match.\n   */\n  isMatched(value: string | readonly string[]): boolean {\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param value One or more media queries to check.\n   * @returns A stream of matches for the given queries.\n   */\n  observe(value: string | readonly string[]): Observable<BreakpointState> {\n    const queries = splitQueries(coerceArray(value));\n    const observables = queries.map(query => this._registerQuery(query).observable);\n\n    let stateObservable = combineLatest(observables);\n    // Emit the first state immediately, and then debounce the subsequent emissions.\n    stateObservable = concat(\n      stateObservable.pipe(take(1)),\n      stateObservable.pipe(skip(1), debounceTime(0)));\n    return stateObservable.pipe(map(breakpointStates => {\n      const response: BreakpointState = {\n        matches: false,\n        breakpoints: {},\n      };\n      breakpointStates.forEach(({matches, query}) => {\n        response.matches = response.matches || matches;\n        response.breakpoints[query] = matches;\n      });\n      return response;\n    }));\n  }\n\n  /** Registers a specific query to be listened for. */\n  private _registerQuery(query: string): Query {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return this._queries.get(query)!;\n    }\n\n    const mql = this._mediaMatcher.matchMedia(query);\n\n    // Create callback for match changes and add it is as a listener.\n    const queryObservable = new Observable((observer: Observer<MediaQueryList>) => {\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      const handler = (e: any) => this._zone.run(() => observer.next(e));\n      mql.addListener(handler);\n\n      return () => {\n        mql.removeListener(handler);\n      };\n    }).pipe(\n      startWith(mql),\n      map(({matches}) => ({query, matches})),\n      takeUntil(this._destroySubject)\n    );\n\n    // Add the MediaQueryList to the set of queries.\n    const output = {observable: queryObservable, mql};\n    this._queries.set(query, output);\n    return output;\n  }\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: readonly string[]): readonly string[] {\n  return queries.map(query => query.split(','))\n                .reduce((a1, a2) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nexport const Breakpoints = {\n  XSmall: '(max-width: 599.99px)',\n  Small: '(min-width: 600px) and (max-width: 959.99px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n           '(max-width: 959.99px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {LayoutModule} from './layout-module';\nexport {BreakpointObserver, BreakpointState} from './breakpoints-observer';\nexport {Breakpoints} from './breakpoints';\nexport {MediaMatcher} from './media-matcher';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ljb25zL2ljb25zLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div id=\\\"map\\\"></div>\\n\";","import { Component, OnInit } from '@angular/core';\ndeclare var $: any;\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n  showNotification(from, align){\n      const type = ['','info','success','warning','danger'];\n\n      const color = Math.floor((Math.random() * 4) + 1);\n\n      $.notify({\n          icon: \"notifications\",\n          message: \"Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer.\"\n\n      },{\n          type: type[color],\n          timer: 4000,\n          placement: {\n              from: from,\n              align: align\n          },\n          template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n            '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n            '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n            '<span data-notify=\"title\">{1}</span> ' +\n            '<span data-notify=\"message\">{2}</span>' +\n            '<div class=\"progress\" data-notify=\"progressbar\">' +\n              '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n            '</div>' +\n            '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n          '</div>'\n      });\n  }\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.css']\n})\nexport class IconsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Type describing the allowed values for a boolean input.\n * @docs-private\n */\nexport type BooleanInput = string | boolean | null | undefined;\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Type describing the allowed values for a number input\n * @docs-private\n */\nexport type NumberInput = string | number | null | undefined;\n\n/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any): number;\nexport function coerceNumberProperty<D>(value: any, fallback: D): number | D;\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nexport function _isNumberValue(value: any): boolean {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[];\nexport function coerceArray<T>(value: T | readonly T[]): readonly T[];\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Coerces a value to a CSS pixel value. */\nexport function coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '@angular/core';\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nexport function coerceElement<T>(elementOrRef: ElementRef<T> | T): T {\n  return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './boolean-property';\nexport * from './number-property';\nexport * from './array';\nexport * from './css-pixel-value';\nexport * from './element';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuY3NzIn0= */\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Material. */\nexport const VERSION = new Version('10.2.4');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HighContrastModeDetector} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {Inject, InjectionToken, isDevMode, NgModule, Optional, Version} from '@angular/core';\nimport {VERSION as CDK_VERSION} from '@angular/cdk';\nimport {DOCUMENT} from '@angular/common';\n\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('10.2.4');\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): SanityChecks {\n  return true;\n}\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<SanityChecks>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/**\n * Possible sanity checks that can be enabled. If set to\n * true/false, all checks will be enabled/disabled.\n */\nexport type SanityChecks = boolean | GranularSanityChecks;\n\n/** Object that can be used to configure the sanity checks granularly. */\nexport interface GranularSanityChecks {\n  doctype: boolean;\n  theme: boolean;\n  version: boolean;\n\n  /**\n   * @deprecated No longer being used.\n   * @breaking-change 10.0.0\n   */\n  hammer: boolean;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Configured sanity checks. */\n  private _sanityChecks: SanityChecks;\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(\n      highContrastModeDetector: HighContrastModeDetector,\n      @Optional() @Inject(MATERIAL_SANITY_CHECKS) sanityChecks: any,\n      /** @breaking-change 11.0.0 make document required */\n      @Optional() @Inject(DOCUMENT) document?: any) {\n    this._document = document;\n\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n\n    // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._checkCdkVersionMatch();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n    /** Access injected document if available or fallback to global document reference */\n    private _getDocument(): Document | null {\n      const doc = this._document || document;\n      return typeof doc === 'object' && doc ? doc : null;\n    }\n\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    private _getWindow(): Window | null {\n      const doc = this._getDocument();\n      const win = doc?.defaultView || window;\n      return typeof win === 'object' && win ? win : null;\n    }\n\n  /** Whether any sanity checks are enabled. */\n  private _checksAreEnabled(): boolean {\n    // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n    // it. Since these checks can have performance implications and they aren't tree shakeable\n    // in their current form, we can leave the `isDevMode` check in for now.\n    // tslint:disable-next-line:ban\n    return isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    const window = this._getWindow() as any;\n    return window && (window.__karma__ || window.jasmine);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    const isEnabled = this._checksAreEnabled() &&\n      (this._sanityChecks === true || (this._sanityChecks as GranularSanityChecks).doctype);\n    const document = this._getDocument();\n\n    if (isEnabled && document && !document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    const isDisabled = !this._checksAreEnabled() ||\n      (this._sanityChecks === false || !(this._sanityChecks as GranularSanityChecks).theme);\n    const document = this._getDocument();\n\n    if (isDisabled || !document || !document.body ||\n        typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n    document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement);\n\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn(\n        'Could not find Angular Material core theme. Most Material ' +\n        'components may not work as expected. For more info refer ' +\n        'to the theming guide: https://material.angular.io/guide/theming'\n      );\n    }\n\n    document.body.removeChild(testElement);\n  }\n\n  /** Checks whether the material version matches the cdk version */\n  private _checkCdkVersionMatch(): void {\n    const isEnabled = this._checksAreEnabled() &&\n      (this._sanityChecks === true || (this._sanityChecks as GranularSanityChecks).version);\n\n    if (isEnabled && VERSION.full !== CDK_VERSION.full) {\n      console.warn(\n          'The Angular Material version (' + VERSION.full + ') does not match ' +\n          'the Angular CDK version (' + CDK_VERSION.full + ').\\n' +\n          'Please ensure the versions of these two packages exactly match.'\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n\n  /** Default color to fall back to if no value is set. */\n  defaultColor: ThemePalette | undefined;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n    defaultColor = defaultColor;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || this.defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor, AbstractConstructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends AbstractConstructor<{}>>(\n  base: T): CanDisableRippleCtor & T {\n  abstract class Mixin extends (base as unknown as Constructor<{}>) {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & CanDisableRippleCtor;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Constructor, AbstractConstructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n\n  /** Tabindex to which to fall back to if no value is set. */\n  defaultTabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends AbstractConstructor<CanDisable>>(\n  base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  abstract class Mixin extends (base as unknown as Constructor<CanDisable>) {\n    private _tabIndex: number = defaultTabIndex;\n    defaultTabIndex = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & Constructor<HasTabIndex>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  MatCommonModule,\n  MATERIAL_SANITY_CHECKS,\n  SanityChecks,\n  GranularSanityChecks,\n} from './common-module';\nexport {CanDisable, CanDisableCtor, mixinDisabled} from './disabled';\nexport {CanColor, CanColorCtor, mixinColor, ThemePalette} from './color';\nexport {CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple} from './disable-ripple';\nexport {HasTabIndex, HasTabIndexCtor, mixinTabIndex} from './tabindex';\nexport {CanUpdateErrorState, CanUpdateErrorStateCtor, mixinErrorState} from './error-state';\nexport {HasInitialized, HasInitializedCtor, mixinInitialized} from './initialized';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n  protected _localeChanges = new Subject<void>();\n\n  /** A stream that emits when the locale changes. */\n  readonly localeChanges: Observable<void> = this._localeChanges;\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n /**\n  * Given a potential date object, returns that same date object if it is\n  * a valid date, or `null` if it's not a valid date.\n  * @param obj The object to check.\n  * @returns A date or `null`.\n  */\n  getValidDateOrNull(obj: unknown): D | null {\n    return this.isDateInstance(obj) && this.isValid(obj as D) ? obj as D : null;\n  }\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from its utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {startWith} from 'rxjs/operators';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport function setLines(lines: QueryList<unknown>, element: ElementRef<HTMLElement>,\n                         prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({length}) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nexport class MatLineSetter {\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n    setLines(lines, element);\n  }\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Possible states for a ripple element. */\nexport const enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: {fadeOutRipple(ref: RippleRef): void},\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {RippleRef, RippleState, RippleConfig} from './ripple-ref';\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer implements EventListenerObject {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Whether pointer-up event listeners have been registered. */\n  private _pointerUpEventsRegistered = false;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementOrElementRef: HTMLElement | ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef: HTMLElement | ElementRef<HTMLElement>) {\n    const element = coerceElement(elementOrElementRef);\n\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._triggerElement = element;\n    this._registerEvents(pointerDownEvents);\n  }\n\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event: Event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event as MouseEvent);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event as TouchEvent);\n    } else {\n      this._onPointerUp();\n    }\n\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private _onMousedown(event: MouseEvent) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private _onTouchStart(event: TouchEvent) {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private _runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Registers event listeners for a given list of events. */\n  private _registerEvents(eventTypes: string[]) {\n    this._ngZone.runOutsideAngular(() => {\n      eventTypes.forEach((type) => {\n        this._triggerElement!.addEventListener(type, this, passiveEventOptions);\n      });\n    });\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach((type) => {\n        this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n      });\n\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach((type) => {\n          this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleAnimationConfig, RippleConfig, RippleRef} from './ripple-ref';\nimport {RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse or touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) private _animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {enterDuration: 0, exitDuration: 0} : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  InjectionToken,\n  Input,\n  ViewEncapsulation,\n  Directive\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase { }\nconst _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n@Directive()\nexport class _MatOptgroupBase extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nexport const MAT_OPTGROUP = new InjectionToken<MatOptgroup>('MatOptgroup');\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  },\n  providers: [{provide: MAT_OPTGROUP, useExisting: MatOptgroup}],\n})\nexport class MatOptgroup extends _MatOptgroupBase {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n  Directive,\n} from '@angular/core';\nimport {FocusOptions, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup, _MatOptgroupBase, MAT_OPTGROUP} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n\n@Directive()\nexport class _MatOptionBase implements FocusableOption, AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _parent: MatOptionParentComponent,\n    readonly group: _MatOptgroupBase) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(_origin?: FocusOrigin, options?: FocusOptions): void {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean|null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option mat-focus-indicator',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption extends _MatOptionBase {\n  constructor(\n    element: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) parent: MatOptionParentComponent,\n    @Optional() @Inject(MAT_OPTGROUP) group: MatOptgroup) {\n    super(element, changeDetectorRef, parent, group);\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionOffset: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/**\n * Type for the available floatLabel values.\n * @deprecated Use `FloatLabelType` from `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n  OCT = 9, NOV = 10, DEC = 11;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './version';\nexport * from './animation/animation';\nexport * from './common-behaviors/index';\nexport * from './datetime/index';\nexport * from './error/error-options';\nexport * from './line/line';\nexport * from './option/index';\nexport * from './label/label-options';\nexport * from './ripple/index';\nexport * from './selection/index';\n\n// TODO(devversion): remove this with v8\nexport * from './month-constants';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MATERIAL_SANITY_CHECKS_FACTORY as Éµangular_material_src_material_core_core_a} from './common-behaviors/common-module';","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-danger\\\">\\n              <h3 class=\\\"card-title\\\">Notifications</h3>\\n              <p class=\\\"card-category\\\">Handcrafted by our friend\\n                  <a target=\\\"_blank\\\" href=\\\"https://github.com/mouse0270\\\">Robert McIntosh</a>. Please checkout the\\n                  <a href=\\\"http://bootstrap-notify.remabledesigns.com/\\\" target=\\\"_blank\\\">full documentation.</a>\\n              </p>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                      <h4 class=\\\"card-title\\\">Notifications Style</h4>\\n                      <div class=\\\"alert alert-info\\\">\\n                          <span>This is a plain notification</span>\\n                      </div>\\n                      <div class=\\\"alert alert-info\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>This is a notification with close button.</span>\\n                      </div>\\n                      <div class=\\\"alert alert-info alert-with-icon\\\" data-notify=\\\"container\\\">\\n                          <i class=\\\"material-icons\\\" data-notify=\\\"icon\\\">add_alert</i>\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span data-notify=\\\"message\\\">This is a notification with close button and icon.</span>\\n                      </div>\\n                      <div class=\\\"alert alert-info alert-with-icon\\\" data-notify=\\\"container\\\">\\n                          <i class=\\\"material-icons\\\" data-notify=\\\"icon\\\">add_alert</i>\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span data-notify=\\\"message\\\">This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.</span>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                      <h4 class=\\\"card-title\\\">Notification states</h4>\\n                      <div class=\\\"alert alert-info\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>\\n                              <b> Info - </b> This is a regular notification made with \\\".alert-info\\\"</span>\\n                      </div>\\n                      <div class=\\\"alert alert-success\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>\\n                              <b> Success - </b> This is a regular notification made with \\\".alert-success\\\"</span>\\n                      </div>\\n                      <div class=\\\"alert alert-warning\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>\\n                              <b> Warning - </b> This is a regular notification made with \\\".alert-warning\\\"</span>\\n                      </div>\\n                      <div class=\\\"alert alert-danger\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>\\n                              <b> Danger - </b> This is a regular notification made with \\\".alert-danger\\\"</span>\\n                      </div>\\n                      <div class=\\\"alert alert-primary\\\">\\n                          <button mat-button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                              <i class=\\\"material-icons\\\">close</i>\\n                          </button>\\n                          <span>\\n                              <b> Primary - </b> This is a regular notification made with \\\".alert-primary\\\"</span>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n              <div class=\\\"places-buttons\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 ml-auto mr-auto text-center\\\">\\n                          <h4 class=\\\"card-title\\\">\\n                              Notifications Places\\n                              <p class=\\\"category\\\">Click to view notifications</p>\\n                          </h4>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-8 col-md-10 ml-auto mr-auto\\\">\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('top','left')\\\">Top Left</button>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('top','center')\\\">Top Center</button>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('top','right')\\\">Top Right</button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-8 col-md-10 ml-auto mr-auto\\\">\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('bottom','left')\\\">Bottom Left</button>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('bottom','center')\\\">Bottom Center</button>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                  <button mat-raised-button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"showNotification('bottom','right')\\\">Bottom Right</button>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const MAC_ENTER = 3;\nexport const BACKSPACE = 8;\nexport const TAB = 9;\nexport const NUM_CENTER = 12;\nexport const ENTER = 13;\nexport const SHIFT = 16;\nexport const CONTROL = 17;\nexport const ALT = 18;\nexport const PAUSE = 19;\nexport const CAPS_LOCK = 20;\nexport const ESCAPE = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT_ARROW = 37;\nexport const UP_ARROW = 38;\nexport const RIGHT_ARROW = 39;\nexport const DOWN_ARROW = 40;\nexport const PLUS_SIGN = 43;\nexport const PRINT_SCREEN = 44;\nexport const INSERT = 45;\nexport const DELETE = 46;\nexport const ZERO = 48;\nexport const ONE = 49;\nexport const TWO = 50;\nexport const THREE = 51;\nexport const FOUR = 52;\nexport const FIVE = 53;\nexport const SIX = 54;\nexport const SEVEN = 55;\nexport const EIGHT = 56;\nexport const NINE = 57;\nexport const FF_SEMICOLON = 59;     // Firefox (Gecko) fires this for semicolon instead of 186\nexport const FF_EQUALS = 61;        // Firefox (Gecko) fires this for equals instead of 187\nexport const QUESTION_MARK = 63;\nexport const AT_SIGN = 64;\nexport const A = 65;\nexport const B = 66;\nexport const C = 67;\nexport const D = 68;\nexport const E = 69;\nexport const F = 70;\nexport const G = 71;\nexport const H = 72;\nexport const I = 73;\nexport const J = 74;\nexport const K = 75;\nexport const L = 76;\nexport const M = 77;\nexport const N = 78;\nexport const O = 79;\nexport const P = 80;\nexport const Q = 81;\nexport const R = 82;\nexport const S = 83;\nexport const T = 84;\nexport const U = 85;\nexport const V = 86;\nexport const W = 87;\nexport const X = 88;\nexport const Y = 89;\nexport const Z = 90;\nexport const META = 91;             // WIN_KEY_LEFT\nexport const MAC_WK_CMD_LEFT = 91;\nexport const MAC_WK_CMD_RIGHT = 93;\nexport const CONTEXT_MENU = 93;\nexport const NUMPAD_ZERO = 96;\nexport const NUMPAD_ONE = 97;\nexport const NUMPAD_TWO = 98;\nexport const NUMPAD_THREE = 99;\nexport const NUMPAD_FOUR = 100;\nexport const NUMPAD_FIVE = 101;\nexport const NUMPAD_SIX = 102;\nexport const NUMPAD_SEVEN = 103;\nexport const NUMPAD_EIGHT = 104;\nexport const NUMPAD_NINE = 105;\nexport const NUMPAD_MULTIPLY = 106;\nexport const NUMPAD_PLUS = 107;\nexport const NUMPAD_MINUS = 109;\nexport const NUMPAD_PERIOD = 110;\nexport const NUMPAD_DIVIDE = 111;\nexport const F1 = 112;\nexport const F2 = 113;\nexport const F3 = 114;\nexport const F4 = 115;\nexport const F5 = 116;\nexport const F6 = 117;\nexport const F7 = 118;\nexport const F8 = 119;\nexport const F9 = 120;\nexport const F10 = 121;\nexport const F11 = 122;\nexport const F12 = 123;\nexport const NUM_LOCK = 144;\nexport const SCROLL_LOCK = 145;\nexport const FIRST_MEDIA = 166;\nexport const FF_MINUS = 173;\nexport const MUTE = 173;            // Firefox (Gecko) fires 181 for MUTE\nexport const VOLUME_DOWN = 174;     // Firefox (Gecko) fires 182 for VOLUME_DOWN\nexport const VOLUME_UP = 175;       // Firefox (Gecko) fires 183 for VOLUME_UP\nexport const FF_MUTE = 181;\nexport const FF_VOLUME_DOWN = 182;\nexport const LAST_MEDIA = 183;\nexport const FF_VOLUME_UP = 183;\nexport const SEMICOLON = 186;       // Firefox (Gecko) fires 59 for SEMICOLON\nexport const EQUALS = 187;          // Firefox (Gecko) fires 61 for EQUALS\nexport const COMMA = 188;\nexport const DASH = 189;            // Firefox (Gecko) fires 173 for DASH/MINUS\nexport const SLASH = 191;\nexport const APOSTROPHE = 192;\nexport const TILDE = 192;\nexport const OPEN_SQUARE_BRACKET = 219;\nexport const BACKSLASH = 220;\nexport const CLOSE_SQUARE_BRACKET = 221;\nexport const SINGLE_QUOTE = 222;\nexport const MAC_META = 224;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ntype ModifierKey = 'altKey' | 'shiftKey' | 'ctrlKey' | 'metaKey';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nexport function hasModifierKey(event: KeyboardEvent, ...modifiers: ModifierKey[]): boolean {\n  if (modifiers.length) {\n    return modifiers.some(modifier => event[modifier]);\n  }\n\n  return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './keycodes';\nexport * from './modifiers';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  coerceElement,\n  BooleanInput\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  Input,\n  NgModule,\n  NgZone,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport {Observable, Subject, Subscription, Observer} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class MutationObserverFactory {\n  create(callback: MutationCallback): MutationObserver | null {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\n}\n\n\n/** An injectable service that allows watching elements for changes to their content. */\n@Injectable({providedIn: 'root'})\nexport class ContentObserver implements OnDestroy {\n  /** Keeps track of the existing MutationObservers so they can be reused. */\n  private _observedElements = new Map<Element, {\n    observer: MutationObserver | null,\n    stream: Subject<MutationRecord[]>,\n    count: number\n  }>();\n\n  constructor(private _mutationObserverFactory: MutationObserverFactory) {}\n\n  ngOnDestroy() {\n    this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n  }\n\n  /**\n   * Observe content changes on an element.\n   * @param element The element to observe for content changes.\n   */\n  observe(element: Element): Observable<MutationRecord[]>;\n\n  /**\n   * Observe content changes on an element.\n   * @param element The element to observe for content changes.\n   */\n  observe(element: ElementRef<Element>): Observable<MutationRecord[]>;\n\n  observe(elementOrRef: Element | ElementRef<Element>): Observable<MutationRecord[]> {\n    const element = coerceElement(elementOrRef);\n\n    return new Observable((observer: Observer<MutationRecord[]>) => {\n      const stream = this._observeElement(element);\n      const subscription = stream.subscribe(observer);\n\n      return () => {\n        subscription.unsubscribe();\n        this._unobserveElement(element);\n      };\n    });\n  }\n\n  /**\n   * Observes the given element by using the existing MutationObserver if available, or creating a\n   * new one if not.\n   */\n  private _observeElement(element: Element): Subject<MutationRecord[]> {\n    if (!this._observedElements.has(element)) {\n      const stream = new Subject<MutationRecord[]>();\n      const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n      if (observer) {\n        observer.observe(element, {\n          characterData: true,\n          childList: true,\n          subtree: true\n        });\n      }\n      this._observedElements.set(element, {observer, stream, count: 1});\n    } else {\n      this._observedElements.get(element)!.count++;\n    }\n    return this._observedElements.get(element)!.stream;\n  }\n\n  /**\n   * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n   * observing this element.\n   */\n  private _unobserveElement(element: Element) {\n    if (this._observedElements.has(element)) {\n      this._observedElements.get(element)!.count--;\n      if (!this._observedElements.get(element)!.count) {\n        this._cleanupObserver(element);\n      }\n    }\n  }\n\n  /** Clean up the underlying MutationObserver for the specified element. */\n  private _cleanupObserver(element: Element) {\n    if (this._observedElements.has(element)) {\n      const {observer, stream} = this._observedElements.get(element)!;\n      if (observer) {\n        observer.disconnect();\n      }\n      stream.complete();\n      this._observedElements.delete(element);\n    }\n  }\n}\n\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\n@Directive({\n  selector: '[cdkObserveContent]',\n  exportAs: 'cdkObserveContent',\n})\nexport class CdkObserveContent implements AfterContentInit, OnDestroy {\n  /** Event emitted for each change in the element's content. */\n  @Output('cdkObserveContent') event = new EventEmitter<MutationRecord[]>();\n\n  /**\n   * Whether observing content is disabled. This option can be used\n   * to disconnect the underlying MutationObserver until it is needed.\n   */\n  @Input('cdkObserveContentDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n  private _disabled = false;\n\n  /** Debounce interval for emitting the changes. */\n  @Input()\n  get debounce(): number { return this._debounce; }\n  set debounce(value: number) {\n    this._debounce = coerceNumberProperty(value);\n    this._subscribe();\n  }\n  private _debounce: number;\n\n  private _currentSubscription: Subscription | null = null;\n\n  constructor(private _contentObserver: ContentObserver,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngAfterContentInit() {\n    if (!this._currentSubscription && !this.disabled) {\n      this._subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n\n  private _subscribe() {\n    this._unsubscribe();\n    const stream = this._contentObserver.observe(this._elementRef);\n\n    // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n    // Consider brining it back inside the zone next time we're making breaking changes.\n    // Bringing it back inside can cause things like infinite change detection loops and changed\n    // after checked errors if people's code isn't handling it properly.\n    this._ngZone.runOutsideAngular(() => {\n      this._currentSubscription =\n          (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    });\n  }\n\n  private _unsubscribe() {\n    if (this._currentSubscription) {\n      this._currentSubscription.unsubscribe();\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_debounce: BooleanInput;\n}\n\n\n@NgModule({\n  exports: [CdkObserveContent],\n  declarations: [CdkObserveContent],\n  providers: [MutationObserverFactory]\n})\nexport class ObserversModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './observe-content';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-warning card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">coronavirus</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">{{ConfirmedTitle}}</p>\\n                        <h3 class=\\\"card-title\\\">{{ConfirmedNb}}</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">update</i> Just Updated\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">cancel</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">{{DeathTitle}}</p>\\n                        <h3 class=\\\"card-title\\\">{{DeathNb}}</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">date_range</i> Last 24 Hours\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">masks</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">{{RecoveredTitle}}</p>\\n                        <h3 class=\\\"card-title\\\">{{RecoveredNb}}</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">date_range</i> Last 24 Hours\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-info card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"fa fa-twitter\\\"></i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Followers</p>\\n                        <h3 class=\\\"card-title\\\">\\n                            <div class=\\\"row\\\">\\n                                <label for=\\\"file\\\">Downloading progress:</label>\\n                                <progress id=\\\"file\\\" value=\\\"32\\\" max=\\\"100\\\"> 32% </progress>\\n                                <!--\\n                                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"3px\\\" style=\\\"width: 100%\\\">\\n                                    <div fxFlex=\\\"64.32\\\" class=\\\"healed\\\"></div>\\n                                    <div fxFlex=\\\"33.37\\\" class=\\\"ongoing\\\"></div>\\n                                    <div fxFlex=\\\"2.31\\\" class=\\\"dead\\\"></div>\\n                                </div>\\n                            -->\\n                            </div>\\n                        </h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">update</i> Just Updated\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card card-chart\\\">\\n                    <div class=\\\"card-header card-header-success\\\">\\n                        <div class=\\\"ct-chart\\\" id=\\\"dailySalesChart\\\"></div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <h4 class=\\\"card-title\\\">Daily Sales</h4>\\n                        <p class=\\\"card-category\\\">\\n                            <span class=\\\"text-success\\\"><i class=\\\"fa fa-long-arrow-up\\\"></i> 55% </span> increase in today\\n                            sales.</p>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">access_time</i> updated 4 minutes ago\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card card-chart\\\">\\n                    <div class=\\\"card-header card-header-warning\\\">\\n                        <div class=\\\"ct-chart\\\" id=\\\"websiteViewsChart\\\"></div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <h4 class=\\\"card-title\\\">Email Subscriptions</h4>\\n                        <p class=\\\"card-category\\\">Last Campaign Performance</p>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card card-chart\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <div class=\\\"ct-chart\\\" id=\\\"completedTasksChart\\\"></div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <h4 class=\\\"card-title\\\">Completed Tasks</h4>\\n                        <p class=\\\"card-category\\\">Last Campaign Performance</p>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-tabs card-header-primary\\\">\\n                        <div class=\\\"nav-tabs-navigation\\\">\\n                            <div class=\\\"nav-tabs-wrapper\\\">\\n                                <span class=\\\"nav-tabs-title\\\">Tasks:</span>\\n                                <ul class=\\\"nav nav-tabs\\\" data-tabs=\\\"tabs\\\">\\n                                    <li class=\\\"nav-item\\\">\\n                                        <a mat-button class=\\\"nav-link active\\\" href=\\\"#profile\\\" data-toggle=\\\"tab\\\">\\n                                            <i class=\\\"material-icons\\\">bug_report</i> Bugs\\n                                            <div class=\\\"ripple-container\\\"></div>\\n                                        </a>\\n                                    </li>\\n                                    <li class=\\\"nav-item\\\">\\n                                        <a mat-button class=\\\"nav-link\\\" href=\\\"#messages\\\" data-toggle=\\\"tab\\\">\\n                                            <i class=\\\"material-icons\\\">code</i> Website\\n                                            <div class=\\\"ripple-container\\\"></div>\\n                                        </a>\\n                                    </li>\\n                                    <li class=\\\"nav-item\\\">\\n                                        <a mat-button class=\\\"nav-link\\\" href=\\\"#settings\\\" data-toggle=\\\"tab\\\">\\n                                            <i class=\\\"material-icons\\\">cloud</i> Server\\n                                            <div class=\\\"ripple-container\\\"></div>\\n                                        </a>\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"tab-content\\\">\\n                            <div class=\\\"tab-pane active\\\" id=\\\"profile\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                            checked>\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Flooded: One year later, assessing what was lost and what was found when\\n                                                a ravaging rain swept through metro Detroit\\n                                            </td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                            checked>\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Create 4 Invisible User Experiences you Never Knew About</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                            <div class=\\\"tab-pane\\\" id=\\\"messages\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                            checked>\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Flooded: One year later, assessing what was lost and what was found when\\n                                                a ravaging rain swept through metro Detroit\\n                                            </td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                            <div class=\\\"tab-pane\\\" id=\\\"settings\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                            checked>\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Flooded: One year later, assessing what was lost and what was found when\\n                                                a ravaging rain swept through metro Detroit\\n                                            </td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td>\\n                                                <div class=\\\"form-check\\\">\\n                                                    <label class=\\\"form-check-label\\\">\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\"\\n                                                            checked>\\n                                                        <span class=\\\"form-check-sign\\\">\\n                                                            <span class=\\\"check\\\"></span>\\n                                                        </span>\\n                                                    </label>\\n                                                </div>\\n                                            </td>\\n                                            <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\n                                            <td class=\\\"td-actions text-right\\\">\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </button>\\n                                                <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\"\\n                                                    [matTooltipPosition]=\\\"'above'\\\"\\n                                                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                                    <i class=\\\"material-icons\\\">close</i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-warning\\\">\\n                        <h4 class=\\\"card-title\\\">Countries</h4>\\n                        <p class=\\\"card-category\\\">Countries with most cases</p>\\n                    </div>\\n                    <div class=\\\"card-body table-responsive\\\">\\n                        <table class=\\\"table table-hover\\\">\\n                            <thead class=\\\"text-warning\\\">\\n                                <th>ID</th>\\n                                <th>Name</th>\\n                                <th>Cases</th>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let country of countries | slice:0:5\\\">\\n                                    <td>{{country.id}}</td>\\n                                    <td>{{country.name}}</td>\\n                                    <td>{{country.sick}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\nimport { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTooltipModule,\n  ],\n  declarations: [\n    DashboardComponent,\n    UserProfileComponent,\n    TableListComponent,\n    TypographyComponent,\n    IconsComponent,\n    MapsComponent,\n    NotificationsComponent,\n    UpgradeComponent,\n  ]\n})\n\nexport class AdminLayoutModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZ3JhZGUvdXBncmFkZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header card-header-danger\\\">\\n            <h4 class=\\\"card-title\\\">Material Dashboard Heading</h4>\\n            <p class=\\\"card-category\\\">Created using Roboto Font Family</p>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div id=\\\"typography\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h2>Typography</h2>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"tim-typo\\\">\\n                        <h1>\\n                            <span class=\\\"tim-note\\\">Header 1</span>The Life of Material Dashboard </h1>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h2>\\n                            <span class=\\\"tim-note\\\">Header 2</span>The Life of Material Dashboard</h2>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h3>\\n                            <span class=\\\"tim-note\\\">Header 3</span>The Life of Material Dashboard</h3>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h4>\\n                            <span class=\\\"tim-note\\\">Header 4</span>The Life of Material Dashboard</h4>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h5>\\n                            <span class=\\\"tim-note\\\">Header 5</span>The Life of Material Dashboard</h5>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h6>\\n                            <span class=\\\"tim-note\\\">Header 6</span>The Life of Material Dashboard</h6>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <p>\\n                            <span class=\\\"tim-note\\\">Paragraph</span>\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.</p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Quote</span>\\n                        <blockquote class=\\\"blockquote\\\">\\n                            <p>\\n                                I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\\n                            </p>\\n                            <small>\\n                                Kanye West, Musician\\n                            </small>\\n                        </blockquote>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Muted Text</span>\\n                        <p class=\\\"text-muted\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\\n                        </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Primary Text</span>\\n                        <p class=\\\"text-primary\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Info Text</span>\\n                        <p class=\\\"text-info\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Success Text</span>\\n                        <p class=\\\"text-success\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Warning Text</span>\\n                        <p class=\\\"text-warning\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\\n                        </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <span class=\\\"tim-note\\\">Danger Text</span>\\n                        <p class=\\\"text-danger\\\">\\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\\n                    </div>\\n                    <div class=\\\"tim-typo\\\">\\n                        <h2>\\n                            <span class=\\\"tim-note\\\">Small Tag</span>\\n                            Header with small subtitle\\n                            <br>\\n                            <small>Use \\\"small\\\" tag for the headers</small>\\n                        </h2>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8 ml-auto mr-auto\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Material Dashboard PRO Angular</h4>\\n                        <p class=\\\"card-category\\\">Are you looking for more components? Please check our Premium Version of Material Dashboard Angular.</p>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"table-responsive table-upgrade\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th></th>\\n                                        <th class=\\\"text-center\\\">Free</th>\\n                                        <th class=\\\"text-center\\\">PRO</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr>\\n                                        <td>Components</td>\\n                                        <td class=\\\"text-center\\\">60</td>\\n                                        <td class=\\\"text-center\\\">200</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Plugins</td>\\n                                        <td class=\\\"text-center\\\">2</td>\\n                                        <td class=\\\"text-center\\\">15</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Example Pages</td>\\n                                        <td class=\\\"text-center\\\">3</td>\\n                                        <td class=\\\"text-center\\\">27</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Login, Register, Pricing, Lock Pages</td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-times text-danger\\\"></i></td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-check text-success\\\"></i></td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>DataTables, VectorMap, SweetAlert, Wizard, jQueryValidation, FullCalendar etc...</td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-times text-danger\\\"></i></td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-check text-success\\\"></i></td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Mini Sidebar</td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-times text-danger\\\"></i></td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-check text-success\\\"></i></td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>Premium Support</td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-times text-danger\\\"></i></td>\\n                                        <td class=\\\"text-center\\\"><i class=\\\"fa fa-check text-success\\\"></i></td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td></td>\\n                                        <td class=\\\"text-center\\\">Free</td>\\n                                        <td class=\\\"text-center\\\">Just $59</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td class=\\\"text-center\\\"></td>\\n                                        <td class=\\\"text-center\\\">\\n                                            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-round btn-fill btn-default disabled\\\">Current Version</a>\\n                                        </td>\\n                                        <td class=\\\"text-center\\\">\\n                                            <a target=\\\"_blank\\\" href=\\\"https://www.creative-tim.com/product/material-dashboard-pro-angular2?ref=md-free-angular-upgrade-live\\\" class=\\\"btn btn-round btn-fill btn-info\\\">Upgrade to PRO</a>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\nimport * as Chartist from 'chartist';\nimport { ICountries } from '../Countries'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    ConfirmedTitle = 'Confirmed Case';\n    ConfirmedNb = 64498634;\n\n    DeathTitle = 'Deaths';\n    DeathNb = 1492893;\n\n\n    RecoveredTitle = 'Recovered';\n    RecoveredNb  = 41485124;\n\n    countries: Array<ICountries> = [\n        {id: 1, name: 'France', sick: 200},\n        {id: 2, name: 'Espagne', sick: 200},\n        {id: 3, name: 'Chili', sick: 200},\n        {id: 4, name: 'Guatemala', sick: 200},\n    ];\n\n\n\n\n    constructor() { }\n  startAnimationForLineChart(chart) {\n      let seq: any, delays: any, durations: any;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n\n      chart.on('draw', function(data) {\n        if (data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === 'point') {\n              seq++;\n              data.element.animate({\n                opacity: {\n                  begin: seq * delays,\n                  dur: durations,\n                  from: 0,\n                  to: 1,\n                  easing: 'ease'\n                }\n              });\n          }\n      });\n\n      seq = 0;\n  };\n  startAnimationForBarChart(chart) {\n      let seq2: any, delays2: any, durations2: any;\n\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function(data) {\n        if (data.type === 'bar') {\n            seq2++;\n            data.element.animate({\n              opacity: {\n                begin: seq2 * delays2,\n                dur: durations2,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            });\n        }\n      });\n\n      seq2 = 0;\n  };\n  ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n      const Title = 'Test';\n      const dataDailySalesChart: any = {\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n          series: [\n              [12, 17, 7, 17, 23, 18, 38]\n          ]\n      };\n\n     const optionsDailySalesChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\n      }\n\n      let dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n\n      this.startAnimationForLineChart(dailySalesChart);\n\n\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      const dataCompletedTasksChart: any = {\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n          series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n          ]\n      };\n\n     const optionsCompletedTasksChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\n      }\n\n      let completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\n\n      // start animation for the Completed Tasks Chart - Line Chart\n      this.startAnimationForLineChart(completedTasksChart);\n\n\n\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      let datawebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n        ]\n      };\n      let optionswebsiteViewsChart = {\n          axisX: {\n              showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\n      };\n      let responsiveOptions: any[] = [\n        ['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function (value) {\n              return value[0];\n            }\n          }\n        }]\n      ];\n      let websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\n\n      // start animation for the Emails Subscription Chart\n      this.startAnimationForBarChart(websiteViewsChart);\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <div class=\\\"card\\\">\\n                  <div class=\\\"card-header card-header-danger\\\">\\n                      <h4 class=\\\"card-title \\\">Simple Table</h4>\\n                      <p class=\\\"card-category\\\"> Here is a subtitle for this table</p>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                      <div class=\\\"table-responsive\\\">\\n                          <table class=\\\"table\\\">\\n                              <thead class=\\\" text-primary\\\">\\n                                  <th>\\n                                      ID\\n                                  </th>\\n                                  <th>\\n                                      Name\\n                                  </th>\\n                                  <th>\\n                                      Country\\n                                  </th>\\n                                  <th>\\n                                      City\\n                                  </th>\\n                                  <th>\\n                                      Salary\\n                                  </th>\\n                              </thead>\\n                              <tbody>\\n                                  <tr>\\n                                      <td>\\n                                          1\\n                                      </td>\\n                                      <td>\\n                                          Dakota Rice\\n                                      </td>\\n                                      <td>\\n                                          Niger\\n                                      </td>\\n                                      <td>\\n                                          Oud-Turnhout\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $36,738\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          2\\n                                      </td>\\n                                      <td>\\n                                          Minerva Hooper\\n                                      </td>\\n                                      <td>\\n                                          Curaçao\\n                                      </td>\\n                                      <td>\\n                                          Sinaai-Waas\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $23,789\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          3\\n                                      </td>\\n                                      <td>\\n                                          Sage Rodriguez\\n                                      </td>\\n                                      <td>\\n                                          Netherlands\\n                                      </td>\\n                                      <td>\\n                                          Baileux\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $56,142\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          4\\n                                      </td>\\n                                      <td>\\n                                          Philip Chaney\\n                                      </td>\\n                                      <td>\\n                                          Korea, South\\n                                      </td>\\n                                      <td>\\n                                          Overland Park\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $38,735\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          5\\n                                      </td>\\n                                      <td>\\n                                          Doris Greene\\n                                      </td>\\n                                      <td>\\n                                          Malawi\\n                                      </td>\\n                                      <td>\\n                                          Feldkirchen in Kärnten\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $63,542\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          6\\n                                      </td>\\n                                      <td>\\n                                          Mason Porter\\n                                      </td>\\n                                      <td>\\n                                          Chile\\n                                      </td>\\n                                      <td>\\n                                          Gloucester\\n                                      </td>\\n                                      <td class=\\\"text-primary\\\">\\n                                          $78,615\\n                                      </td>\\n                                  </tr>\\n                              </tbody>\\n                          </table>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n              <div class=\\\"card card-plain\\\">\\n                  <div class=\\\"card-header card-header-danger\\\">\\n                      <h4 class=\\\"card-title mt-0\\\"> Table on Plain Background</h4>\\n                      <p class=\\\"card-category\\\"> Here is a subtitle for this table</p>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                      <div class=\\\"table-responsive\\\">\\n                          <table class=\\\"table table-hover\\\">\\n                              <thead class=\\\"\\\">\\n                                  <th>\\n                                      ID\\n                                  </th>\\n                                  <th>\\n                                      Name\\n                                  </th>\\n                                  <th>\\n                                      Country\\n                                  </th>\\n                                  <th>\\n                                      City\\n                                  </th>\\n                                  <th>\\n                                      Salary\\n                                  </th>\\n                              </thead>\\n                              <tbody>\\n                                  <tr>\\n                                      <td>\\n                                          1\\n                                      </td>\\n                                      <td>\\n                                          Dakota Rice\\n                                      </td>\\n                                      <td>\\n                                          Niger\\n                                      </td>\\n                                      <td>\\n                                          Oud-Turnhout\\n                                      </td>\\n                                      <td>\\n                                          $36,738\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          2\\n                                      </td>\\n                                      <td>\\n                                          Minerva Hooper\\n                                      </td>\\n                                      <td>\\n                                          Curaçao\\n                                      </td>\\n                                      <td>\\n                                          Sinaai-Waas\\n                                      </td>\\n                                      <td>\\n                                          $23,789\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          3\\n                                      </td>\\n                                      <td>\\n                                          Sage Rodriguez\\n                                      </td>\\n                                      <td>\\n                                          Netherlands\\n                                      </td>\\n                                      <td>\\n                                          Baileux\\n                                      </td>\\n                                      <td>\\n                                          $56,142\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          4\\n                                      </td>\\n                                      <td>\\n                                          Philip Chaney\\n                                      </td>\\n                                      <td>\\n                                          Korea, South\\n                                      </td>\\n                                      <td>\\n                                          Overland Park\\n                                      </td>\\n                                      <td>\\n                                          $38,735\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          5\\n                                      </td>\\n                                      <td>\\n                                          Doris Greene\\n                                      </td>\\n                                      <td>\\n                                          Malawi\\n                                      </td>\\n                                      <td>\\n                                          Feldkirchen in Kärnten\\n                                      </td>\\n                                      <td>\\n                                          $63,542\\n                                      </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                          6\\n                                      </td>\\n                                      <td>\\n                                          Mason Porter\\n                                      </td>\\n                                      <td>\\n                                          Chile\\n                                      </td>\\n                                      <td>\\n                                          Gloucester\\n                                      </td>\\n                                      <td>\\n                                          $78,615\\n                                      </td>\\n                                  </tr>\\n                              </tbody>\\n                          </table>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\n    ]))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\n\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\n/** Possible positions for a tooltip. */\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/**\n * Options for how the tooltip trigger should handle touch gestures.\n * See `MatTooltip.touchGestures` for more information.\n */\nexport type TooltipTouchGestures = 'auto' | 'on' | 'off';\n\n/** Possible visibility states of a tooltip. */\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n  touchGestures?: TooltipTouchGestures;\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\n      providedIn: 'root',\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n  };\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    'class': 'mat-tooltip-trigger'\n  }\n})\nexport class MatTooltip implements OnDestroy, AfterViewInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _portal: ComponentPortal<TooltipComponent>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  private _scrollStrategy: () => ScrollStrategy;\n  private _viewInitialized = false;\n  private _pointerExitEventsInitialized = false;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance!.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay: number = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay: number = this._defaultOptions.hideDelay;\n\n  /**\n   * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n   * uses a long press gesture to show and hide, however it can conflict with the native browser\n   * gestures. To work around the conflict, Angular Material disables native gestures on the\n   * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n   * elements). The different values for this option configure the touch event handling as follows:\n   * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n   *   browser gestures on particular elements. In particular, it allows text selection on inputs\n   *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n   * - `on` - Enables touch gestures for all elements and disables native\n   *   browser gestures with no exceptions.\n   * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n   *   showing on touch devices.\n   */\n  @Input('matTooltipTouchGestures') touchGestures: TooltipTouchGestures = 'auto';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n      this._updateTooltipMessage();\n      this._ngZone.runOutsideAngular(() => {\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        Promise.resolve().then(() => {\n          this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n        });\n      });\n    }\n  }\n  private _message = '';\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  /** Manually-bound passive event listeners. */\n  private readonly _passiveListeners:\n      (readonly [string, EventListenerOrEventListenerObject])[] = [];\n\n  /** Timer started at the last `touchstart` event. */\n  private _touchstartTimeout: number;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: MatTooltipDefaultOptions) {\n\n    this._scrollStrategy = scrollStrategy;\n\n    if (_defaultOptions) {\n      if (_defaultOptions.position) {\n        this.position = _defaultOptions.position;\n      }\n\n      if (_defaultOptions.touchGestures) {\n        this.touchGestures = _defaultOptions.touchGestures;\n      }\n    }\n\n    _ngZone.runOutsideAngular(() => {\n      _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n    });\n  }\n\n  ngAfterViewInit() {\n    // This needs to happen after view init so the initial values for all inputs have been set.\n    this._viewInitialized = true;\n    this._setupPointerEnterEventsIfNeeded();\n\n    this._focusMonitor.monitor(this._elementRef)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(origin => {\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this._ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this._ngZone.run(() => this.show());\n        }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    const nativeElement = this._elementRef.nativeElement;\n\n    clearTimeout(this._touchstartTimeout);\n\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    nativeElement.removeEventListener('keydown', this._handleKeydown);\n    this._passiveListeners.forEach(([event, listener]) => {\n      nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n    });\n    this._passiveListeners.length = 0;\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(nativeElement);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance!._showTimeoutId && !this._tooltipInstance!._hideTimeoutId)) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /**\n   * Handles the keydown events on the host element.\n   * Needs to be an arrow function so that we can use it in addEventListener.\n   */\n  private _handleKeydown = (event: KeyboardEvent) => {\n    if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._ngZone.run(() => this.hide(0));\n    }\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withTransformOriginOn('.mat-tooltip')\n                         .withFlexibleDimensions(false)\n                         .withViewportMargin(8)\n                         .withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {...origin.main, ...overlay.main},\n      {...origin.fallback, ...overlay.fallback}\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition!.originX, originPosition!.originY);\n\n    return {\n      main: originPosition!,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition!.overlayX, overlayPosition!.overlayY);\n\n    return {\n      main: overlayPosition!,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n\n  /** Binds the pointer events to the tooltip trigger. */\n  private _setupPointerEnterEventsIfNeeded() {\n    // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n    if (this._disabled || !this.message || !this._viewInitialized ||\n        this._passiveListeners.length) {\n      return;\n    }\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (this._platformSupportsMouseEvents()) {\n      this._passiveListeners\n          .push(['mouseenter', () => {\n            this._setupPointerExitEventsIfNeeded();\n            this.show();\n          }]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n\n      this._passiveListeners\n          .push(['touchstart', () => {\n            // Note that it's important that we don't `preventDefault` here,\n            // because it can prevent click events from firing on the element.\n            this._setupPointerExitEventsIfNeeded();\n            clearTimeout(this._touchstartTimeout);\n            this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n          }]);\n    }\n\n    this._addListeners(this._passiveListeners);\n  }\n\n  private _setupPointerExitEventsIfNeeded() {\n    if (this._pointerExitEventsInitialized) {\n      return;\n    }\n    this._pointerExitEventsInitialized = true;\n\n    const exitListeners: (readonly [string, EventListenerOrEventListenerObject])[] = [];\n    if (this._platformSupportsMouseEvents()) {\n      exitListeners.push(['mouseleave', () => this.hide()]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      const touchendListener = () => {\n        clearTimeout(this._touchstartTimeout);\n        this.hide(this._defaultOptions.touchendHideDelay);\n      };\n\n      exitListeners.push(\n        ['touchend', touchendListener],\n        ['touchcancel', touchendListener],\n      );\n    }\n\n    this._addListeners(exitListeners);\n    this._passiveListeners.push(...exitListeners);\n  }\n\n  private _addListeners(\n      listeners: ReadonlyArray<readonly [string, EventListenerOrEventListenerObject]>) {\n    listeners.forEach(([event, listener]) => {\n      this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n    });\n  }\n\n  private _platformSupportsMouseEvents() {\n    return !this._platform.IOS && !this._platform.ANDROID;\n  }\n\n  /** Disables the native browser gestures, based on how the tooltip has been configured. */\n  private _disableNativeGesturesIfNecessary() {\n    const gestures = this.touchGestures;\n\n    if (gestures !== 'off') {\n      const element = this._elementRef.nativeElement;\n      const style = element.style;\n\n      // If gestures are set to `auto`, we don't disable text selection on inputs and\n      // textareas, because it prevents the user from typing into them on iOS Safari.\n      if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n        style.userSelect = (style as any).msUserSelect = style.webkitUserSelect =\n            (style as any).MozUserSelect = 'none';\n      }\n\n      // If we have `auto` gestures and the element uses native HTML dragging,\n      // we don't set `-webkit-user-drag` because it prevents the native behavior.\n      if (gestures === 'on' || !element.draggable) {\n        (style as any).webkitUserDrag = 'none';\n      }\n\n      style.touchAction = 'none';\n      style.webkitTapHighlightColor = 'transparent';\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_hideDelay: NumberInput;\n  static ngAcceptInputType_showDelay: NumberInput;\n}\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent implements OnDestroy {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number | null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number | null;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<void> = new Subject();\n\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide;\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  ngOnDestroy() {\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {\n  MatTooltip,\n  TooltipComponent,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatTooltipModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tooltip-module';\nexport * from './tooltip';\nexport * from './tooltip-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\">\\n              <div class=\\\"card\\\">\\n                  <div class=\\\"card-header card-header-danger\\\">\\n                      <h4 class=\\\"card-title\\\">Edit Profile</h4>\\n                      <p class=\\\"card-category\\\">Complete your profile</p>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                      <form>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Company (disabled)\\\" disabled>\\n                                  </mat-form-field>\\n                              </div>\\n                              <div class=\\\"col-md-3\\\">\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Username\\\">\\n                                  </mat-form-field>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                  <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\">\\n                                  </mat-form-field>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Fist Name\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-12\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Adress\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"City\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Country\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                              <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <input matInput placeholder=\\\"Postal Code\\\" type=\\\"text\\\">\\n                                </mat-form-field>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-12\\\">\\n                                <label>About Me</label>\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                   <textarea matInput placeholder=\\\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\\\"></textarea>\\n                                 </mat-form-field>\\n                                  <!-- <div class=\\\"form-group\\\">\\n\\n                                      <div class=\\\"form-group\\\">\\n                                          <label class=\\\"bmd-label-floating\\\"> Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.</label>\\n                                          <textarea class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\n                                      </div>\\n                                  </div> -->\\n                              </div>\\n                          </div>\\n                          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">Update Profile</button>\\n                          <div class=\\\"clearfix\\\"></div>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <div class=\\\"card card-profile\\\">\\n                  <div class=\\\"card-avatar\\\">\\n                      <a href=\\\"javascript:void(0)\\\">\\n                          <img class=\\\"img\\\" src=\\\"./assets/img/faces/marc.jpg\\\" />\\n                      </a>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                      <h6 class=\\\"card-category text-gray\\\">CEO / Co-Founder</h6>\\n                      <h4 class=\\\"card-title\\\">Alec Thompson</h4>\\n                      <p class=\\\"card-description\\\">\\n                          Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\\n                      </p>\\n                      <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-danger btn-round\\\">Follow</a>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\";","export default \".healed {\\n    height: 15px;\\n    background-color: #8dd36d;\\n    border-top-left-radius: 100px;\\n    border-bottom-left-radius: 100px;\\n  }\\n  .dead {\\n    height: 15px;\\n    background-color: #d45151;\\n    border-top-right-radius: 100px;\\n    border-bottom-right-radius: 100px;\\n  }\\n  .ongoing {\\n    height: 15px;\\n    background-color: #fdce4b;\\n    background: repeating-linear-gradient(45deg, #f7bc1d,#f7bc1d 10px,#fdce4b 10px,#fdce4b 20px);\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6Qiw2QkFBNkI7SUFDN0IsZ0NBQWdDO0VBQ2xDO0VBQ0E7SUFDRSxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLDhCQUE4QjtJQUM5QixpQ0FBaUM7RUFDbkM7RUFDQTtJQUNFLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsNEZBQTRGO0VBQzlGIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWxlZCB7XG4gICAgaGVpZ2h0OiAxNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGQzNmQ7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTAwcHg7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTAwcHg7XG4gIH1cbiAgLmRlYWQge1xuICAgIGhlaWdodDogMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQ1MTUxO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMDBweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTAwcHg7XG4gIH1cbiAgLm9uZ29pbmcge1xuICAgIGhlaWdodDogMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRjZTRiO1xuICAgIGJhY2tncm91bmQ6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoNDVkZWcsICNmN2JjMWQsI2Y3YmMxZCAxMHB4LCNmZGNlNGIgMTBweCwjZmRjZTRiIDIwcHgpO1xuICB9Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R5cG9ncmFwaHkvdHlwb2dyYXBoeS5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcHMvbWFwcy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upgrade',\n  templateUrl: './upgrade.component.html',\n  styleUrls: ['./upgrade.component.css']\n})\nexport class UpgradeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  CanColorCtor,\n  CanDisableCtor,\n  CanDisableRippleCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n  'mat-button',\n  'mat-flat-button',\n  'mat-icon-button',\n  'mat-raised-button',\n  'mat-stroked-button',\n  'mat-mini-fab',\n  'mat-fab',\n];\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatButtonMixinBase: CanDisableRippleCtor & CanDisableCtor & CanColorCtor &\n    typeof MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n\n/**\n * Material design button.\n */\n@Component({\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n  exportAs: 'matButton',\n  host: {\n    '[attr.disabled]': 'disabled || null',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    // Add a class for disabled button styling instead of the using attribute\n    // selector or pseudo-selector.  This allows users to create focusabled\n    // disabled buttons without recreating the styles.\n    '[class.mat-button-disabled]': 'disabled',\n    'class': 'mat-focus-indicator',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends _MatButtonMixinBase\n    implements AfterViewInit, OnDestroy, CanDisable, CanColor, CanDisableRipple, FocusableOption {\n\n  /** Whether the button is round. */\n  readonly isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n\n  /** Whether the button is icon button. */\n  readonly isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\n\n  /** Reference to the MatRipple instance of the button. */\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string) {\n    super(elementRef);\n\n    // For each of the variant selectors that is present in the button's host\n    // attributes, add the correct corresponding class.\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this._hasHostAttributes(attr)) {\n        (this._getHostElement() as HTMLElement).classList.add(attr);\n      }\n    }\n\n    // Add a class that applies to all buttons. This makes it easier to target if somebody\n    // wants to target all Material buttons. We do it here rather than `host` to ensure that\n    // the class is applied to derived classes.\n    elementRef.nativeElement.classList.add('mat-button-base');\n\n    if (this.isRoundButton) {\n      this.color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the button. */\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  _hasHostAttributes(...attributes: string[]) {\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design anchor button.\n */\n@Component({\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n  exportAs: 'matButton, matAnchor',\n  host: {\n    // Note that we ignore the user-specified tabindex when it's disabled for\n    // consistency with the `mat-button` applied on native buttons where even\n    // though they have an index, they're not tabbable.\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '[class.mat-button-disabled]': 'disabled',\n    'class': 'mat-focus-indicator',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatButton {\n  /** Tabindex of the button. */\n  @Input() tabIndex: number;\n\n  constructor(\n    focusMonitor: FocusMonitor,\n    elementRef: ElementRef,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode: string) {\n    super(elementRef, focusMonitor, animationMode);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatAnchor, MatButton} from './button';\n\n\n@NgModule({\n  imports: [\n    MatRippleModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatButton,\n    MatAnchor,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatButton,\n    MatAnchor,\n  ],\n})\nexport class MatButtonModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './button-module';\nexport * from './button';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {inject, InjectionToken} from '@angular/core';\n\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY,\n});\n\n/** @docs-private */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n  return inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Inject, Injectable, Optional, OnDestroy} from '@angular/core';\nimport {DIR_DOCUMENT} from './dir-document-token';\n\n\nexport type Direction = 'ltr' | 'rtl';\n\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n@Injectable({providedIn: 'root'})\nexport class Directionality implements OnDestroy {\n  /** The current 'ltr' or 'rtl' value. */\n  readonly value: Direction = 'ltr';\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  readonly change = new EventEmitter<Direction>();\n\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter,\n  AfterContentInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n@Directive({\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[attr.dir]': '_rawDir'},\n  exportAs: 'dir',\n})\nexport class Dir implements Directionality, AfterContentInit, OnDestroy {\n  /** Normalized direction that accounts for invalid/unsupported values. */\n  private _dir: Direction = 'ltr';\n\n  /** Whether the `value` has been set to its initial value. */\n  private _isInitialized: boolean = false;\n\n  /** Direction as passed in by the consumer. */\n  _rawDir: string;\n\n  /** Event emitted when the direction changes. */\n  @Output('dirChange') change = new EventEmitter<Direction>();\n\n  /** @docs-private */\n  @Input()\n  get dir(): Direction { return this._dir; }\n  set dir(value: Direction) {\n    const old = this._dir;\n    const normalizedValue = value ? value.toLowerCase() : value;\n\n    this._rawDir = value;\n    this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n\n  /** Current layout direction of the element. */\n  get value(): Direction { return this.dir; }\n\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {Dir} from './dir';\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir],\n})\nexport class BidiModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {Directionality, Direction} from './directionality';\nexport {DIR_DOCUMENT} from './dir-document-token';\nexport {Dir} from './dir';\nexport * from './bidi-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DIR_DOCUMENT_FACTORY as Éµangular_material_src_cdk_bidi_bidi_a} from './dir-document-token';","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  animate,\n  animateChild,\n  AnimationTriggerMetadata,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nexport const matSelectAnimations: {\n  readonly transformPanelWrap: AnimationTriggerMetadata;\n  readonly transformPanel: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: trigger('transformPanelWrap', [\n      transition('* => void', query('@transformPanel', [animateChild()],\n          {optional: true}))\n  ]),\n\n  /**\n   * This animation transforms the select's overlay panel on and off the page.\n   *\n   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n   * side to ensure the option text correctly overlaps the trigger text.\n   *\n   * When the panel is removed from the DOM, it simply fades out linearly.\n   */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      transform: 'scaleY(0.8)',\n      minWidth: '100%',\n      opacity: 0\n    })),\n    state('showing', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\n      transform: 'scaleY(1)'\n    })),\n    state('showing-multiple', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\n      transform: 'scaleY(1)'\n    })),\n    transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMatSelectDynamicMultipleError(): Error {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMatSelectNonArrayValueError(): Error {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMatSelectNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveDescendantKeyManager, LiveAnnouncer} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  A,\n  DOWN_ARROW,\n  ENTER,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  CdkConnectedOverlay,\n  ConnectedPosition,\n  Overlay,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MAT_OPTGROUP,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n  MatOptionSelectionChange,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinErrorState,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\nimport {defer, merge, Observable, Subject} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\nimport {matSelectAnimations} from './select-animations';\nimport {\n  getMatSelectDynamicMultipleError,\n  getMatSelectNonArrayValueError,\n  getMatSelectNonFunctionValueError,\n} from './select-errors';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 16;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 3;\n\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MAT_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-select-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** Object that can be used to configure the default options for the select module. */\nexport interface MatSelectConfig {\n  /** Whether option centering should be disabled. */\n  disableOptionCentering?: boolean;\n\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  typeaheadDebounceInterval?: number;\n}\n\n/** Injection token that can be used to provide the default options the select module. */\nexport const MAT_SELECT_CONFIG = new InjectionToken<MatSelectConfig>('MAT_SELECT_CONFIG');\n\n/** @docs-private */\nexport const MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class MatSelectChange {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: MatSelect,\n    /** Current value of the select that emitted the event. */\n    public value: any) { }\n}\n\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n  constructor(public _elementRef: ElementRef,\n              public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              public ngControl: NgControl) {}\n}\nconst _MatSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanDisableRippleCtor &\n    CanUpdateErrorStateCtor &\n    typeof MatSelectBase =\n        mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n\n\n\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_SELECT_TRIGGER = new InjectionToken<MatSelectTrigger>('MatSelectTrigger');\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({\n  selector: 'mat-select-trigger',\n  providers: [{provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger}],\n})\nexport class MatSelectTrigger {}\n\n@Component({\n  selector: 'mat-select',\n  exportAs: 'matSelect',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'combobox',\n    'aria-autocomplete': 'none',\n    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n    // to sync into g3, because of an outdated automated a11y check which flags it as an invalid\n    // value. At some point we should try to switch it back to being `listbox`. When doing the\n    // MDC-based `mat-select`, we can get away with starting it off as `listbox`.\n    'aria-haspopup': 'true',\n    'class': 'mat-select',\n    '[attr.id]': 'id',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select-invalid]': 'errorState',\n    '[class.mat-select-required]': 'required',\n    '[class.mat-select-empty]': 'empty',\n    '[class.mat-select-multiple]': 'multiple',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    matSelectAnimations.transformPanelWrap,\n    matSelectAnimations.transformPanel\n  ],\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatSelect},\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect}\n  ],\n})\nexport class MatSelect extends _MatSelectMixinBase implements AfterContentInit, OnChanges,\n    OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable, HasTabIndex,\n    MatFormFieldControl<any>, CanUpdateErrorState, CanDisableRipple {\n  private _scrollStrategyFactory: () => ScrollStrategy;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** Whether filling out the select is required in the form. */\n  private _required: boolean = false;\n\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\n  private _scrollTop = 0;\n\n  /** The placeholder displayed in the trigger of the select. */\n  private _placeholder: string;\n\n  /** Whether the component is in multiple selection mode. */\n  private _multiple: boolean = false;\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /** Unique id for this input. */\n  private _uid = `mat-select-${nextUniqueId++}`;\n\n  /** Current `ariar-labelledby` value for the select trigger. */\n  private _triggerAriaLabelledBy: string | null = null;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** The aria-describedby attribute on the select for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** The cached font-size of the trigger element. */\n  _triggerFontSize = 0;\n\n  /** Deals with the selection logic. */\n  _selectionModel: SelectionModel<MatOption>;\n\n  /** Manages keyboard events for options in the panel. */\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n\n  _valueId = `mat-select-value-${nextUniqueId++}`;\n\n  /** The value of the select panel's transform-origin property. */\n  _transformOrigin: string = 'top';\n\n  /** Emits when the panel element is finished transforming in. */\n  _panelDoneAnimatingStream = new Subject<string>();\n\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\n  _scrollStrategy: ScrollStrategy;\n\n  /**\n   * The y-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text.\n   * when the panel opens. Will change based on the y-position of the selected option.\n   */\n  _offsetY = 0;\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions: ConnectedPosition[] = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n\n  /** Whether the component is disabling centering of the active option over the trigger. */\n  private _disableOptionCentering: boolean = false;\n\n  /** Whether the select is focused. */\n  get focused(): boolean {\n    return this._focused || this._panelOpen;\n  }\n  private _focused = false;\n\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mat-select';\n\n  /** Trigger that opens the select. */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** Panel containing the select options. */\n  @ViewChild('panel') panel: ElementRef;\n\n  /**\n   * Overlay pane containing the options.\n   * @deprecated To be turned into a private API.\n   * @breaking-change 10.0.0\n   * @docs-private\n   */\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  /** All of the defined select options. */\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n\n  /** All of the defined groups of options. */\n  @ContentChildren(MAT_OPTGROUP, {descendants: true}) optionGroups: QueryList<MatOptgroup>;\n\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** User-supplied override of the trigger element. */\n  @ContentChild(MAT_SELECT_TRIGGER) customTrigger: MatSelectTrigger;\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /** Whether the component is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n\n  /** Whether to center the active option over the trigger. */\n  @Input()\n  get disableOptionCentering(): boolean { return this._disableOptionCentering; }\n  set disableOptionCentering(value: boolean) {\n    this._disableOptionCentering = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  /** Value of the select control. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n\n      this._value = newValue;\n    }\n  }\n  private _value: any;\n\n  /** Aria label of the select. If not specified, the placeholder will be used as label. */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  @Input()\n  get typeaheadDebounceInterval(): number { return this._typeaheadDebounceInterval; }\n  set typeaheadDebounceInterval(value: number) {\n    this._typeaheadDebounceInterval = coerceNumberProperty(value);\n  }\n  private _typeaheadDebounceInterval: number;\n\n  /**\n   * Function used to sort the values in a select in multiple mode.\n   * Follows the same logic as `Array.prototype.sort`.\n   */\n  @Input() sortComparator: (a: MatOption, b: MatOption, options: MatOption[]) => number;\n\n  /** Unique id of the element. */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  private _id: string;\n\n  /** Combined stream of all of the child options' change events. */\n  readonly optionSelectionChanges: Observable<MatOptionSelectionChange> = defer(() => {\n    const options = this.options;\n\n    if (options) {\n      return options.changes.pipe(\n        startWith(options),\n        switchMap(() => merge(...options.map(option => option.onSelectionChange)))\n      );\n    }\n\n    return this._ngZone.onStable\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  }) as Observable<MatOptionSelectionChange>;\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => o), map(() => {}));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => !o), map(() => {}));\n\n   /** Event emitted when the selected value has been changed by the user. */\n  @Output() readonly selectionChange: EventEmitter<MatSelectChange> =\n      new EventEmitter<MatSelectChange>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private _viewportRuler: ViewportRuler,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _ngZone: NgZone,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    elementRef: ElementRef,\n    @Optional() private _dir: Directionality,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() @Inject(MAT_FORM_FIELD) private _parentFormField: MatFormField,\n    @Self() @Optional() public ngControl: NgControl,\n    @Attribute('tabindex') tabIndex: string,\n    @Inject(MAT_SELECT_SCROLL_STRATEGY) scrollStrategyFactory: any,\n    private _liveAnnouncer: LiveAnnouncer,\n    @Optional() @Inject(MAT_SELECT_CONFIG) defaults?: MatSelectConfig) {\n    super(elementRef, _defaultErrorStateMatcher, _parentForm,\n          _parentFormGroup, ngControl);\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n\n    if (defaults) {\n      if (defaults.disableOptionCentering != null) {\n        this.disableOptionCentering = defaults.disableOptionCentering;\n      }\n\n      if (defaults.typeaheadDebounceInterval != null) {\n        this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatOption>(this.multiple);\n    this.stateChanges.next();\n\n    // We need `distinctUntilChanged` here, because some browsers will\n    // fire the animation end event twice for the same animation. See:\n    // https://github.com/angular/angular/issues/24084\n    this._panelDoneAnimatingStream\n      .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this.panelOpen) {\n          this._scrollTop = 0;\n          this.openedChange.emit(true);\n        } else {\n          this.openedChange.emit(false);\n          this.overlayDir.offsetX = 0;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n\n    this._viewportRuler.change()\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this._panelOpen) {\n          this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n  }\n\n  ngAfterContentInit() {\n    this._initKeyManager();\n\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngDoCheck() {\n    const newAriaLabelledby = this._getTriggerAriaLabelledby();\n\n    // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n    // is computed as a result of a content query which can cause this binding to trigger a\n    // \"changed after checked\" error.\n    if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n      const element: HTMLElement = this._elementRef.nativeElement;\n      this._triggerAriaLabelledBy = newAriaLabelledby;\n      if (newAriaLabelledby) {\n        element.setAttribute('aria-labelledby', newAriaLabelledby);\n      } else {\n        element.removeAttribute('aria-labelledby');\n      }\n    }\n\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled']) {\n      this.stateChanges.next();\n    }\n\n    if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n      this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n  }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n    // `parseInt` ignores the trailing 'px' and converts this to a number.\n    this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n\n    this._panelOpen = true;\n    this._keyManager.withHorizontalOrientation(null);\n    this._calculateOverlayPosition();\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n\n    // Set the font size on the panel element once it exists.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      if (this._triggerFontSize && this.overlayDir.overlayRef &&\n          this.overlayDir.overlayRef.overlayElement) {\n        this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n      }\n    });\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n    }\n  }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  /** The currently selected option. */\n  get selected(): MatOption | MatOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The value displayed in the trigger. */\n  get triggerValue(): string {\n    if (this.empty) {\n      return '';\n    }\n\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /** Whether the element is in RTL mode. */\n  _isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n\n  /** Handles keyboard events while the select is closed. */\n  private _handleClosedKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n                       keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n      ((this.multiple || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n      manager.onKeydown(event);\n      const selectedOption = this.selected;\n\n      // Since the value has changed, we need to announce it ourselves.\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce((selectedOption as MatOption).viewValue, 10000);\n      }\n    }\n  }\n\n  /** Handles keyboard events when the selected is open. */\n  private _handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this._keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n      !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n\n      manager.onKeydown(event);\n\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n          manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n      this._calculateOverlayOffsetX();\n      this.panel.nativeElement.scrollTop = this._scrollTop;\n    });\n  }\n\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme(): string {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n\n  /** Whether the select has a value. */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): MatOption | undefined {\n    const correspondingOption = this.options.find((option: MatOption) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value,  value);\n      } catch (error) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options)\n      .withTypeAhead(this._typeaheadDebounceInterval)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n      .withHomeAndEnd()\n      .withAllowedModifierKeys(['shiftKey']);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.close();\n      }\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollActiveOptionIntoView();\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      });\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: MatOption, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) :\n                          this._selectionModel.deselect(option);\n      }\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.multiple) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) :\n                                     options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.multiple) {\n      valueToEmit = (this.selected as MatOption[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as MatOption).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n    const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options,\n        this.optionGroups);\n    const itemHeight = this._getItemHeight();\n\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n      (activeOptionIndex + labelCount) * itemHeight,\n      itemHeight,\n      this.panel.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  /** Focuses the select element. */\n  focus(options?: FocusOptions): void {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Gets the index of the provided option in the option list. */\n  private _getOptionIndex(option: MatOption): number | undefined {\n    return this.options.reduce((result: number | undefined, current: MatOption, index: number) => {\n      if (result !== undefined) {\n        return result;\n      }\n\n      return option === current ? index : undefined;\n    }, undefined);\n  }\n\n  /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n  private _calculateOverlayPosition(): void {\n    const itemHeight = this._getItemHeight();\n    const items = this._getItemCount();\n    const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const scrollContainerHeight = items * itemHeight;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const maxScroll = scrollContainerHeight - panelHeight;\n\n    // If no value is selected we open the popup to the first item.\n    let selectedOptionOffset =\n        this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n    selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n        this.optionGroups);\n\n    // We must maintain a scroll buffer so the selected option will be scrolled to the\n    // center of the overlay panel rather than the top.\n    const scrollBuffer = panelHeight / 2;\n    this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n    this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n\n  /**\n   * Calculates the scroll position of the select's overlay panel.\n   *\n   * Attempts to center the selected option in the panel. If the option is\n   * too high or too low in the panel to be scrolled to the center, it clamps the\n   * scroll position to the min or max scroll positions respectively.\n   */\n  _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n    const halfOptionHeight = itemHeight / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n  }\n\n  /** Gets the aria-labelledby for the select panel. */\n  _getPanelAriaLabelledby(): string | null {\n    if (this.ariaLabel) {\n      return null;\n    }\n\n    const labelId = this._getLabelId();\n    return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;\n  }\n\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n\n  /** Gets the ID of the element that is labelling the select. */\n  private _getLabelId(): string {\n    return this._parentFormField?.getLabelId() || '';\n  }\n\n  /**\n   * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text when\n   * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n   * can't be calculated until the panel has been attached, because we need to know the\n   * content width in order to constrain the panel within the viewport.\n   */\n  private _calculateOverlayOffsetX(): void {\n    const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const viewportSize = this._viewportRuler.getViewportSize();\n    const isRtl = this._isRtl();\n    const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                                         SELECT_PANEL_PADDING_X * 2;\n    let offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else {\n      let selected = this._selectionModel.selected[0] || this.options.first;\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n    const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n                          + (isRtl ? 0 : paddingWidth);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n    // blurry content in some browsers.\n    this.overlayDir.offsetX = Math.round(offsetX);\n    this.overlayDir.overlayRef.updatePosition();\n  }\n\n  /**\n   * Calculates the y-offset of the select's overlay panel in relation to the\n   * top start corner of the trigger. It has to be adjusted in order for the\n   * selected option to be aligned over the trigger when the panel opens.\n   */\n  private _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n    let optionOffsetFromPanelTop: number;\n\n    // Disable offset if requested by user by returning 0 as value to offset\n    if (this._disableOptionCentering) {\n      return 0;\n    }\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * itemHeight;\n    } else if (this._scrollTop === maxScroll) {\n      const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n      const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // The first item is partially out of the viewport. Therefore we need to calculate what\n      // portion of it is shown in the viewport and account for it in our offset.\n      let partialItemHeight =\n          itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height difference,\n    // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n    // The value is rounded to prevent some browsers from blurring the content.\n    return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n  }\n\n  /**\n   * Checks that the attempted overlay position will fit within the viewport.\n   * If it will not fit, tries to adjust the scroll position and the associated\n   * y-offset so the panel can open fully on-screen. If it still won't fit,\n   * sets the offset back to 0 to allow the fallback position to take over.\n   */\n  private _checkOverlayWithinViewport(maxScroll: number): void {\n    const itemHeight = this._getItemHeight();\n    const viewportSize = this._viewportRuler.getViewportSize();\n\n    const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const bottomSpaceAvailable =\n        viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const panelHeightTop = Math.abs(this._offsetY);\n    const totalPanelHeight =\n        Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n\n  /** Adjusts the overlay panel up to fit in the viewport. */\n  private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n\n  /** Adjusts the overlay panel down to fit in the viewport. */\n  private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n\n  /** Sets the transform origin point based on the selected option. */\n  private _getOriginBasedOnOption(): string {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n    return `50% ${originY}px 0px`;\n  }\n\n  /** Calculates the amount of items in the select. This includes options and group labels. */\n  private _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\n\n  /** Calculates the height of the select's options. */\n  private _getItemHeight(): number {\n    return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n  }\n\n  /** Gets the aria-labelledby of the select component trigger. */\n  private _getTriggerAriaLabelledby(): string | null {\n    if (this.ariaLabel) {\n      return null;\n    }\n\n    let value = this._getLabelId() + ' ' + this._valueId;\n\n    if (this.ariaLabelledby) {\n      value += ' ' + this.ariaLabelledby;\n    }\n\n    return value;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    return this._panelOpen || !this.empty;\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_disableOptionCentering: BooleanInput;\n  static ngAcceptInputType_typeaheadDebounceInterval: NumberInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatOptionModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelect, MatSelectTrigger} from './select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatOptionModule,\n    MatCommonModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatFormFieldModule,\n    MatSelect,\n    MatSelectTrigger,\n    MatOptionModule,\n    MatCommonModule\n  ],\n  declarations: [MatSelect, MatSelectTrigger],\n  providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class MatSelectModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './select-module';\nexport * from './select';\nexport * from './select-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {EMPTY, Observable, Subject} from 'rxjs';\n\n\n/** An event that is emitted when the autofill state of an input changes. */\nexport type AutofillEvent = {\n  /** The element whose autofill state changes. */\n  target: Element;\n  /** Whether the element is currently autofilled. */\n  isAutofilled: boolean;\n};\n\n\n/** Used to track info about currently monitored elements. */\ntype MonitoredElementInfo = {\n  subject: Subject<AutofillEvent>;\n  unlisten: () => void;\n};\n\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({passive: true});\n\n\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\n@Injectable({providedIn: 'root'})\nexport class AutofillMonitor implements OnDestroy {\n  private _monitoredElements = new Map<Element, MonitoredElementInfo>();\n\n  constructor(private _platform: Platform, private _ngZone: NgZone) {}\n\n  /**\n   * Monitor for changes in the autofill state of the given input element.\n   * @param element The element to monitor.\n   * @return A stream of autofill state changes.\n   */\n  monitor(element: Element): Observable<AutofillEvent>;\n\n  /**\n   * Monitor for changes in the autofill state of the given input element.\n   * @param element The element to monitor.\n   * @return A stream of autofill state changes.\n   */\n  monitor(element: ElementRef<Element>): Observable<AutofillEvent>;\n\n  monitor(elementOrRef: Element | ElementRef<Element>): Observable<AutofillEvent> {\n    if (!this._platform.isBrowser) {\n      return EMPTY;\n    }\n\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n\n    if (info) {\n      return info.subject;\n    }\n\n    const result = new Subject<AutofillEvent>();\n    const cssClass = 'cdk-text-field-autofilled';\n    const listener = ((event: AnimationEvent) => {\n      // Animation events fire on initial element render, we check for the presence of the autofill\n      // CSS class to make sure this is a real change in state, not just the initial render before\n      // we fire off events.\n      if (event.animationName === 'cdk-text-field-autofill-start' &&\n          !element.classList.contains(cssClass)) {\n        element.classList.add(cssClass);\n        this._ngZone.run(() => result.next({target: event.target as Element, isAutofilled: true}));\n      } else if (event.animationName === 'cdk-text-field-autofill-end' &&\n          element.classList.contains(cssClass)) {\n        element.classList.remove(cssClass);\n        this._ngZone.run(() => result.next({target: event.target as Element, isAutofilled: false}));\n      }\n    }) as EventListenerOrEventListenerObject;\n\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('animationstart', listener, listenerOptions);\n      element.classList.add('cdk-text-field-autofill-monitored');\n    });\n\n    this._monitoredElements.set(element, {\n      subject: result,\n      unlisten: () => {\n        element.removeEventListener('animationstart', listener, listenerOptions);\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Stop monitoring the autofill state of the given input element.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: Element): void;\n\n  /**\n   * Stop monitoring the autofill state of the given input element.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: ElementRef<Element>): void;\n\n  stopMonitoring(elementOrRef: Element | ElementRef<Element>): void {\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n\n    if (info) {\n      info.unlisten();\n      info.subject.complete();\n      element.classList.remove('cdk-text-field-autofill-monitored');\n      element.classList.remove('cdk-text-field-autofilled');\n      this._monitoredElements.delete(element);\n    }\n  }\n\n  ngOnDestroy() {\n    this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n  }\n}\n\n\n/** A directive that can be used to monitor the autofill state of an input. */\n@Directive({\n  selector: '[cdkAutofill]',\n})\nexport class CdkAutofill implements OnDestroy, OnInit {\n  /** Emits when the autofill state of the element changes. */\n  @Output() cdkAutofill: EventEmitter<AutofillEvent> = new EventEmitter<AutofillEvent>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _autofillMonitor: AutofillMonitor) {}\n\n  ngOnInit() {\n    this._autofillMonitor\n      .monitor(this._elementRef)\n      .subscribe(event => this.cdkAutofill.emit(event));\n  }\n\n  ngOnDestroy() {\n    this._autofillMonitor.stopMonitoring(this._elementRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  DoCheck,\n  OnDestroy,\n  NgZone,\n  HostListener,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {auditTime, takeUntil} from 'rxjs/operators';\nimport {fromEvent, Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\n\n/** Directive to automatically resize a textarea to fit its content. */\n@Directive({\n  selector: 'textarea[cdkTextareaAutosize]',\n  exportAs: 'cdkTextareaAutosize',\n  host: {\n    'class': 'cdk-textarea-autosize',\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    'rows': '1',\n  },\n})\nexport class CdkTextareaAutosize implements AfterViewInit, DoCheck, OnDestroy {\n  /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\n  private _previousValue?: string;\n  private _initialHeight: string | undefined;\n  private readonly _destroyed = new Subject<void>();\n\n  private _minRows: number;\n  private _maxRows: number;\n  private _enabled: boolean = true;\n\n  /**\n   * Value of minRows as of last resize. If the minRows has decreased, the\n   * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n   * does not have the same problem because it does not affect the textarea's scrollHeight.\n   */\n  private _previousMinRows: number = -1;\n\n  private _textareaElement: HTMLTextAreaElement;\n\n  /** Minimum amount of rows in the textarea. */\n  @Input('cdkAutosizeMinRows')\n  get minRows(): number { return this._minRows; }\n  set minRows(value: number) {\n    this._minRows = coerceNumberProperty(value);\n    this._setMinHeight();\n  }\n\n  /** Maximum amount of rows in the textarea. */\n  @Input('cdkAutosizeMaxRows')\n  get maxRows(): number { return this._maxRows; }\n  set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value);\n    this._setMaxHeight();\n  }\n\n  /** Whether autosizing is enabled or not */\n  @Input('cdkTextareaAutosize')\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    value = coerceBooleanProperty(value);\n\n    // Only act if the actual value changed. This specifically helps to not run\n    // resizeToFitContent too early (i.e. before ngAfterViewInit)\n    if (this._enabled !== value) {\n      (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n    }\n  }\n\n  /** Cached height of a textarea with a single row. */\n  private _cachedLineHeight: number;\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  /** Class that should be applied to the textarea while it's being measured. */\n  private _measuringClass: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              private _platform: Platform,\n              private _ngZone: NgZone,\n              /** @breaking-change 11.0.0 make document required */\n              @Optional() @Inject(DOCUMENT) document?: any) {\n    this._document = document;\n\n    this._textareaElement = this._elementRef.nativeElement as HTMLTextAreaElement;\n    this._measuringClass = _platform.FIREFOX ?\n      'cdk-textarea-autosize-measuring-firefox' :\n      'cdk-textarea-autosize-measuring';\n  }\n\n  /** Sets the minimum height of the textarea as determined by minRows. */\n  _setMinHeight(): void {\n    const minHeight = this.minRows && this._cachedLineHeight ?\n        `${this.minRows * this._cachedLineHeight}px` : null;\n\n    if (minHeight)  {\n      this._textareaElement.style.minHeight = minHeight;\n    }\n  }\n\n  /** Sets the maximum height of the textarea as determined by maxRows. */\n  _setMaxHeight(): void {\n    const maxHeight = this.maxRows && this._cachedLineHeight ?\n        `${this.maxRows * this._cachedLineHeight}px` : null;\n\n    if (maxHeight) {\n      this._textareaElement.style.maxHeight = maxHeight;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      // Remember the height which we started with in case autosizing is disabled\n      this._initialHeight = this._textareaElement.style.height;\n\n      this.resizeToFitContent();\n\n      this._ngZone.runOutsideAngular(() => {\n        const window = this._getWindow();\n\n        fromEvent(window, 'resize')\n          .pipe(auditTime(16), takeUntil(this._destroyed))\n          .subscribe(() => this.resizeToFitContent(true));\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Cache the height of a single-row textarea if it has not already been cached.\n   *\n   * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n   * maxRows. For the initial version, we will assume that the height of a single line in the\n   * textarea does not ever change.\n   */\n  private _cacheTextareaLineHeight(): void {\n    if (this._cachedLineHeight) {\n      return;\n    }\n\n    // Use a clone element because we have to override some styles.\n    let textareaClone = this._textareaElement.cloneNode(false) as HTMLTextAreaElement;\n    textareaClone.rows = 1;\n\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden';\n\n    this._textareaElement.parentNode!.appendChild(textareaClone);\n    this._cachedLineHeight = textareaClone.clientHeight;\n    this._textareaElement.parentNode!.removeChild(textareaClone);\n\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this._setMinHeight();\n    this._setMaxHeight();\n  }\n\n  ngDoCheck() {\n    if (this._platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n\n  /**\n   * Resize the textarea to fit its content.\n   * @param force Whether to force a height recalculation. By default the height will be\n   *    recalculated only if the value changed since the last call.\n   */\n  resizeToFitContent(force: boolean = false) {\n    // If autosizing is disabled, just skip everything else\n    if (!this._enabled) {\n      return;\n    }\n\n    this._cacheTextareaLineHeight();\n\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this._cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this._elementRef.nativeElement as HTMLTextAreaElement;\n    const value = textarea.value;\n\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n      return;\n    }\n\n    const placeholderText = textarea.placeholder;\n\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n    textarea.classList.add(this._measuringClass);\n    textarea.placeholder = '';\n\n    // The measuring class includes a 2px padding to workaround an issue with Chrome,\n    // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n    const height = textarea.scrollHeight - 4;\n\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove(this._measuringClass);\n    textarea.placeholder = placeholderText;\n\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n      } else {\n        setTimeout(() => this._scrollToCaretPosition(textarea));\n      }\n    });\n\n    this._previousValue = value;\n    this._previousMinRows = this._minRows;\n  }\n\n  /**\n   * Resets the textarea to its original size\n   */\n  reset() {\n    // Do not try to change the textarea, if the initialHeight has not been determined yet\n    // This might potentially remove styles when reset() is called before ngAfterViewInit\n    if (this._initialHeight !== undefined) {\n      this._textareaElement.style.height = this._initialHeight;\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('input')\n  _noopInputHandler() {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n\n  /** Access injected document if available or fallback to global document reference */\n  private _getDocument(): Document {\n    return this._document || document;\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n\n  /**\n   * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n   * prevent it from scrolling to the caret position. We need to re-set the selection\n   * in order for it to scroll to the proper position.\n   */\n  private _scrollToCaretPosition(textarea: HTMLTextAreaElement) {\n    const {selectionStart, selectionEnd} = textarea;\n    const document = this._getDocument();\n\n    // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n    // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n    // between the time we requested the animation frame and when it was executed.\n    // Also note that we have to assert that the textarea is focused before we set the\n    // selection range. Setting the selection range on a non-focused textarea will cause\n    // it to receive focus on IE and Edge.\n    if (!this._destroyed.isStopped && document.activeElement === textarea) {\n      textarea.setSelectionRange(selectionStart, selectionEnd);\n    }\n  }\n\n  static ngAcceptInputType_minRows: NumberInput;\n  static ngAcceptInputType_maxRows: NumberInput;\n  static ngAcceptInputType_enabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkAutofill} from './autofill';\nimport {CdkTextareaAutosize} from './autosize';\n\n\n@NgModule({\n  declarations: [CdkAutofill, CdkTextareaAutosize],\n  imports: [PlatformModule],\n  exports: [CdkAutofill, CdkTextareaAutosize],\n})\nexport class TextFieldModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './autofill';\nexport * from './autosize';\nexport * from './text-field-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlLWxpc3QvdGFibGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken, Input} from '@angular/core';\n\nlet nextUniqueId = 0;\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_ERROR = new InjectionToken<MatError>('MatError');\n\n/** Single error message to be shown underneath the form field. */\n@Directive({\n  selector: 'mat-error',\n  host: {\n    'class': 'mat-error',\n    'role': 'alert',\n    '[attr.id]': 'id',\n  },\n  providers: [{provide: MAT_ERROR, useExisting: MatError}],\n})\nexport class MatError {\n  @Input() id: string = `mat-error-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nexport const matFormFieldAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    // TODO(mmalerba): Use angular animations for label animation as well.\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {NgControl} from '@angular/forms';\nimport {Directive} from '@angular/core';\n\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\n@Directive()\nexport abstract class MatFormFieldControl<T> {\n  /** The value of the control. */\n  value: T | null;\n\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n   * needs to run change detection.\n   */\n  readonly stateChanges: Observable<void>;\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  readonly placeholder: string;\n\n  /** Gets the NgControl for this control. */\n  readonly ngControl: NgControl | null;\n\n  /** Whether the control is focused. */\n  readonly focused: boolean;\n\n  /** Whether the control is empty. */\n  readonly empty: boolean;\n\n  /** Whether the `MatFormField` label should try to float. */\n  readonly shouldLabelFloat: boolean;\n\n  /** Whether the control is required. */\n  readonly required: boolean;\n\n  /** Whether the control is disabled. */\n  readonly disabled: boolean;\n\n  /** Whether the control is in an error state. */\n  readonly errorState: boolean;\n\n  /**\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `mat-form-field-type-{{controlType}}` to its root element.\n   */\n  readonly controlType?: string;\n\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  readonly autofilled?: boolean;\n\n  /**\n   * Value of `aria-describedby` that should be merged with the described-by ids\n   * which are set by the form-field.\n   */\n  readonly userAriaDescribedBy?: string;\n\n  /** Sets the list of element IDs that currently describe this control. */\n  abstract setDescribedByIds(ids: string[]): void;\n\n  /** Handles a click on the control's container. */\n  abstract onContainerClick(event: MouseEvent): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatFormFieldPlaceholderConflictError(): Error {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n\n/** @docs-private */\nexport function getMatFormFieldDuplicatedHintError(align: string): Error {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n\n/** @docs-private */\nexport function getMatFormFieldMissingControlError(): Error {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken, Input} from '@angular/core';\n\nlet nextUniqueId = 0;\n\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nexport const _MAT_HINT = new InjectionToken<MatHint>('MatHint');\n\n/** Hint text to be shown underneath the form field control. */\n@Directive({\n  selector: 'mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  },\n  providers: [{provide: _MAT_HINT, useExisting: MatHint}],\n})\nexport class MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  @Input() id: string = `mat-hint-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** The floating label for a `mat-form-field`. */\n@Directive({\n  selector: 'mat-label'\n})\nexport class MatLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'mat-placeholder'\n})\nexport class MatPlaceholder {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_PREFIX = new InjectionToken<MatPrefix>('MatPrefix');\n\n/** Prefix to be placed in front of the form field. */\n@Directive({\n  selector: '[matPrefix]',\n  providers: [{provide: MAT_PREFIX, useExisting: MatPrefix}],\n})\nexport class MatPrefix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_SUFFIX = new InjectionToken<MatSuffix>('MatSuffix');\n\n/** Suffix to be placed at the end of the form field. */\n@Directive({\n  selector: '[matSuffix]',\n  providers: [{provide: MAT_SUFFIX, useExisting: MatSuffix}],\n})\nexport class MatSuffix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  LabelOptions,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  mixinColor,\n} from '@angular/material/core';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {startWith, take, takeUntil} from 'rxjs/operators';\nimport {MAT_ERROR, MatError} from './error';\nimport {matFormFieldAnimations} from './form-field-animations';\nimport {MatFormFieldControl} from './form-field-control';\nimport {\n  getMatFormFieldDuplicatedHintError,\n  getMatFormFieldMissingControlError,\n  getMatFormFieldPlaceholderConflictError,\n} from './form-field-errors';\nimport {_MAT_HINT, MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MAT_PREFIX, MatPrefix} from './prefix';\nimport {MAT_SUFFIX, MatSuffix} from './suffix';\nimport {Platform} from '@angular/cdk/platform';\nimport {NgControl} from '@angular/forms';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n\n\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase: CanColorCtor & typeof MatFormFieldBase =\n    mixinColor(MatFormFieldBase, 'primary');\n\n/** Possible appearance styles for the form field. */\nexport type MatFormFieldAppearance = 'legacy' | 'standard' | 'fill' | 'outline';\n\n/** Possible values for the \"floatLabel\" form-field input. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n */\nexport interface MatFormFieldDefaultOptions {\n  appearance?: MatFormFieldAppearance;\n  hideRequiredMarker?: boolean;\n  /**\n   * Whether the label for form-fields should by default float `always`,\n   * `never`, or `auto` (only when necessary).\n   */\n  floatLabel?: FloatLabelType;\n}\n\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nexport const MAT_FORM_FIELD_DEFAULT_OPTIONS =\n    new InjectionToken<MatFormFieldDefaultOptions>('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nexport const MAT_FORM_FIELD = new InjectionToken<MatFormField>('MatFormField');\n\n/** Container for form controls that applies Material Design styling and behavior. */\n@Component({\n  selector: 'mat-form-field',\n  exportAs: 'matFormField',\n  templateUrl: 'form-field.html',\n  // MatInput is a directive and can't have styles, so we need to include its styles here\n  // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n  // big deal for people who aren't using MatInput.\n  styleUrls: [\n    'form-field.css',\n    'form-field-fill.css',\n    'form-field-input.css',\n    'form-field-legacy.css',\n    'form-field-outline.css',\n    'form-field-standard.css',\n  ],\n  animations: [matFormFieldAnimations.transitionMessages],\n  host: {\n    'class': 'mat-form-field',\n    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n    '[class.mat-form-field-invalid]': '_control.errorState',\n    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n    '[class.mat-form-field-disabled]': '_control.disabled',\n    '[class.mat-form-field-autofilled]': '_control.autofilled',\n    '[class.mat-focused]': '_control.focused',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '[class._mat-animation-noopable]': '!_animationsEnabled',\n  },\n  inputs: ['color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MAT_FORM_FIELD, useExisting: MatFormField},\n  ]\n})\n\nexport class MatFormField extends _MatFormFieldMixinBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy, CanColor {\n  private _labelOptions: LabelOptions;\n\n  /**\n   * Whether the outline gap needs to be calculated\n   * immediately on the next change detection run.\n   */\n  private _outlineGapCalculationNeededImmediately = false;\n\n  /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n  private _outlineGapCalculationNeededOnStable = false;\n\n  private _destroyed = new Subject<void>();\n\n  /** The form-field appearance style. */\n  @Input()\n  get appearance(): MatFormFieldAppearance { return this._appearance; }\n  set appearance(value: MatFormFieldAppearance) {\n    const oldValue = this._appearance;\n\n    this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  _appearance: MatFormFieldAppearance;\n\n  /** Whether the required marker should be hidden. */\n  @Input()\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\n  set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  private _hideRequiredMarker: boolean;\n\n  /** Override for the logic that disables the label animation in certain cases. */\n  private _showAlwaysAnimate = false;\n\n  /** Whether the floating label should always float or not. */\n  _shouldAlwaysFloat(): boolean {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n\n  /** Whether the label can float or not. */\n  _canLabelFloat(): boolean { return this.floatLabel !== 'never'; }\n\n  /** State of the mat-hint and mat-error animations. */\n  _subscriptAnimationState: string = '';\n\n  /** Text for the form field hint. */\n  @Input()\n  get hintLabel(): string { return this._hintLabel; }\n  set hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  private _hintLabel = '';\n\n  // Unique id for the hint label.\n  readonly _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\n\n  // Unique id for the label element.\n  readonly _labelId = `mat-form-field-label-${nextUniqueId++}`;\n\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   */\n  @Input()\n  get floatLabel(): FloatLabelType {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  set floatLabel(value: FloatLabelType) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._getDefaultFloatLabelState();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _floatLabel: FloatLabelType;\n\n  /** Whether the Angular animations are enabled. */\n  _animationsEnabled: boolean;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ViewChild('underline') underlineRef: ElementRef;\n\n  @ViewChild('connectionContainer', {static: true}) _connectionContainerRef: ElementRef;\n  @ViewChild('inputContainer') _inputContainerRef: ElementRef;\n  @ViewChild('label') private _label: ElementRef<HTMLElement>;\n\n  @ContentChild(MatFormFieldControl) _controlNonStatic: MatFormFieldControl<any>;\n  @ContentChild(MatFormFieldControl, {static: true}) _controlStatic: MatFormFieldControl<any>;\n  get _control() {\n    // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n    //  We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  private _explicitFormFieldControl: MatFormFieldControl<any>;\n\n  @ContentChild(MatLabel) _labelChildNonStatic: MatLabel;\n  @ContentChild(MatLabel, {static: true}) _labelChildStatic: MatLabel;\n  @ContentChild(MatPlaceholder) _placeholderChild: MatPlaceholder;\n\n  @ContentChildren(MAT_ERROR, {descendants: true}) _errorChildren: QueryList<MatError>;\n  @ContentChildren(_MAT_HINT, {descendants: true}) _hintChildren: QueryList<MatHint>;\n  @ContentChildren(MAT_PREFIX, {descendants: true}) _prefixChildren: QueryList<MatPrefix>;\n  @ContentChildren(MAT_SUFFIX, {descendants: true}) _suffixChildren: QueryList<MatSuffix>;\n\n  constructor(\n      public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef,\n      @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions,\n      @Optional() private _dir: Directionality,\n      @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) private _defaults:\n          MatFormFieldDefaultOptions, private _platform: Platform, private _ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) _animationMode: string) {\n    super(_elementRef);\n\n    this._labelOptions = labelOptions ? labelOptions : {};\n    this.floatLabel = this._getDefaultFloatLabelState();\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n    this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n        _defaults.hideRequiredMarker : false;\n  }\n\n  /**\n   * Gets the id of the label element. If no label is present, returns `null`.\n   */\n  getLabelId(): string|null {\n    return this._hasFloatingLabel() ? this._labelId : null;\n  }\n\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._connectionContainerRef || this._elementRef;\n  }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    const control = this._control;\n\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith(null!)).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (typeof requestAnimationFrame === 'function') {\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => this.updateOutlineGap());\n          });\n        } else {\n          this.updateOutlineGap();\n        }\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\n  _shouldForward(prop: keyof NgControl): boolean {\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n\n  _hasLabel() {\n    return !!(this._labelChildNonStatic || this._labelChildStatic);\n  }\n\n  _shouldLabelFloat() {\n    return this._canLabelFloat() &&\n        ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n  }\n\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() ||\n        this._hasLabel() && !this._shouldLabelFloat();\n  }\n\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages(): 'error' | 'hint' {\n    return (this._errorChildren && this._errorChildren.length > 0 &&\n        this._control.errorState) ? 'error' : 'hint';\n  }\n\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel(): void {\n    if (this._hasFloatingLabel() && this._canLabelFloat()) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled && this._label) {\n        this._showAlwaysAnimate = true;\n\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   */\n  private _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n\n  /** Does any extra processing that is required when handling the hints. */\n  private _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   */\n  private _validateHints() {\n    if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      let startHint: MatHint;\n      let endHint: MatHint;\n      this._hintChildren.forEach((hint: MatHint) => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n\n  /** Gets the default float label state. */\n  private _getDefaultFloatLabelState(): FloatLabelType {\n    return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n  }\n\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  private _syncDescribedByIds() {\n    if (this._control) {\n      let ids: string[] = [];\n\n      // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n      if (this._control.userAriaDescribedBy &&\n        typeof this._control.userAriaDescribedBy === 'string') {\n        ids.push(...this._control.userAriaDescribedBy.split(' '));\n      }\n\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'end') : null;\n\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids.push(...this._errorChildren.map(error => error.id));\n      }\n\n      this._control.setDescribedByIds(ids);\n    }\n  }\n\n  /** Throws an error if the form field's control is missing. */\n  protected _validateControlChild() {\n    if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   */\n  updateOutlineGap() {\n    const labelEl = this._label ? this._label.nativeElement : null;\n\n    if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n        !labelEl.textContent!.trim()) {\n      return;\n    }\n\n    if (!this._platform.isBrowser) {\n      // getBoundingClientRect isn't available on the server.\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (!this._isAttachedToDOM()) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n\n    let startWidth = 0;\n    let gapWidth = 0;\n\n    const container = this._connectionContainerRef.nativeElement;\n    const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n    const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n    if (this._label && this._label.nativeElement.children.length) {\n      const containerRect = container.getBoundingClientRect();\n\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be reclaculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n\n      const containerStart = this._getStartEnd(containerRect);\n      const labelChildren = labelEl.children;\n      const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n      let labelWidth = 0;\n\n      for (let i = 0; i < labelChildren.length; i++) {\n        labelWidth += (labelChildren[i] as HTMLElement).offsetWidth;\n      }\n      startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n\n    for (let i = 0; i < startEls.length; i++) {\n      startEls[i].style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls[i].style.width = `${gapWidth}px`;\n    }\n\n    this._outlineGapCalculationNeededOnStable =\n        this._outlineGapCalculationNeededImmediately = false;\n  }\n\n  /** Gets the start end of the rect considering the current directionality. */\n  private _getStartEnd(rect: ClientRect): number {\n    return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n  }\n\n  /** Checks whether the form field is attached to the DOM. */\n  private _isAttachedToDOM(): boolean {\n    const element: HTMLElement = this._elementRef.nativeElement;\n\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement!.contains(element);\n  }\n\n  static ngAcceptInputType_hideRequiredMarker: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatError} from './error';\nimport {MatFormField} from './form-field';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\n\n@NgModule({\n  declarations: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    ObserversModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class MatFormFieldModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './form-field-module';\nexport * from './error';\nexport * from './form-field';\nexport {MatFormFieldControl} from './form-field-control';\nexport * from './form-field-errors';\nexport * from './hint';\nexport * from './placeholder';\nexport * from './prefix';\nexport * from './suffix';\nexport * from './label';\nexport * from './form-field-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\n} catch {\n  hasV8BreakIterator = false;\n}\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n@Injectable({providedIn: 'root'})\nexport class Platform {\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser: boolean = this._platformId ?\n      isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\n      typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT: boolean = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Whether the current platform is Apple iOS. */\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n      !('MSStream' in window);\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class PlatformModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes: Set<string>;\n\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\n/** @returns The input types supported by this browser. */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents: boolean;\n\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport function supportsPassiveEventListeners(): boolean {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nexport function normalizePassiveListenerOptions(options: AddEventListenerOptions):\n  AddEventListenerOptions | boolean {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nexport const enum RtlScrollAxisType {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  NORMAL,\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  NEGATED,\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  INVERTED\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType: RtlScrollAxisType|undefined;\n\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported: boolean|undefined;\n\n/** Check whether the browser supports scroll behaviors. */\nexport function supportsScrollBehavior(): boolean {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported.\n    if (typeof document !== 'object' || !document) {\n      scrollBehaviorSupported = false;\n    }\n\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement!.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction: Function|undefined = Element.prototype.scrollTo;\n\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n\n  return scrollBehaviorSupported;\n}\n\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nexport function getRtlScrollAxisType(): RtlScrollAxisType {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType =\n          scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n\n    scrollContainer.parentNode!.removeChild(scrollContainer);\n  }\n  return rtlScrollAxisType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nlet shadowDomIsSupported: boolean;\n\n/** Checks whether the user's browser support Shadow DOM. */\nexport function _supportsShadowDom(): boolean {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && ((head as any).createShadowRoot || head.attachShadow));\n  }\n\n  return shadowDomIsSupported;\n}\n\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nexport function _getShadowRoot(element: HTMLElement): Node | null {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './platform';\nexport * from './platform-module';\nexport * from './features/input-types';\nexport * from './features/passive-listeners';\nexport * from './features/scrolling';\nexport * from './features/shadow-dom';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n  exportAs: 'matTextareaAutosize',\n  inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n  host: {\n    'class': 'cdk-textarea-autosize mat-autosize',\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    'rows': '1',\n  },\n})\nexport class MatTextareaAutosize extends CdkTextareaAutosize {\n  @Input()\n  get matAutosizeMinRows(): number { return this.minRows; }\n  set matAutosizeMinRows(value: number) { this.minRows = value; }\n\n  @Input()\n  get matAutosizeMaxRows(): number { return this.maxRows; }\n  set matAutosizeMaxRows(value: number) { this.maxRows = value; }\n\n  @Input('mat-autosize')\n  get matAutosize(): boolean { return this.enabled; }\n  set matAutosize(value: boolean) { this.enabled = value; }\n\n  @Input()\n  get matTextareaAutosize(): boolean { return this.enabled; }\n  set matTextareaAutosize(value: boolean) { this.enabled = value; }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatInputUnsupportedTypeError(type: string): Error {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nexport const MAT_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{value: any}>('MAT_INPUT_VALUE_ACCESSOR');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {getSupportedInputTypes, Platform} from '@angular/cdk/platform';\nimport {AutofillMonitor} from '@angular/cdk/text-field';\nimport {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Self,\n} from '@angular/core';\nimport {FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl, MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {Subject} from 'rxjs';\nimport {getMatInputUnsupportedTypeError} from './input-errors';\nimport {MAT_INPUT_VALUE_ACCESSOR} from './input-value-accessor';\n\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n  'button',\n  'checkbox',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit'\n];\n\nlet nextUniqueId = 0;\n\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatInputMixinBase: CanUpdateErrorStateCtor & typeof MatInputBase =\n    mixinErrorState(MatInputBase);\n\n/** Directive that allows a native input to work inside a `MatFormField`. */\n@Directive({\n  selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n  exportAs: 'matInput',\n  host: {\n    /**\n     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n     */\n    'class': 'mat-input-element mat-form-field-autofill-control',\n    '[class.mat-input-server]': '_isServer',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[attr.id]': 'id',\n    // At the time of writing, we have a lot of customer tests that look up the input based on its\n    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n    '[attr.data-placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatInput}],\n})\nexport class MatInput extends _MatInputMixinBase implements MatFormFieldControl<any>, OnChanges,\n    OnDestroy, AfterViewInit, DoCheck, CanUpdateErrorState {\n  protected _uid = `mat-input-${nextUniqueId++}`;\n  protected _previousNativeValue: any;\n  private _inputValueAccessor: {value: any};\n  private _previousPlaceholder: string | null;\n\n  /** Whether the component is being rendered on the server. */\n  readonly _isServer: boolean;\n\n  /** Whether the component is a native html select. */\n  readonly _isNativeSelect: boolean;\n\n  /** Whether the component is a textarea. */\n  readonly _isTextarea: boolean;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  focused: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType: string = 'mat-input';\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  autofilled = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  protected _disabled = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) { this._id = value || this._uid; }\n  protected _id: string;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n  protected _required = false;\n\n  /** Input type of the element. */\n  @Input()\n  get type(): string { return this._type; }\n  set type(value: string) {\n    this._type = value || 'text';\n    this._validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n      (this._elementRef.nativeElement as HTMLInputElement).type = this._type;\n    }\n  }\n  protected _type = 'text';\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input('aria-describedby') userAriaDescribedBy: string;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): string { return this._inputValueAccessor.value; }\n  set value(value: string) {\n    if (value !== this.value) {\n      this._inputValueAccessor.value = value;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Whether the element is readonly. */\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\n  private _readonly = false;\n\n  protected _neverEmptyInputTypes = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week'\n  ].filter(t => getSupportedInputTypes().has(t));\n\n  constructor(\n      protected _elementRef: ElementRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n      protected _platform: Platform,\n      /** @docs-private */\n      @Optional() @Self() public ngControl: NgControl,\n      @Optional() _parentForm: NgForm,\n      @Optional() _parentFormGroup: FormGroupDirective,\n      _defaultErrorStateMatcher: ErrorStateMatcher,\n      @Optional() @Self() @Inject(MAT_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n      private _autofillMonitor: AutofillMonitor,\n      ngZone: NgZone,\n      // TODO: Remove this once the legacy appearance has been removed. We only need\n      // to inject the form-field for determining whether the placeholder has been promoted.\n      @Optional() @Inject(MAT_FORM_FIELD) private _formField?: MatFormField) {\n\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n    const element = this._elementRef.nativeElement;\n    const nodeName = element.nodeName.toLowerCase();\n\n    // If no input value accessor was explicitly specified, use the element as the input value\n    // accessor.\n    this._inputValueAccessor = inputValueAccessor || element;\n\n    this._previousNativeValue = this.value;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          let el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeSelect = nodeName === 'select';\n    this._isTextarea = nodeName === 'textarea';\n\n    if (this._isNativeSelect) {\n      this.controlType = (element as HTMLSelectElement).multiple ? 'mat-native-select-multiple' :\n                                                                   'mat-native-select';\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n        this.autofilled = event.isAutofilled;\n        this.stateChanges.next();\n      });\n    }\n  }\n\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this._dirtyCheckNativeValue();\n\n    // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n    // present or not depends on a query which is prone to \"changed after checked\" errors.\n    this._dirtyCheckPlaceholder();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  /** Callback for the cases where the focused state of the input changes. */\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus', ['true'])\n  @HostListener('blur', ['false'])\n  // tslint:enable:no-host-decorator-in-concrete\n  _focusChanged(isFocused: boolean) {\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('input')\n  _onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n\n  /** Does some manual dirty checking on the native input `placeholder` attribute. */\n  private _dirtyCheckPlaceholder() {\n    // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n    // screen readers will read it out twice: once from the label and once from the attribute.\n    // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n    // the only one that supports promoting the placeholder to a label.\n    const placeholder = this._formField?._hideControlPlaceholder?.() ? null : this.placeholder;\n    if (placeholder !== this._previousPlaceholder) {\n      const element = this._elementRef.nativeElement;\n      this._previousPlaceholder = placeholder;\n      placeholder ?\n          element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n    }\n  }\n\n  /** Does some manual dirty checking on the native input `value` property. */\n  protected _dirtyCheckNativeValue() {\n    const newValue = this._elementRef.nativeElement.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Make sure the input is a supported type. */\n  protected _validateType() {\n    if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatInputUnsupportedTypeError(this._type);\n    }\n  }\n\n  /** Checks whether the input type is one of the types that are never empty. */\n  protected _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n\n  /** Checks whether the input is invalid based on the native validation. */\n  protected _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n    return validity && validity.badInput;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n        !this.autofilled;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    if (this._isNativeSelect) {\n      // For a single-selection `<select>`, the label should float when the selected option has\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n      // overlapping the label with the options.\n      const selectElement = this._elementRef.nativeElement as HTMLSelectElement;\n      const firstOption: HTMLOptionElement | undefined = selectElement.options[0];\n\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n      return this.focused || selectElement.multiple || !this.empty ||\n             !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n    } else {\n      return this.focused || !this.empty;\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    if (ids.length) {\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_readonly: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that may\n  // accept different types.\n  static ngAcceptInputType_value: any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatTextareaAutosize} from './autosize';\nimport {MatInput} from './input';\n\n@NgModule({\n  declarations: [MatInput, MatTextareaAutosize],\n  imports: [\n    TextFieldModule,\n    MatFormFieldModule,\n  ],\n  exports: [\n    TextFieldModule,\n    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n    // be used together with `MatFormField`.\n    MatFormFieldModule,\n    MatInput,\n    MatTextareaAutosize,\n  ],\n  providers: [ErrorStateMatcher],\n})\nexport class MatInputModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './autosize';\nexport * from './input';\nexport * from './input-errors';\nexport * from './input-module';\nexport * from './input-value-accessor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\nimport { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\n\nexport const AdminLayoutRoutes: Routes = [\n    // {\n    //   path: '',\n    //   children: [ {\n    //     path: 'dashboard',\n    //     component: DashboardComponent\n    // }]}, {\n    // path: '',\n    // children: [ {\n    //   path: 'userprofile',\n    //   component: UserProfileComponent\n    // }]\n    // }, {\n    //   path: '',\n    //   children: [ {\n    //     path: 'icons',\n    //     component: IconsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'notifications',\n    //         component: NotificationsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'maps',\n    //         component: MapsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'typography',\n    //         component: TypographyComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'upgrade',\n    //         component: UpgradeComponent\n    //     }]\n    // }\n    { path: 'dashboard',      component: DashboardComponent },\n    { path: 'user-profile',   component: UserProfileComponent },\n    { path: 'table-list',     component: TableListComponent },\n    { path: 'typography',     component: TypographyComponent },\n    { path: 'icons',          component: IconsComponent },\n    { path: 'maps',           component: MapsComponent },\n    { path: 'notifications',  component: NotificationsComponent },\n    { path: 'upgrade',        component: UpgradeComponent },\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {coerceCssPixelValue} from '@angular/cdk/coercion';\n\n/**\n * Extended `CSSStyleDeclaration` that includes `scrollBehavior` which isn't part of the\n * built-in TS typings. Once it is, this declaration can be removed safely.\n * @docs-private\n */\ntype ScrollBehaviorCSSStyleDeclaration = CSSStyleDeclaration & {scrollBehavior: string};\n\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\n  private _previousHTMLStyles = {top: '', left: ''};\n  private _previousScrollPosition: { top: number, left: number };\n  private _isEnabled = false;\n  private _document: Document;\n\n  constructor(private _viewportRuler: ViewportRuler, document: any) {\n    this._document = document;\n  }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach() { }\n\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement!;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n      root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement!;\n      const body = this._document.body!;\n      const htmlStyle = html.style as ScrollBehaviorCSSStyleDeclaration;\n      const bodyStyle = body.style as ScrollBehaviorCSSStyleDeclaration;\n      const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n      const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n\n      this._isEnabled = false;\n\n      htmlStyle.left = this._previousHTMLStyles.left;\n      htmlStyle.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n\n      htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n      bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n    }\n  }\n\n  private _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement!;\n\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayReference} from '../overlay-reference';\n\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n */\nexport interface ScrollStrategy {\n  /** Enable this scroll strategy (called when the attached overlay is attached to a portal). */\n  enable: () => void;\n\n  /** Disable this scroll strategy (called when the attached overlay is detached from a portal). */\n  disable: () => void;\n\n  /** Attaches this `ScrollStrategy` to an overlay. */\n  attach: (overlayRef: OverlayReference) => void;\n\n  /** Detaches the scroll strategy from the current overlay. */\n  detach?: () => void;\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nexport function getMatScrollStrategyAlreadyAttachedError(): Error {\n  return Error(`Scroll strategy has already been attached.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgZone} from '@angular/core';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayReference} from '../overlay-reference';\nimport {Subscription} from 'rxjs';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\n\n/**\n * Config options for the CloseScrollStrategy.\n */\nexport interface CloseScrollStrategyConfig {\n  /** Amount of pixels the user has to scroll before the overlay is closed. */\n  threshold?: number;\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nexport class CloseScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayReference;\n  private _initialScrollPosition: number;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _config?: CloseScrollStrategyConfig) {}\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayReference) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n\n    const stream = this._scrollDispatcher.scrolled(0);\n\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config!.threshold!) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n\n  detach() {\n    this.disable();\n    this._overlayRef = null!;\n  }\n\n  /** Detaches the overlay ref and disables the scroll strategy. */\n  private _detach = () => {\n    this.disable();\n\n    if (this._overlayRef.hasAttached()) {\n      this._ngZone.run(() => this._overlayRef.detach());\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollStrategy} from './scroll-strategy';\n\n/** Scroll strategy that doesn't do anything. */\nexport class NoopScrollStrategy implements ScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() { }\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nexport function isElementScrolledOutsideView(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n\n\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nexport function isElementClippedByScrolling(element: ClientRect, scrollContainers: ClientRect[]) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ScrollStrategy, getMatScrollStrategyAlreadyAttachedError} from './scroll-strategy';\nimport {OverlayReference} from '../overlay-reference';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {isElementScrolledOutsideView} from '../position/scroll-clip';\n\n/**\n * Config options for the RepositionScrollStrategy.\n */\nexport interface RepositionScrollStrategyConfig {\n  /** Time in milliseconds to throttle the scroll events. */\n  scrollThrottle?: number;\n\n  /** Whether to close the overlay once the user has scrolled away completely. */\n  autoClose?: boolean;\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nexport class RepositionScrollStrategy implements ScrollStrategy {\n  private _scrollSubscription: Subscription|null = null;\n  private _overlayRef: OverlayReference;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    private _config?: RepositionScrollStrategyConfig) { }\n\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef: OverlayReference) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n\n    this._overlayRef = overlayRef;\n  }\n\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {width, height} = this._viewportRuler.getViewportSize();\n\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{width, height, bottom: height, right: width, top: 0, left: 0}];\n\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n\n  detach() {\n    this.disable();\n    this._overlayRef = null!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {BlockScrollStrategy} from './block-scroll-strategy';\nimport {CloseScrollStrategy, CloseScrollStrategyConfig} from './close-scroll-strategy';\nimport {NoopScrollStrategy} from './noop-scroll-strategy';\nimport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig,\n} from './reposition-scroll-strategy';\n\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollStrategyOptions {\n  private _document: Document;\n\n  constructor(\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewportRuler: ViewportRuler,\n    private _ngZone: NgZone,\n    @Inject(DOCUMENT) document: any) {\n      this._document = document;\n    }\n\n  /** Do nothing on scroll. */\n  noop = () => new NoopScrollStrategy();\n\n  /**\n   * Close the overlay as soon as the user scrolls.\n   * @param config Configuration to be used inside the scroll strategy.\n   */\n  close = (config?: CloseScrollStrategyConfig) => new CloseScrollStrategy(this._scrollDispatcher,\n      this._ngZone, this._viewportRuler, config)\n\n  /** Block scrolling. */\n  block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n\n  /**\n   * Update the overlay's position on scroll.\n   * @param config Configuration to be used inside the scroll strategy.\n   * Allows debouncing the reposition calls.\n   */\n  reposition = (config?: RepositionScrollStrategyConfig) => new RepositionScrollStrategy(\n      this._scrollDispatcher, this._viewportRuler, this._ngZone, config)\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkScrollable, ScrollDispatcher} from '@angular/cdk/scrolling';\n\n// Export pre-defined scroll strategies and interface to build custom ones.\nexport {ScrollStrategy} from './scroll-strategy';\nexport {ScrollStrategyOptions} from './scroll-strategy-options';\nexport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig\n} from './reposition-scroll-strategy';\nexport {CloseScrollStrategy} from './close-scroll-strategy';\nexport {NoopScrollStrategy} from './noop-scroll-strategy';\nexport {BlockScrollStrategy} from './block-scroll-strategy';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position/position-strategy';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ScrollStrategy, NoopScrollStrategy} from './scroll/index';\n\n\n/** Initial configuration used when creating an overlay. */\nexport class OverlayConfig {\n  /** Strategy with which to position the overlay. */\n  positionStrategy?: PositionStrategy;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\n\n  /** Custom class to add to the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop?: boolean = false;\n\n  /** Custom class to add to the backdrop */\n  backdropClass?: string | string[] = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n  width?: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n  height?: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxWidth?: number | string;\n\n  /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /**\n   * Direction of the text in the overlay panel. If a `Directionality` instance\n   * is passed in, the overlay will handle changes to its value automatically.\n   */\n  direction?: Direction | Directionality;\n\n  /**\n   * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  disposeOnNavigation?: boolean = false;\n\n  constructor(config?: OverlayConfig) {\n    if (config) {\n      // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n      const configKeys =\n          Object.keys(config) as Iterable<keyof OverlayConfig> & (keyof OverlayConfig)[];\n      for (const key of configKeys) {\n        if (config[key] !== undefined) {\n          // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n          // as \"I don't know *which* key this is, so the only valid value is the intersection\n          // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n          // is not smart enough to see that the right-hand-side is actually an access of the same\n          // exact type with the same exact key, meaning that the value type must be identical.\n          // So we use `any` to work around this.\n          this[key] = config[key] as any;\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\nimport {Optional} from '@angular/core';\nexport type HorizontalConnectionPos = 'start' | 'center' | 'end';\n\n/** Vertical dimension of a connection point on the perimeter of the origin or overlay element. */\nexport type VerticalConnectionPos = 'top' | 'center' | 'bottom';\n\n\n/** A connection point on the origin element. */\nexport interface OriginConnectionPosition {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n}\n\n/** A connection point on the overlay element. */\nexport interface OverlayConnectionPosition {\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n}\n\n/** The points of the origin element and the overlay element to connect. */\nexport class ConnectionPositionPair {\n  /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n  originX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n  originY: VerticalConnectionPos;\n  /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n  overlayX: HorizontalConnectionPos;\n  /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n  overlayY: VerticalConnectionPos;\n\n  constructor(\n    origin: OriginConnectionPosition,\n    overlay: OverlayConnectionPosition,\n    /** Offset along the X axis. */\n    public offsetX?: number,\n    /** Offset along the Y axis. */\n    public offsetY?: number,\n    /** Class(es) to be applied to the panel while this position is active. */\n    public panelClass?: string | string[]) {\n\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nexport class ScrollingVisibility {\n  isOriginClipped: boolean;\n  isOriginOutsideView: boolean;\n  isOverlayClipped: boolean;\n  isOverlayOutsideView: boolean;\n}\n\n/** The change event emitted by the strategy when a fallback position is used. */\nexport class ConnectedOverlayPositionChange {\n  constructor(\n      /** The position used as a result of this change. */\n      public connectionPair: ConnectionPositionPair,\n      /** @docs-private */\n      @Optional() public scrollableViewProperties: ScrollingVisibility) {}\n}\n\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nexport function validateVerticalPosition(property: string, value: VerticalConnectionPos) {\n  if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n                `Expected \"top\", \"bottom\" or \"center\".`);\n  }\n}\n\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nexport function validateHorizontalPosition(property: string, value: HorizontalConnectionPos) {\n  if (value !== 'start' && value !== 'end' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n                `Expected \"start\", \"end\" or \"center\".`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\n\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport abstract class BaseOverlayDispatcher implements OnDestroy {\n\n  /** Currently attached overlays in the order they were attached. */\n  _attachedOverlays: OverlayReference[] = [];\n\n  protected _document: Document;\n  protected _isAttached: boolean;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  ngOnDestroy(): void {\n    this.detach();\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef: OverlayReference): void {\n    // Ensure that we don't get the same overlay multiple times.\n    this.remove(overlayRef);\n    this._attachedOverlays.push(overlayRef);\n  }\n\n  /** Remove an overlay from the list of attached overlay refs. */\n  remove(overlayRef: OverlayReference): void {\n    const index = this._attachedOverlays.indexOf(overlayRef);\n\n    if (index > -1) {\n      this._attachedOverlays.splice(index, 1);\n    }\n\n    // Remove the global listener once there are no more overlays.\n    if (this._attachedOverlays.length === 0) {\n      this.detach();\n    }\n  }\n\n  /** Detaches the global event listener. */\n  protected abstract detach(): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\nimport {BaseOverlayDispatcher} from './base-overlay-dispatcher';\n\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport class OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    super(document);\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef: OverlayReference): void {\n    super.add(overlayRef);\n\n    // Lazily start dispatcher once first overlay is added\n    if (!this._isAttached) {\n      this._document.body.addEventListener('keydown', this._keydownListener);\n      this._isAttached = true;\n    }\n  }\n\n  /** Detaches the global keyboard event listener. */\n  protected detach() {\n    if (this._isAttached) {\n      this._document.body.removeEventListener('keydown', this._keydownListener);\n      this._isAttached = false;\n    }\n  }\n\n  /** Keyboard event listener that will be attached to the body. */\n  private _keydownListener = (event: KeyboardEvent) => {\n    const overlays = this._attachedOverlays;\n\n    for (let i = overlays.length - 1; i > -1; i--) {\n      // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n      // We want to target the most recent overlay, rather than trying to match where the event came\n      // from, because some components might open an overlay, but keep focus on a trigger element\n      // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n      // because we don't want overlays that don't handle keyboard events to block the ones below\n      // them that do.\n      if (overlays[i]._keydownEvents.observers.length > 0) {\n        overlays[i]._keydownEvents.next(event);\n        break;\n      }\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(\n    dispatcher: OverlayKeyboardDispatcher, _document: any) {\n  return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n  // If there is already an OverlayKeyboardDispatcher available, use that.\n  // Otherwise, provide a new one.\n  provide: OverlayKeyboardDispatcher,\n  deps: [\n    [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n\n    // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n    // of the type expected by Angular\n    DOCUMENT as InjectionToken<any>\n  ],\n  useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {OverlayReference} from '../overlay-reference';\nimport {Platform} from '@angular/cdk/platform';\nimport {BaseOverlayDispatcher} from './base-overlay-dispatcher';\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\n@Injectable({providedIn: 'root'})\nexport class OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n  private _cursorOriginalValue: string;\n  private _cursorStyleIsSet = false;\n\n  constructor(@Inject(DOCUMENT) document: any, private _platform: Platform) {\n    super(document);\n  }\n\n  /** Add a new overlay to the list of attached overlay refs. */\n  add(overlayRef: OverlayReference): void {\n    super.add(overlayRef);\n\n    // tslint:disable: max-line-length\n    // Safari on iOS does not generate click events for non-interactive\n    // elements. However, we want to receive a click for any element outside\n    // the overlay. We can force a \"clickable\" state by setting\n    // `cursor: pointer` on the document body.\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n    // and https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n    // tslint:enable: max-line-length\n    if (!this._isAttached) {\n      this._document.body.addEventListener('click', this._clickListener, true);\n      this._document.body.addEventListener('contextmenu', this._clickListener, true);\n\n      // click event is not fired on iOS. To make element \"clickable\" we are\n      // setting the cursor to pointer\n      if (this._platform.IOS && !this._cursorStyleIsSet) {\n        this._cursorOriginalValue = this._document.body.style.cursor;\n        this._document.body.style.cursor = 'pointer';\n        this._cursorStyleIsSet = true;\n      }\n\n      this._isAttached = true;\n    }\n  }\n\n  /** Detaches the global keyboard event listener. */\n  protected detach() {\n    if (this._isAttached) {\n      this._document.body.removeEventListener('click', this._clickListener, true);\n      this._document.body.removeEventListener('contextmenu', this._clickListener, true);\n      if (this._platform.IOS && this._cursorStyleIsSet) {\n        this._document.body.style.cursor = this._cursorOriginalValue;\n        this._cursorStyleIsSet = false;\n      }\n      this._isAttached = false;\n    }\n  }\n\n  /** Click event listener that will be attached to the body propagate phase. */\n  private _clickListener = (event: MouseEvent) => {\n    // Get the target through the `composedPath` if possible to account for shadow DOM.\n    const target = event.composedPath ? event.composedPath()[0] : event.target;\n    // We copy the array because the original may be modified asynchronously if the\n    // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n    // the for loop.\n    const overlays = this._attachedOverlays.slice();\n\n    // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n    // We want to target all overlays for which the click could be considered as outside click.\n    // As soon as we reach an overlay for which the click is not outside click we break off\n    // the loop.\n    for (let i = overlays.length - 1; i > -1; i--) {\n      const overlayRef = overlays[i];\n      if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n        continue;\n      }\n\n      // If it's a click inside the overlay, just break - we should do nothing\n      // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n      if (overlayRef.overlayElement.contains(target as Node)) {\n        break;\n      }\n\n      overlayRef._outsidePointerEvents.next(event);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\n\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment: boolean = typeof window !== 'undefined' && !!window &&\n  !!((window as any).__karma__ || (window as any).jasmine);\n\n/** Container inside which all overlays will render. */\n@Injectable({providedIn: 'root'})\nexport class OverlayContainer implements OnDestroy {\n  protected _containerElement: HTMLElement;\n  protected _document: Document;\n\n  constructor(\n    @Inject(DOCUMENT) document: any,\n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    protected _platform?: Platform) {\n    this._document = document;\n  }\n\n  ngOnDestroy() {\n    const container = this._containerElement;\n\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    // @breaking-change 10.0.0 Remove null check for `_platform`.\n    const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n    const containerClass = 'cdk-overlay-container';\n\n    if (isBrowser || isTestEnvironment) {\n      const oppositePlatformContainers =\n          this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                                          `.${containerClass}[platform=\"test\"]`);\n\n      // Remove any old containers from the opposite platform.\n      // This can happen when transitioning from the server to the client.\n      for (let i = 0; i < oppositePlatformContainers.length; i++) {\n        oppositePlatformContainers[i].parentNode!.removeChild(oppositePlatformContainers[i]);\n      }\n    }\n\n    const container = this._document.createElement('div');\n    container.classList.add(containerClass);\n\n    // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n    // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n    // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n    // To mitigate the problem we made it so that only containers from a different platform are\n    // cleared, but the side-effect was that people started depending on the overly-aggressive\n    // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n    // module which does the cleanup, we try to detect that we're in a test environment and we\n    // always clear the container. See #17006.\n    // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n    if (isTestEnvironment) {\n      container.setAttribute('platform', 'test');\n    } else if (!isBrowser) {\n      container.setAttribute('platform', 'server');\n    }\n\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer,\n  _document: any) {\n  return parentContainer || new OverlayContainer(_document);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const OVERLAY_CONTAINER_PROVIDER = {\n  // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n  provide: OverlayContainer,\n  deps: [\n    [new Optional(), new SkipSelf(), OverlayContainer],\n    DOCUMENT as InjectionToken<any> // We need to use the InjectionToken somewhere to keep TS happy\n  ],\n  useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ComponentPortal, Portal, PortalOutlet, TemplatePortal} from '@angular/cdk/portal';\nimport {ComponentRef, EmbeddedViewRef, NgZone} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {Observable, Subject, merge, SubscriptionLike, Subscription} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {OverlayKeyboardDispatcher} from './dispatchers/overlay-keyboard-dispatcher';\nimport {OverlayOutsideClickDispatcher} from './dispatchers/overlay-outside-click-dispatcher';\nimport {OverlayConfig} from './overlay-config';\nimport {coerceCssPixelValue, coerceArray} from '@angular/cdk/coercion';\nimport {OverlayReference} from './overlay-reference';\nimport {PositionStrategy} from './position/position-strategy';\nimport {ScrollStrategy} from './scroll';\n\n\n/** An object where all of its properties cannot be written. */\nexport type ImmutableObject<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalOutlet, OverlayReference {\n  private _backdropElement: HTMLElement | null = null;\n  private _backdropClick: Subject<MouseEvent> = new Subject();\n  private _attachments = new Subject<void>();\n  private _detachments = new Subject<void>();\n  private _positionStrategy: PositionStrategy | undefined;\n  private _scrollStrategy: ScrollStrategy | undefined;\n  private _locationChanges: SubscriptionLike = Subscription.EMPTY;\n  private _backdropClickHandler = (event: MouseEvent) => this._backdropClick.next(event);\n\n  /**\n   * Reference to the parent of the `_host` at the time it was detached. Used to restore\n   * the `_host` to its original position in the DOM when it gets re-attached.\n   */\n  private _previousHostParent: HTMLElement;\n\n  /** Stream of keydown events dispatched to this overlay. */\n  _keydownEvents = new Subject<KeyboardEvent>();\n\n  /** Stream of mouse outside events dispatched to this overlay. */\n  _outsidePointerEvents = new Subject<MouseEvent>();\n\n  constructor(\n      private _portalOutlet: PortalOutlet,\n      private _host: HTMLElement,\n      private _pane: HTMLElement,\n      private _config: ImmutableObject<OverlayConfig>,\n      private _ngZone: NgZone,\n      private _keyboardDispatcher: OverlayKeyboardDispatcher,\n      private _document: Document,\n      // @breaking-change 8.0.0 `_location` parameter to be made required.\n      private _location?: Location,\n      // @breaking-change 9.0.0 `_mouseClickDispatcher` parameter to be made required.\n      private _outsideClickDispatcher?: OverlayOutsideClickDispatcher) {\n\n    if (_config.scrollStrategy) {\n      this._scrollStrategy = _config.scrollStrategy;\n      this._scrollStrategy.attach(this);\n    }\n\n    this._positionStrategy = _config.positionStrategy;\n  }\n\n  /** The overlay's HTML element */\n  get overlayElement(): HTMLElement {\n    return this._pane;\n  }\n\n  /** The overlay's backdrop HTML element. */\n  get backdropElement(): HTMLElement | null {\n    return this._backdropElement;\n  }\n\n  /**\n   * Wrapper around the panel element. Can be used for advanced\n   * positioning where a wrapper with specific styling is\n   * required around the overlay pane.\n   */\n  get hostElement(): HTMLElement {\n    return this._host;\n  }\n\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n  attach(portal: any): any;\n\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal: Portal<any>): any {\n    let attachResult = this._portalOutlet.attach(portal);\n\n    // Update the pane element with the given configuration.\n    if (!this._host.parentElement && this._previousHostParent) {\n      this._previousHostParent.appendChild(this._host);\n    }\n\n    if (this._positionStrategy) {\n      this._positionStrategy.attach(this);\n    }\n\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n\n    if (this._scrollStrategy) {\n      this._scrollStrategy.enable();\n    }\n\n    // Update the position once the zone is stable so that the overlay will be fully rendered\n    // before attempting to position it, as the position may depend on the size of the rendered\n    // content.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        // The overlay could've been detached before the zone has stabilized.\n        if (this.hasAttached()) {\n          this.updatePosition();\n        }\n      });\n\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n\n    if (this._config.panelClass) {\n      this._toggleClasses(this._pane, this._config.panelClass, true);\n    }\n\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n\n    // @breaking-change 8.0.0 remove the null check for `_location`\n    // once the constructor parameter is made required.\n    if (this._config.disposeOnNavigation && this._location) {\n      this._locationChanges = this._location.subscribe(() => this.dispose());\n    }\n\n    // @breaking-change 9.0.0 remove the null check for `_mouseClickDispatcher`\n    if (this._outsideClickDispatcher) {\n      this._outsideClickDispatcher.add(this);\n    }\n\n    return attachResult;\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach(): any {\n    if (!this.hasAttached()) {\n      return;\n    }\n\n    this.detachBackdrop();\n\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n\n    if (this._positionStrategy && this._positionStrategy.detach) {\n      this._positionStrategy.detach();\n    }\n\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n    }\n\n    const detachmentResult = this._portalOutlet.detach();\n\n    // Only emit after everything is detached.\n    this._detachments.next();\n\n    // Remove this overlay from keyboard dispatcher tracking.\n    this._keyboardDispatcher.remove(this);\n\n    // Keeping the host element in the DOM can cause scroll jank, because it still gets\n    // rendered, even though it's transparent and unclickable which is why we remove it.\n    this._detachContentWhenStable();\n\n    // Stop listening for location changes.\n    this._locationChanges.unsubscribe();\n\n    // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`\n    if (this._outsideClickDispatcher) {\n      this._outsideClickDispatcher.remove(this);\n    }\n\n    return detachmentResult;\n  }\n\n  /** Cleans up the overlay from the DOM. */\n  dispose(): void {\n    const isAttached = this.hasAttached();\n\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n\n    this._disposeScrollStrategy();\n    this.detachBackdrop();\n    this._locationChanges.unsubscribe();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n    this._outsidePointerEvents.complete();\n\n    // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`\n    if (this._outsideClickDispatcher) {\n      this._outsideClickDispatcher.remove(this);\n    }\n\n    if (this._host && this._host.parentNode) {\n      this._host.parentNode.removeChild(this._host);\n      this._host = null!;\n    }\n\n    this._previousHostParent = this._pane = null!;\n\n    if (isAttached) {\n      this._detachments.next();\n    }\n\n    this._detachments.complete();\n  }\n\n  /** Whether the overlay has attached content. */\n  hasAttached(): boolean {\n    return this._portalOutlet.hasAttached();\n  }\n\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick(): Observable<MouseEvent> {\n    return this._backdropClick;\n  }\n\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments(): Observable<void> {\n    return this._attachments;\n  }\n\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments(): Observable<void> {\n    return this._detachments;\n  }\n\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._keydownEvents;\n  }\n\n  /** Gets an observable of pointer events targeted outside this overlay. */\n  outsidePointerEvents(): Observable<MouseEvent> {\n    return this._outsidePointerEvents;\n  }\n\n  /** Gets the current overlay configuration, which is immutable. */\n  getConfig(): OverlayConfig {\n    return this._config;\n  }\n\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition(): void {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** Switches to a new position strategy and updates the overlay position. */\n  updatePositionStrategy(strategy: PositionStrategy): void {\n    if (strategy === this._positionStrategy) {\n      return;\n    }\n\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n\n    this._positionStrategy = strategy;\n\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      this.updatePosition();\n    }\n  }\n\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig: OverlaySizeConfig): void {\n    this._config = {...this._config, ...sizeConfig};\n    this._updateElementSize();\n  }\n\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir: Direction | Directionality): void {\n    this._config = {...this._config, direction: dir};\n    this._updateElementDirection();\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): void {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, true);\n    }\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): void {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, false);\n    }\n  }\n\n  /**\n   * Returns the layout direction of the overlay panel.\n   */\n  getDirection(): Direction {\n    const direction = this._config.direction;\n\n    if (!direction) {\n      return 'ltr';\n    }\n\n    return typeof direction === 'string' ? direction : direction.value;\n  }\n\n  /** Switches to a new scroll strategy. */\n  updateScrollStrategy(strategy: ScrollStrategy): void {\n    if (strategy === this._scrollStrategy) {\n      return;\n    }\n\n    this._disposeScrollStrategy();\n    this._scrollStrategy = strategy;\n\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      strategy.enable();\n    }\n  }\n\n  /** Updates the text direction of the overlay panel. */\n  private _updateElementDirection() {\n    this._host.setAttribute('dir', this.getDirection());\n  }\n\n  /** Updates the size of the overlay element based on the overlay config. */\n  private _updateElementSize() {\n    if (!this._pane) {\n      return;\n    }\n\n    const style = this._pane.style;\n\n    style.width = coerceCssPixelValue(this._config.width);\n    style.height = coerceCssPixelValue(this._config.height);\n    style.minWidth = coerceCssPixelValue(this._config.minWidth);\n    style.minHeight = coerceCssPixelValue(this._config.minHeight);\n    style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n    style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n  }\n\n  /** Toggles the pointer events for the overlay pane element. */\n  private _togglePointerEvents(enablePointer: boolean) {\n    this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n  }\n\n  /** Attaches a backdrop for this overlay. */\n  private _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n\n    if (this._config.backdropClass) {\n      this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n    }\n\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._host.parentElement!.insertBefore(this._backdropElement, this._host);\n\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', this._backdropClickHandler);\n\n    // Add class to fade-in the backdrop after one frame.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  private _updateStackingOrder() {\n    if (this._host.nextSibling) {\n      this._host.parentNode!.appendChild(this._host);\n    }\n  }\n\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop(): void {\n    let backdropToDetach = this._backdropElement;\n\n    if (!backdropToDetach) {\n      return;\n    }\n\n    let timeoutId: number;\n    let finishDetach = () => {\n      // It may not be attached to anything in certain cases (e.g. unit tests).\n      if (backdropToDetach) {\n        backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n        backdropToDetach.removeEventListener('transitionend', finishDetach);\n\n        if (backdropToDetach.parentNode) {\n          backdropToDetach.parentNode.removeChild(backdropToDetach);\n        }\n      }\n\n      // It is possible that a new portal has been attached to this overlay since we started\n      // removing the backdrop. If that is the case, only clear the backdrop reference if it\n      // is still the same instance that we started to remove.\n      if (this._backdropElement == backdropToDetach) {\n        this._backdropElement = null;\n      }\n\n      if (this._config.backdropClass) {\n        this._toggleClasses(backdropToDetach!, this._config.backdropClass, false);\n      }\n\n      clearTimeout(timeoutId);\n    };\n\n    backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n\n    this._ngZone.runOutsideAngular(() => {\n      backdropToDetach!.addEventListener('transitionend', finishDetach);\n    });\n\n    // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n    // In this case we make it unclickable and we try to remove it after a delay.\n    backdropToDetach.style.pointerEvents = 'none';\n\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\n    // If it were to run inside the Angular zone, every test that used Overlay would have to be\n    // either async or fakeAsync.\n    timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n  }\n\n  /** Toggles a single CSS class or an array of classes on an element. */\n  private _toggleClasses(element: HTMLElement, cssClasses: string | string[], isAdd: boolean) {\n    const classList = element.classList;\n\n    coerceArray(cssClasses).forEach(cssClass => {\n      // We can't do a spread here, because IE doesn't support setting multiple classes.\n      // Also trying to add an empty string to a DOMTokenList will throw.\n      if (cssClass) {\n        isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n      }\n    });\n  }\n\n  /** Detaches the overlay content next time the zone stabilizes. */\n  private _detachContentWhenStable() {\n    // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n    // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n    // be patched to run inside the zone, which will throw us into an infinite loop.\n    this._ngZone.runOutsideAngular(() => {\n      // We can't remove the host here immediately, because the overlay pane's content\n      // might still be animating. This stream helps us avoid interrupting the animation\n      // by waiting for the pane to become empty.\n      const subscription = this._ngZone.onStable\n        .pipe(takeUntil(merge(this._attachments, this._detachments)))\n        .subscribe(() => {\n          // Needs a couple of checks for the pane and host, because\n          // they may have been removed by the time the zone stabilizes.\n          if (!this._pane || !this._host || this._pane.children.length === 0) {\n            if (this._pane && this._config.panelClass) {\n              this._toggleClasses(this._pane, this._config.panelClass, false);\n            }\n\n            if (this._host && this._host.parentElement) {\n              this._previousHostParent = this._host.parentElement;\n              this._previousHostParent.removeChild(this._host);\n            }\n\n            subscription.unsubscribe();\n          }\n        });\n    });\n  }\n\n  /** Disposes of a scroll strategy. */\n  private _disposeScrollStrategy() {\n    const scrollStrategy = this._scrollStrategy;\n\n    if (scrollStrategy) {\n      scrollStrategy.disable();\n\n      if (scrollStrategy.detach) {\n        scrollStrategy.detach();\n      }\n    }\n  }\n}\n\n\n/** Size properties for an overlay. */\nexport interface OverlaySizeConfig {\n  width?: number | string;\n  height?: number | string;\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {ElementRef} from '@angular/core';\nimport {ViewportRuler, CdkScrollable, ViewportScrollPosition} from '@angular/cdk/scrolling';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  ScrollingVisibility,\n  validateHorizontalPosition,\n  validateVerticalPosition,\n} from './connected-position';\nimport {Observable, Subscription, Subject} from 'rxjs';\nimport {OverlayReference} from '../overlay-reference';\nimport {isElementScrolledOutsideView, isElementClippedByScrolling} from './scroll-clip';\nimport {coerceCssPixelValue, coerceArray} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {OverlayContainer} from '../overlay-container';\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/** Possible values that can be set as the origin of a FlexibleConnectedPositionStrategy. */\nexport type FlexibleConnectedPositionStrategyOrigin = ElementRef | Element | Point & {\n  width?: number;\n  height?: number;\n};\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class FlexibleConnectedPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n\n  /** Whether we're performing the very first positioning of the overlay. */\n  private _isInitialRender: boolean;\n\n  /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n  private _lastBoundingBoxSize = {width: 0, height: 0};\n\n  /** Whether the overlay was pushed in a previous positioning. */\n  private _isPushed = false;\n\n  /** Whether the overlay can be pushed on-screen on the initial open. */\n  private _canPush = true;\n\n  /** Whether the overlay can grow via flexible width/height after the initial open. */\n  private _growAfterOpen = false;\n\n  /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n  private _hasFlexibleDimensions = true;\n\n  /** Whether the overlay position is locked. */\n  private _positionLocked = false;\n\n  /** Cached origin dimensions */\n  private _originRect: ClientRect;\n\n  /** Cached overlay dimensions */\n  private _overlayRect: ClientRect;\n\n  /** Cached viewport dimensions */\n  private _viewportRect: ClientRect;\n\n  /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n  private _viewportMargin = 0;\n\n  /** The Scrollable containers used to check scrollable view properties on position change. */\n  private _scrollables: CdkScrollable[] = [];\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** The origin element against which the overlay will be positioned. */\n  private _origin: FlexibleConnectedPositionStrategyOrigin;\n\n  /** The overlay pane element. */\n  private _pane: HTMLElement;\n\n  /** Whether the strategy has been disposed of already. */\n  private _isDisposed: boolean;\n\n  /**\n   * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n   * within the viewport.\n   */\n  private _boundingBox: HTMLElement | null;\n\n  /** The last position to have been calculated as the best fit position. */\n  private _lastPosition: ConnectedPosition | null;\n\n  /** Subject that emits whenever the position changes. */\n  private _positionChanges = new Subject<ConnectedOverlayPositionChange>();\n\n  /** Subscription to viewport size changes. */\n  private _resizeSubscription = Subscription.EMPTY;\n\n  /** Default offset for the overlay along the x axis. */\n  private _offsetX = 0;\n\n  /** Default offset for the overlay along the y axis. */\n  private _offsetY = 0;\n\n  /** Selector to be used when finding the elements on which to set the transform origin. */\n  private _transformOriginSelector: string;\n\n  /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n  private _appliedPanelClasses: string[] = [];\n\n  /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n  private _previousPushAmount: {x: number, y: number} | null;\n\n  /** Observable sequence of position changes. */\n  positionChanges: Observable<ConnectedOverlayPositionChange> = this._positionChanges;\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  constructor(\n      connectedTo: FlexibleConnectedPositionStrategyOrigin, private _viewportRuler: ViewportRuler,\n      private _document: Document, private _platform: Platform,\n      private _overlayContainer: OverlayContainer) {\n    this.setOrigin(connectedTo);\n  }\n\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef: OverlayReference): void {\n    if (this._overlayRef && overlayRef !== this._overlayRef &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n\n    this._validatePositions();\n\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply(): void {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n\n    // We need the bounding rects for the origin and the overlay to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits: FlexibleFit[] = [];\n\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback: FallbackPosition | undefined;\n\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, pos);\n\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n        });\n\n        continue;\n      }\n\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = {overlayFit, overlayPoint, originPoint, position: pos, overlayRect};\n      }\n    }\n\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit: FlexibleFit | null = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score =\n            fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n\n      this._isPushed = false;\n      this._applyPosition(bestFit!.position, bestFit!.origin);\n      return;\n    }\n\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback!.position, fallback!.originPoint);\n      return;\n    }\n\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback!.position, fallback!.originPoint);\n  }\n\n  detach(): void {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /** Cleanup after the element gets destroyed. */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: '',\n      } as CSSStyleDeclaration);\n    }\n\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null!;\n    this._isDisposed = true;\n  }\n\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition(): void {\n    if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n\n      const lastPosition = this._lastPosition || this._preferredPositions[0];\n      const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n\n      this._applyPosition(lastPosition, originPoint);\n    }\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]): this {\n    this._scrollables = scrollables;\n    return this;\n  }\n\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions: ConnectedPosition[]): this {\n    this._preferredPositions = positions;\n\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition!) === -1) {\n      this._lastPosition = null;\n    }\n\n    this._validatePositions();\n\n    return this;\n  }\n\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin: number): this {\n    this._viewportMargin = margin;\n    return this;\n  }\n\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true): this {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true): this {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true): this {\n    this._canPush = canPush;\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true): this {\n    this._positionLocked = isLocked;\n    return this;\n  }\n\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin: FlexibleConnectedPositionStrategyOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector: string): this {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  private _getOriginPoint(originRect: ClientRect, pos: ConnectedPosition): Point {\n    let x: number;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + (originRect.width / 2);\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n\n    let y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + (originRect.height / 2);\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    return {x, y};\n  }\n\n\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  private _getOverlayPoint(\n      originPoint: Point,\n      overlayRect: ClientRect,\n      pos: ConnectedPosition): Point {\n\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n\n    let overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY,\n    };\n  }\n\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  private _getOverlayFit(point: Point, overlay: ClientRect, viewport: ClientRect,\n    position: ConnectedPosition): OverlayFit {\n\n    let {x, y} = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n\n    if (offsetY) {\n      y += offsetY;\n    }\n\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = (x + overlay.width) - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = (y + overlay.height) - viewport.height;\n\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width,\n    };\n  }\n\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlat at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  private _canFitWithFlexibleDimensions(fit: OverlayFit, point: Point, viewport: ClientRect) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n\n      const verticalFit = fit.fitsInViewportVertically ||\n          (minHeight != null && minHeight <= availableHeight);\n      const horizontalFit = fit.fitsInViewportHorizontally ||\n          (minWidth != null && minWidth <= availableWidth);\n\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param overlay Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  private _pushOverlayOnScreen(start: Point,\n                               overlay: ClientRect,\n                               scrollPosition: ViewportScrollPosition): Point {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y\n      };\n    }\n\n    const viewport = this._viewportRect;\n\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n    }\n\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n    }\n\n    this._previousPushAmount = {x: pushX, y: pushY};\n\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY,\n    };\n  }\n\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  private _applyPosition(position: ConnectedPosition, originPoint: Point) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculcations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollableViewProperties = this._getScrollVisibility();\n      const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n      this._positionChanges.next(changeEvent);\n    }\n\n    this._isInitialRender = false;\n  }\n\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  private _setTransformOrigin(position: ConnectedPosition) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n\n    const elements: NodeListOf<HTMLElement> =\n        this._boundingBox!.querySelectorAll(this._transformOriginSelector);\n    let xOrigin: 'left' | 'right' | 'center';\n    let yOrigin: 'top' | 'bottom' | 'center' = position.overlayY;\n\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  private _calculateBoundingBoxRect(origin: Point, position: ConnectedPosition): BoundingBoxRect {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height: number, top: number, bottom: number;\n\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge =\n          Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n\n      const previousHeight = this._lastBoundingBoxSize.height;\n\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - (previousHeight / 2);\n      }\n    }\n\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge =\n        (position.overlayX === 'start' && !isRtl) ||\n        (position.overlayX === 'end' && isRtl);\n\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge =\n        (position.overlayX === 'end' && !isRtl) ||\n        (position.overlayX === 'start' && isRtl);\n\n    let width: number, left: number, right: number;\n\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge =\n          Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - (previousWidth / 2);\n      }\n    }\n\n    return {top: top!, left: left!, bottom: bottom!, right: right!, width, height};\n  }\n\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stetches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  private _setBoundingBoxStyles(origin: Point, position: ConnectedPosition): void {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n\n    const styles = {} as CSSStyleDeclaration;\n\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n\n    this._lastBoundingBoxSize = boundingBoxRect;\n\n    extendStyles(this._boundingBox!.style, styles);\n  }\n\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  private _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox!.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  private _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Sets positioning styles to the overlay element. */\n  private _setOverlayElementStyles(originPoint: Point, position: ConnectedPosition): void {\n    const styles = {} as CSSStyleDeclaration;\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n\n    styles.transform = transformString.trim();\n\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n\n    extendStyles(this._pane.style, styles);\n  }\n\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayY(position: ConnectedPosition,\n                            originPoint: Point,\n                            scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = {top: '', bottom: ''} as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    let virtualKeyboardOffset =\n        this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n\n    // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n    // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    overlayPoint.y -= virtualKeyboardOffset;\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement!.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n\n    return styles;\n  }\n\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayX(position: ConnectedPosition,\n                            originPoint: Point,\n                            scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = {left: '', right: ''} as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty: 'left' | 'right';\n\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement!.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  private _getScrollVisibility(): ScrollingVisibility {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds =  this._pane.getBoundingClientRect();\n\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  private _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  private _getNarrowedViewportRect(): ClientRect {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement!.clientWidth;\n    const height = this._document.documentElement!.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n    return {\n      top:    scrollPosition.top + this._viewportMargin,\n      left:   scrollPosition.left + this._viewportMargin,\n      right:  scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width:  width  - (2 * this._viewportMargin),\n      height: height - (2 * this._viewportMargin),\n    };\n  }\n\n  /** Whether the we're dealing with an RTL context */\n  private _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  private _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n\n  /** Retrieves the offset of a position along the x or y axis. */\n  private _getOffset(position: ConnectedPosition, axis: 'x' | 'y') {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n\n  /** Validates that the current position match the expected values. */\n  private _validatePositions(): void {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  private _addPanelClasses(cssClasses: string | string[]) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  private _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n\n  /** Returns the ClientRect of the current origin. */\n  private _getOriginRect(): ClientRect {\n    const origin = this._origin;\n\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n}\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/** Record of measurements for how an overlay (at a given position) fits into the viewport. */\ninterface OverlayFit {\n  /** Whether the overlay fits completely in the viewport. */\n  isCompletelyWithinViewport: boolean;\n\n  /** Whether the overlay fits in the viewport on the y-axis. */\n  fitsInViewportVertically: boolean;\n\n  /** Whether the overlay fits in the viewport on the x-axis. */\n  fitsInViewportHorizontally: boolean;\n\n  /** The total visible area (in px^2) of the overlay inside the viewport. */\n  visibleArea: number;\n}\n\n/** Record of the measurments determining whether an overlay will fit in a specific position. */\ninterface FallbackPosition {\n  position: ConnectedPosition;\n  originPoint: Point;\n  overlayPoint: Point;\n  overlayFit: OverlayFit;\n  overlayRect: ClientRect;\n}\n\n/** Position and size of the overlay sizing wrapper for a specific position. */\ninterface BoundingBoxRect {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  height: number;\n  width: number;\n}\n\n/** Record of measures determining how well a given position will fit with flexible dimensions. */\ninterface FlexibleFit {\n  position: ConnectedPosition;\n  origin: Point;\n  overlayRect: ClientRect;\n  boundingBoxRect: BoundingBoxRect;\n}\n\n/** A connected position as specified by the user. */\nexport interface ConnectedPosition {\n  originX: 'start' | 'center' | 'end';\n  originY: 'top' | 'center' | 'bottom';\n\n  overlayX: 'start' | 'center' | 'end';\n  overlayY: 'top' | 'center' | 'bottom';\n\n  weight?: number;\n  offsetX?: number;\n  offsetY?: number;\n  panelClass?: string | string[];\n}\n\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination: CSSStyleDeclaration,\n                      source: CSSStyleDeclaration): CSSStyleDeclaration {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n\n  return destination;\n}\n\n\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input: number|string|null|undefined): number|null {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return (!units || units === 'px') ? parseFloat(value) : null;\n  }\n\n  return input || null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {CdkScrollable, ViewportRuler} from '@angular/cdk/scrolling';\nimport {ElementRef} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {OverlayContainer} from '../overlay-container';\nimport {OverlayReference} from '../overlay-reference';\n\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n} from './connected-position';\nimport {FlexibleConnectedPositionStrategy} from './flexible-connected-position-strategy';\nimport {PositionStrategy} from './position-strategy';\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nexport class ConnectedPositionStrategy implements PositionStrategy {\n  /**\n   * Reference to the underlying position strategy to which all the API calls are proxied.\n   * @docs-private\n   */\n  _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n\n  private _direction: Direction | null;\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** Emits an event when the connection point changes. */\n  readonly onPositionChange: Observable<ConnectedOverlayPositionChange>;\n\n  constructor(\n      originPos: OriginConnectionPosition, overlayPos: OverlayConnectionPosition,\n      connectedTo: ElementRef<HTMLElement>, viewportRuler: ViewportRuler, document: Document,\n      platform: Platform, overlayContainer: OverlayContainer) {\n    // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n    // the extra logic, we create an instance of the positioning strategy that has some\n    // defaults that make it behave as the old position strategy and to which we'll\n    // proxy all of the API calls.\n    this._positionStrategy = new FlexibleConnectedPositionStrategy(\n                                 connectedTo, viewportRuler, document, platform, overlayContainer)\n                                 .withFlexibleDimensions(false)\n                                 .withPush(false)\n                                 .withViewportMargin(0);\n\n    this.withFallbackPosition(originPos, overlayPos);\n    this.onPositionChange = this._positionStrategy.positionChanges;\n  }\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  /** Attach this position strategy to an overlay. */\n  attach(overlayRef: OverlayReference): void {\n    this._overlayRef = overlayRef;\n    this._positionStrategy.attach(overlayRef);\n\n    if (this._direction) {\n      overlayRef.setDirection(this._direction);\n      this._direction = null;\n    }\n  }\n\n  /** Disposes all resources used by the position strategy. */\n  dispose() {\n    this._positionStrategy.dispose();\n  }\n\n  /** @docs-private */\n  detach() {\n    this._positionStrategy.detach();\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin fits on-screen.\n   * @docs-private\n   */\n  apply(): void {\n    this._positionStrategy.apply();\n  }\n\n  /**\n   * Re-positions the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  recalculateLastPosition(): void {\n    this._positionStrategy.reapplyLastPosition();\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]) {\n    this._positionStrategy.withScrollableContainers(scrollables);\n  }\n\n  /**\n   * Adds a new preferred fallback position.\n   * @param originPos\n   * @param overlayPos\n   */\n  withFallbackPosition(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition,\n      offsetX?: number,\n      offsetY?: number): this {\n\n    const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n    this._preferredPositions.push(position);\n    this._positionStrategy.withPositions(this._preferredPositions);\n    return this;\n  }\n\n  /**\n   * Sets the layout direction so the overlay's position can be adjusted to match.\n   * @param dir New layout direction.\n   */\n  withDirection(dir: 'ltr' | 'rtl'): this {\n    // Since the direction might be declared before the strategy is attached,\n    // we save the value in a temporary property and we'll transfer it to the\n    // overlay ref on attachment.\n    if (this._overlayRef) {\n      this._overlayRef.setDirection(dir);\n    } else {\n      this._direction = dir;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the x-axis\n   * @param offset New offset in the X axis.\n   */\n  withOffsetX(offset: number): this {\n    this._positionStrategy.withDefaultOffsetX(offset);\n    return this;\n  }\n\n  /**\n   * Sets an offset for the overlay's connection point on the y-axis\n   * @param  offset New offset in the Y axis.\n   */\n  withOffsetY(offset: number): this {\n    this._positionStrategy.withDefaultOffsetY(offset);\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked: boolean): this {\n    this._positionStrategy.withLockedPosition(isLocked);\n    return this;\n  }\n\n  /**\n   * Overwrites the current set of positions with an array of new ones.\n   * @param positions Position pairs to be set on the strategy.\n   */\n  withPositions(positions: ConnectionPositionPair[]): this {\n    this._preferredPositions = positions.slice();\n    this._positionStrategy.withPositions(this._preferredPositions);\n    return this;\n  }\n\n  /**\n   * Sets the origin element, relative to which to position the overlay.\n   * @param origin Reference to the new origin element.\n   */\n  setOrigin(origin: ElementRef): this {\n    this._positionStrategy.setOrigin(origin);\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PositionStrategy} from './position-strategy';\nimport {OverlayReference} from '../overlay-reference';\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayReference;\n  private _cssPosition: string = 'static';\n  private _topOffset: string = '';\n  private _bottomOffset: string = '';\n  private _leftOffset: string = '';\n  private _rightOffset: string = '';\n  private _alignItems: string = '';\n  private _justifyContent: string = '';\n  private _width: string = '';\n  private _height: string = '';\n  private _isDisposed: boolean;\n\n  attach(overlayRef: OverlayReference): void {\n    const config = overlayRef.getConfig();\n\n    this._overlayRef = overlayRef;\n\n    if (this._width && !config.width) {\n      overlayRef.updateSize({width: this._width});\n    }\n\n    if (this._height && !config.height) {\n      overlayRef.updateSize({height: this._height});\n    }\n\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value: string = ''): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value: string = ''): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value: string = ''): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value: string = ''): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({width: value});\n    } else {\n      this._width = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value: string = ''): this {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({height: value});\n    } else {\n      this._height = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset: string = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset: string = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply(): void {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n    const {width, height, maxWidth, maxHeight} = config;\n    const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n                                      (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n    const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n                                    (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n\n    styles.position = this._cssPosition;\n    styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n    styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n\n    if (shouldBeFlushHorizontally) {\n      parentStyles.justifyContent = 'flex-start';\n    } else if (this._justifyContent === 'center') {\n      parentStyles.justifyContent = 'center';\n    } else if (this._overlayRef.getConfig().direction === 'rtl') {\n      // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n      // don't want that because our positioning is explicitly `left` and `right`, hence\n      // why we do another inversion to ensure that the overlay stays in the same position.\n      // TODO: reconsider this if we add `start` and `end` methods.\n      if (this._justifyContent === 'flex-start') {\n        parentStyles.justifyContent = 'flex-end';\n      } else if (this._justifyContent === 'flex-end') {\n        parentStyles.justifyContent = 'flex-start';\n      }\n    } else {\n      parentStyles.justifyContent = this._justifyContent;\n    }\n\n    parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n  }\n\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose(): void {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n      styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n\n    this._overlayRef = null!;\n    this._isDisposed = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {DOCUMENT} from '@angular/common';\nimport {ElementRef, Inject, Injectable} from '@angular/core';\n\nimport {OverlayContainer} from '../overlay-container';\n\nimport {OriginConnectionPosition, OverlayConnectionPosition} from './connected-position';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {\n  FlexibleConnectedPositionStrategy,\n  FlexibleConnectedPositionStrategyOrigin,\n} from './flexible-connected-position-strategy';\nimport {GlobalPositionStrategy} from './global-position-strategy';\n\n\n/** Builder for overlay position strategy. */\n@Injectable({providedIn: 'root'})\nexport class OverlayPositionBuilder {\n  constructor(\n      private _viewportRuler: ViewportRuler, @Inject(DOCUMENT) private _document: any,\n      private _platform: Platform, private _overlayContainer: OverlayContainer) {}\n\n  /**\n   * Creates a global position strategy.\n   */\n  global(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy();\n  }\n\n  /**\n   * Creates a relative position strategy.\n   * @param elementRef\n   * @param originPos\n   * @param overlayPos\n   * @deprecated Use `flexibleConnectedTo` instead.\n   * @breaking-change 8.0.0\n   */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n    return new ConnectedPositionStrategy(\n        originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform,\n        this._overlayContainer);\n  }\n\n  /**\n   * Creates a flexible position strategy.\n   * @param origin Origin relative to which to position the overlay.\n   */\n  flexibleConnectedTo(origin: FlexibleConnectedPositionStrategyOrigin):\n    FlexibleConnectedPositionStrategy {\n    return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document,\n        this._platform, this._overlayContainer);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DomPortalOutlet} from '@angular/cdk/portal';\nimport {DOCUMENT, Location} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n} from '@angular/core';\nimport {OverlayKeyboardDispatcher} from './dispatchers/overlay-keyboard-dispatcher';\nimport {OverlayOutsideClickDispatcher} from './dispatchers/overlay-outside-click-dispatcher';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayContainer} from './overlay-container';\nimport {OverlayRef} from './overlay-ref';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {ScrollStrategyOptions} from './scroll/index';\n\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\n@Injectable()\nexport class Overlay {\n  private _appRef: ApplicationRef;\n\n  constructor(\n              /** Scrolling strategies that can be used when creating an overlay. */\n              public scrollStrategies: ScrollStrategyOptions,\n              private _overlayContainer: OverlayContainer,\n              private _componentFactoryResolver: ComponentFactoryResolver,\n              private _positionBuilder: OverlayPositionBuilder,\n              private _keyboardDispatcher: OverlayKeyboardDispatcher,\n              private _injector: Injector,\n              private _ngZone: NgZone,\n              @Inject(DOCUMENT) private _document: any,\n              private _directionality: Directionality,\n              // @breaking-change 8.0.0 `_location` parameter to be made required.\n              private _location?: Location,\n              // @breaking-change 9.0.0 `_outsideClickDispatcher` parameter to be made required.\n              private _outsideClickDispatcher?: OverlayOutsideClickDispatcher) { }\n\n  /**\n   * Creates an overlay.\n   * @param config Configuration applied to the overlay.\n   * @returns Reference to the created overlay.\n   */\n  create(config?: OverlayConfig): OverlayRef {\n    const host = this._createHostElement();\n    const pane = this._createPaneElement(host);\n    const portalOutlet = this._createPortalOutlet(pane);\n    const overlayConfig = new OverlayConfig(config);\n\n    overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone,\n      this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n  }\n\n  /**\n   * Gets a position builder that can be used, via fluent API,\n   * to construct and configure a position strategy.\n   * @returns An overlay position builder.\n   */\n  position(): OverlayPositionBuilder {\n    return this._positionBuilder;\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(host: HTMLElement): HTMLElement {\n    const pane = this._document.createElement('div');\n\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n\n    return pane;\n  }\n\n  /**\n   * Creates the host element that wraps around an overlay\n   * and can be used for advanced positioning.\n   * @returns Newly-create host element.\n   */\n  private _createHostElement(): HTMLElement {\n    const host = this._document.createElement('div');\n    this._overlayContainer.getContainerElement().appendChild(host);\n    return host;\n  }\n\n  /**\n   * Create a DomPortalOutlet into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal outlet.\n   * @returns A portal outlet for the given DOM element.\n   */\n  private _createPortalOutlet(pane: HTMLElement): DomPortalOutlet {\n    // We have to resolve the ApplicationRef later in order to allow people\n    // to use overlay-based providers during app initialization.\n    if (!this._appRef) {\n      this._appRef = this._injector.get<ApplicationRef>(ApplicationRef);\n    }\n\n    return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector,\n                               this._document);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {takeWhile} from 'rxjs/operators';\nimport {Overlay} from './overlay';\nimport {OverlayConfig} from './overlay-config';\nimport {OverlayRef} from './overlay-ref';\nimport {ConnectedOverlayPositionChange} from './position/connected-position';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n} from './position/flexible-connected-position-strategy';\nimport {\n  RepositionScrollStrategy,\n  RepositionScrollStrategyConfig,\n  ScrollStrategy,\n} from './scroll/index';\n\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList: ConnectedPosition[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  }\n];\n\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('cdk-connected-overlay-scroll-strategy');\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return (config?: RepositionScrollStrategyConfig) => overlay.scrollStrategies.reposition(config);\n}\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n})\nexport class CdkOverlayOrigin {\n  constructor(\n      /** Reference to the element on which the directive is applied. */\n      public elementRef: ElementRef) { }\n}\n\n\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n})\nexport class CdkConnectedOverlay implements OnDestroy, OnChanges {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n  private _hasBackdrop = false;\n  private _lockPosition = false;\n  private _growAfterOpen = false;\n  private _flexibleDimensions = false;\n  private _push = false;\n  private _backdropSubscription = Subscription.EMPTY;\n  private _attachSubscription = Subscription.EMPTY;\n  private _detachSubscription = Subscription.EMPTY;\n  private _positionSubscription = Subscription.EMPTY;\n  private _offsetX: number;\n  private _offsetY: number;\n  private _position: FlexibleConnectedPositionStrategy;\n  private _scrollStrategyFactory: () => ScrollStrategy;\n\n  /** Origin for the connected overlay. */\n  @Input('cdkConnectedOverlayOrigin') origin: CdkOverlayOrigin;\n\n  /** Registered connected position pairs. */\n  @Input('cdkConnectedOverlayPositions') positions: ConnectedPosition[];\n\n  /**\n   * This input overrides the positions input if specified. It lets users pass\n   * in arbitrary positioning strategies.\n   */\n  @Input('cdkConnectedOverlayPositionStrategy') positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  @Input('cdkConnectedOverlayOffsetX')\n  get offsetX(): number { return this._offsetX; }\n  set offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  @Input('cdkConnectedOverlayOffsetY')\n  get offsetY() { return this._offsetY; }\n  set offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n    }\n  }\n\n  /** The width of the overlay panel. */\n  @Input('cdkConnectedOverlayWidth') width: number | string;\n\n  /** The height of the overlay panel. */\n  @Input('cdkConnectedOverlayHeight') height: number | string;\n\n  /** The min width of the overlay panel. */\n  @Input('cdkConnectedOverlayMinWidth') minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n  @Input('cdkConnectedOverlayMinHeight') minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n  @Input('cdkConnectedOverlayBackdropClass') backdropClass: string;\n\n  /** The custom class to add to the overlay pane element. */\n  @Input('cdkConnectedOverlayPanelClass') panelClass: string | string[];\n\n  /** Margin between the overlay and the viewport edges. */\n  @Input('cdkConnectedOverlayViewportMargin') viewportMargin: number = 0;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  @Input('cdkConnectedOverlayScrollStrategy') scrollStrategy: ScrollStrategy;\n\n  /** Whether the overlay is open. */\n  @Input('cdkConnectedOverlayOpen') open: boolean = false;\n\n  /** CSS selector which to set the transform origin. */\n  @Input('cdkConnectedOverlayTransformOriginOn') transformOriginSelector: string;\n\n  /** Whether or not the overlay should attach a backdrop. */\n  @Input('cdkConnectedOverlayHasBackdrop')\n  get hasBackdrop() { return this._hasBackdrop; }\n  set hasBackdrop(value: any) { this._hasBackdrop = coerceBooleanProperty(value); }\n\n  /** Whether or not the overlay should be locked when scrolling. */\n  @Input('cdkConnectedOverlayLockPosition')\n  get lockPosition() { return this._lockPosition; }\n  set lockPosition(value: any) { this._lockPosition = coerceBooleanProperty(value); }\n\n  /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n  @Input('cdkConnectedOverlayFlexibleDimensions')\n  get flexibleDimensions() { return this._flexibleDimensions; }\n  set flexibleDimensions(value: boolean) {\n    this._flexibleDimensions = coerceBooleanProperty(value);\n  }\n\n  /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n  @Input('cdkConnectedOverlayGrowAfterOpen')\n  get growAfterOpen() { return this._growAfterOpen; }\n  set growAfterOpen(value: boolean) { this._growAfterOpen = coerceBooleanProperty(value); }\n\n  /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  @Input('cdkConnectedOverlayPush')\n  get push() { return this._push; }\n  set push(value: boolean) { this._push = coerceBooleanProperty(value); }\n\n  /** Event emitted when the backdrop is clicked. */\n  @Output() backdropClick = new EventEmitter<MouseEvent>();\n\n  /** Event emitted when the position has changed. */\n  @Output() positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n  @Output() attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n  @Output() detach = new EventEmitter<void>();\n\n  /** Emits when there are keyboard events that are targeted at the overlay. */\n  @Output() overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n  /** Emits when there are mouse outside click events that are targeted at the overlay. */\n  @Output() overlayOutsideClick = new EventEmitter<MouseEvent>();\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\n      @Inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY) scrollStrategyFactory: any,\n      @Optional() private _dir: Directionality) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this.scrollStrategy = this._scrollStrategyFactory();\n  }\n\n  /** The associated overlay reference. */\n  get overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n\n  /** The element's layout direction. */\n  get dir(): Direction {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n\n  ngOnDestroy() {\n    this._attachSubscription.unsubscribe();\n    this._detachSubscription.unsubscribe();\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._position) {\n      this._updatePositionStrategy(this._position);\n      this._overlayRef.updateSize({\n        width: this.width,\n        minWidth: this.minWidth,\n        height: this.height,\n        minHeight: this.minHeight,\n      });\n\n      if (changes['origin'] && this.open) {\n        this._position.apply();\n      }\n    }\n\n    if (changes['open']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n\n  /** Creates an overlay */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n    this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n    this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n    overlayRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n      this.overlayKeydown.next(event);\n\n      if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n        event.preventDefault();\n        this._detachOverlay();\n      }\n    });\n\n    this._overlayRef.outsidePointerEvents().subscribe((event: MouseEvent) => {\n      this.overlayOutsideClick.next(event);\n    });\n  }\n\n  /** Builds the overlay config based on the directive's inputs */\n  private _buildConfig(): OverlayConfig {\n    const positionStrategy = this._position =\n      this.positionStrategy || this._createPositionStrategy();\n    const overlayConfig = new OverlayConfig({\n      direction: this._dir,\n      positionStrategy,\n      scrollStrategy: this.scrollStrategy,\n      hasBackdrop: this.hasBackdrop\n    });\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    if (this.panelClass) {\n      overlayConfig.panelClass = this.panelClass;\n    }\n\n    return overlayConfig;\n  }\n\n  /** Updates the state of a position strategy, based on the values of the directive inputs. */\n  private _updatePositionStrategy(positionStrategy: FlexibleConnectedPositionStrategy) {\n    const positions: ConnectedPosition[] = this.positions.map(currentPosition => ({\n      originX: currentPosition.originX,\n      originY: currentPosition.originY,\n      overlayX: currentPosition.overlayX,\n      overlayY: currentPosition.overlayY,\n      offsetX: currentPosition.offsetX || this.offsetX,\n      offsetY: currentPosition.offsetY || this.offsetY,\n      panelClass: currentPosition.panelClass || undefined,\n    }));\n\n    return positionStrategy\n      .setOrigin(this.origin.elementRef)\n      .withPositions(positions)\n      .withFlexibleDimensions(this.flexibleDimensions)\n      .withPush(this.push)\n      .withGrowAfterOpen(this.growAfterOpen)\n      .withViewportMargin(this.viewportMargin)\n      .withLockedPosition(this.lockPosition)\n      .withTransformOriginOn(this.transformOriginSelector);\n  }\n\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  private _createPositionStrategy(): FlexibleConnectedPositionStrategy {\n    const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n    this._updatePositionStrategy(strategy);\n    return strategy;\n  }\n\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  private _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    } else {\n      // Update the overlay size, in case the directive's inputs have changed\n      this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n    }\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n        this.backdropClick.emit(event);\n      });\n    } else {\n      this._backdropSubscription.unsubscribe();\n    }\n\n    this._positionSubscription.unsubscribe();\n\n    // Only subscribe to `positionChanges` if requested, because putting\n    // together all the information for it can be expensive.\n    if (this.positionChange.observers.length > 0) {\n      this._positionSubscription = this._position.positionChanges\n        .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n        .subscribe(position => {\n          this.positionChange.emit(position);\n\n          if (this.positionChange.observers.length === 0) {\n            this._positionSubscription.unsubscribe();\n          }\n        });\n    }\n  }\n\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  private _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n\n    this._backdropSubscription.unsubscribe();\n    this._positionSubscription.unsubscribe();\n  }\n\n  static ngAcceptInputType_hasBackdrop: BooleanInput;\n  static ngAcceptInputType_lockPosition: BooleanInput;\n  static ngAcceptInputType_flexibleDimensions: BooleanInput;\n  static ngAcceptInputType_growAfterOpen: BooleanInput;\n  static ngAcceptInputType_push: BooleanInput;\n}\n\n\n/** @docs-private */\nexport function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {NgModule, Provider} from '@angular/core';\nimport {OVERLAY_KEYBOARD_DISPATCHER_PROVIDER} from './dispatchers/overlay-keyboard-dispatcher';\nimport {Overlay} from './overlay';\nimport {OVERLAY_CONTAINER_PROVIDER} from './overlay-container';\nimport {\n  CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n  CdkConnectedOverlay,\n  CdkOverlayOrigin,\n} from './overlay-directives';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\n\n\n@NgModule({\n  imports: [BidiModule, PortalModule, ScrollingModule],\n  exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n  declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n  providers: [\n    Overlay,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n  ],\n})\nexport class OverlayModule {}\n\n\n/**\n * @deprecated Use `OverlayModule` instead.\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const OVERLAY_PROVIDERS: Provider[] = [\n  Overlay,\n  OverlayPositionBuilder,\n  OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n  OVERLAY_CONTAINER_PROVIDER,\n  CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {OverlayOutsideClickDispatcher} from './overlay-outside-click-dispatcher';\nexport {OverlayKeyboardDispatcher} from './overlay-keyboard-dispatcher';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Inject, OnDestroy} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\nimport {DOCUMENT} from '@angular/common';\nimport {Platform} from '@angular/cdk/platform';\n\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\n@Injectable({providedIn: 'root'})\nexport class FullscreenOverlayContainer extends OverlayContainer implements OnDestroy {\n  private _fullScreenEventName: string | undefined;\n  private _fullScreenListener: () => void;\n\n  constructor(\n    @Inject(DOCUMENT) _document: any,\n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform?: Platform) {\n    super(_document, platform);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this._fullScreenEventName && this._fullScreenListener) {\n      this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n    }\n  }\n\n  protected _createContainer(): void {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n\n  private _adjustParentForFullscreenChange(): void {\n    if (!this._containerElement) {\n      return;\n    }\n\n    const fullscreenElement = this.getFullscreenElement();\n    const parent = fullscreenElement || this._document.body;\n    parent.appendChild(this._containerElement);\n  }\n\n  private _addFullscreenChangeListener(fn: () => void) {\n    const eventName = this._getEventName();\n\n    if (eventName) {\n      if (this._fullScreenListener) {\n        this._document.removeEventListener(eventName, this._fullScreenListener);\n      }\n\n      this._document.addEventListener(eventName, fn);\n      this._fullScreenListener = fn;\n    }\n  }\n\n  private _getEventName(): string | undefined {\n    if (!this._fullScreenEventName) {\n      const _document = this._document as any;\n\n      if (_document.fullscreenEnabled) {\n        this._fullScreenEventName = 'fullscreenchange';\n      } else if (_document.webkitFullscreenEnabled) {\n        this._fullScreenEventName = 'webkitfullscreenchange';\n      } else if (_document.mozFullScreenEnabled) {\n        this._fullScreenEventName = 'mozfullscreenchange';\n      } else if (_document.msFullscreenEnabled) {\n        this._fullScreenEventName = 'MSFullscreenChange';\n      }\n    }\n\n    return this._fullScreenEventName;\n  }\n\n  /**\n   * When the page is put into fullscreen mode, a specific element is specified.\n   * Only that element and its children are visible when in fullscreen mode.\n   */\n  getFullscreenElement(): Element {\n    const _document = this._document as any;\n\n    return _document.fullscreenElement ||\n           _document.webkitFullscreenElement ||\n           _document.mozFullScreenElement ||\n           _document.msFullscreenElement ||\n           null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './overlay-config';\nexport * from './position/connected-position';\nexport * from './scroll/index';\nexport * from './overlay-module';\nexport * from './dispatchers/index';\nexport {Overlay} from './overlay';\nexport {OverlayContainer} from './overlay-container';\nexport {CdkOverlayOrigin, CdkConnectedOverlay} from './overlay-directives';\nexport {FullscreenOverlayContainer} from './fullscreen-overlay-container';\nexport {OverlayRef, OverlaySizeConfig} from './overlay-ref';\nexport {ViewportRuler} from '@angular/cdk/scrolling';\nexport {ComponentType} from '@angular/cdk/portal';\nexport {OverlayPositionBuilder} from './position/overlay-position-builder';\n\n// Export pre-defined position strategies and interface to build custom ones.\nexport {PositionStrategy} from './position/position-strategy';\nexport {GlobalPositionStrategy} from './position/global-position-strategy';\nexport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nexport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  FlexibleConnectedPositionStrategyOrigin,\n} from './position/flexible-connected-position-strategy';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseOverlayDispatcher as Éµangular_material_src_cdk_overlay_overlay_h} from './dispatchers/base-overlay-dispatcher';\nexport {OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_b,OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_a} from './dispatchers/overlay-keyboard-dispatcher';\nexport {OVERLAY_CONTAINER_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_d,OVERLAY_CONTAINER_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_c} from './overlay-container';\nexport {CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as Éµangular_material_src_cdk_overlay_overlay_e,CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_g,CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_f} from './overlay-directives';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-list',\n  templateUrl: './table-list.component.html',\n  styleUrls: ['./table-list.component.css']\n})\nexport class TableListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"card card-plain\\\">\\n          <div class=\\\"card-header card-header-danger\\\">\\n              <h4 class=\\\"card-title\\\">Material Design Icons</h4>\\n              <p class=\\\"card-category\\\">Handcrafted by our friends from\\n                  <a target=\\\"_blank\\\" href=\\\"https://design.google.com/icons/\\\">Google</a>\\n              </p>\\n          </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"card-body\\\">\\n                      <div class=\\\"iframe-container d-none d-lg-block\\\">\\n                          <iframe src=\\\"https://design.google.com/icons/\\\">\\n                              <p>Your browser does not support iframes.</p>\\n                          </iframe>\\n                      </div>\\n                      <div class=\\\"col-md-12 d-none d-sm-block d-md-block d-lg-none d-block d-sm-none text-center ml-auto mr-auto\\\">\\n                          <h5>The icons are visible on Desktop mode inside an iframe. Since the iframe is not working on Mobile and Tablets please visit the icons on their original page on Google. Check the\\n                              <a href=\\\"https://design.google.com/icons/\\\" target=\\\"_blank\\\">Material Icons</a>\\n                          </h5>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\n  ids.push(id.trim());\n\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId} from './aria-reference';\nimport {Platform} from '@angular/cdk/platform';\n\n\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n */\nexport interface RegisteredMessage {\n  /** The element containing the message. */\n  messageElement: Element;\n\n  /** The number of elements that reference this message element via `aria-describedby`. */\n  referenceCount: number;\n}\n\n/** ID used for the body container where all messages are appended. */\nexport const MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n\n/** ID prefix used for each created message element. */\nexport const CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n\n/** Attribute given to each host element that is described by a message element. */\nexport const CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map<string|HTMLElement, RegisteredMessage>();\n\n/** Container for all registered messages. */\nlet messagesContainer: HTMLElement | null = null;\n\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\n@Injectable({providedIn: 'root'})\nexport class AriaDescriber implements OnDestroy {\n  private _document: Document;\n\n  constructor(\n    @Inject(DOCUMENT) _document: any,\n    /**\n     * @breaking-change 8.0.0 `_platform` parameter to be made required.\n     */\n    private _platform?: Platform) {\n    this._document = _document;\n  }\n\n  /**\n   * Adds to the host element an aria-describedby reference to a hidden element that contains\n   * the message. If the same message has already been registered, then it will reuse the created\n   * message element.\n   */\n  describe(hostElement: Element, message: string|HTMLElement) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n\n    if (typeof message !== 'string') {\n      // We need to ensure that the element has an ID.\n      this._setMessageId(message);\n      messageRegistry.set(message, {messageElement: message, referenceCount: 0});\n    } else if (!messageRegistry.has(message)) {\n      this._createMessageElement(message);\n    }\n\n    if (!this._isElementDescribedByMessage(hostElement, message)) {\n      this._addMessageReference(hostElement, message);\n    }\n  }\n\n  /** Removes the host element's aria-describedby reference to the message element. */\n  removeDescription(hostElement: Element, message: string|HTMLElement) {\n    if (!message || !this._isElementNode(hostElement)) {\n      return;\n    }\n\n    if (this._isElementDescribedByMessage(hostElement, message)) {\n      this._removeMessageReference(hostElement, message);\n    }\n\n    // If the message is a string, it means that it's one that we created for the\n    // consumer so we can remove it safely, otherwise we should leave it in place.\n    if (typeof message === 'string') {\n      const registeredMessage = messageRegistry.get(message);\n      if (registeredMessage && registeredMessage.referenceCount === 0) {\n        this._deleteMessageElement(message);\n      }\n    }\n\n    if (messagesContainer && messagesContainer.childNodes.length === 0) {\n      this._deleteMessagesContainer();\n    }\n  }\n\n  /** Unregisters all created message elements and removes the message container. */\n  ngOnDestroy() {\n    const describedElements =\n        this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n\n    for (let i = 0; i < describedElements.length; i++) {\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n\n    if (messagesContainer) {\n      this._deleteMessagesContainer();\n    }\n\n    messageRegistry.clear();\n  }\n\n  /**\n   * Creates a new element in the visually hidden message container element with the message\n   * as its content and adds it to the message registry.\n   */\n  private _createMessageElement(message: string) {\n    const messageElement = this._document.createElement('div');\n    this._setMessageId(messageElement);\n    messageElement.textContent = message;\n\n    this._createMessagesContainer();\n    messagesContainer!.appendChild(messageElement);\n\n    messageRegistry.set(message, {messageElement, referenceCount: 0});\n  }\n\n  /** Assigns a unique ID to an element, if it doesn't have one already. */\n  private _setMessageId(element: HTMLElement) {\n    if (!element.id) {\n      element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n  }\n\n  /** Deletes the message element from the global messages container. */\n  private _deleteMessageElement(message: string) {\n    const registeredMessage = messageRegistry.get(message);\n    const messageElement = registeredMessage && registeredMessage.messageElement;\n    if (messagesContainer && messageElement) {\n      messagesContainer.removeChild(messageElement);\n    }\n    messageRegistry.delete(message);\n  }\n\n  /** Creates the global container for all aria-describedby messages. */\n  private _createMessagesContainer() {\n    if (!messagesContainer) {\n      // @breaking-change 8.0.0 `_platform` null check can be removed once the parameter is required\n      const canBeAriaHidden = !this._platform || (!this._platform.EDGE && !this._platform.TRIDENT);\n      const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n\n      // When going from the server to the client, we may end up in a situation where there's\n      // already a container on the page, but we don't have a reference to it. Clear the\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\n      // container, should be slightly faster.\n      if (preExistingContainer && preExistingContainer.parentNode) {\n        preExistingContainer.parentNode.removeChild(preExistingContainer);\n      }\n\n      messagesContainer = this._document.createElement('div');\n      messagesContainer.id = MESSAGES_CONTAINER_ID;\n      messagesContainer.classList.add('cdk-visually-hidden');\n\n      // IE and Edge won't read out the messages if they're in an `aria-hidden` container.\n      // We only disable `aria-hidden` for these platforms, because it comes with the\n      // disadvantage that people might hit the messages when they've navigated past\n      // the end of the document using the arrow keys.\n      messagesContainer.setAttribute('aria-hidden', canBeAriaHidden + '');\n      this._document.body.appendChild(messagesContainer);\n    }\n  }\n\n  /** Deletes the global messages container. */\n  private _deleteMessagesContainer() {\n    if (messagesContainer && messagesContainer.parentNode) {\n      messagesContainer.parentNode.removeChild(messagesContainer);\n      messagesContainer = null;\n    }\n  }\n\n  /** Removes all cdk-describedby messages that are hosted through the element. */\n  private _removeCdkDescribedByReferenceIds(element: Element) {\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n        .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n  }\n\n  /**\n   * Adds a message reference to the element using aria-describedby and increments the registered\n   * message's reference count.\n   */\n  private _addMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n\n    // Add the aria-describedby reference and set the\n    // describedby_host attribute to mark the element.\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n\n    registeredMessage.referenceCount++;\n  }\n\n  /**\n   * Removes a message reference from the element using aria-describedby\n   * and decrements the registered message's reference count.\n   */\n  private _removeMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n    registeredMessage.referenceCount--;\n\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n  }\n\n  /** Returns true if the element has been described by the provided message ID. */\n  private _isElementDescribedByMessage(element: Element, message: string|HTMLElement): boolean {\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n    const registeredMessage = messageRegistry.get(message);\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\n\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\n  }\n\n  /** Determines whether a message can be described on a particular element. */\n  private _canBeDescribed(element: Element, message: string|HTMLElement|void): boolean {\n    if (!this._isElementNode(element)) {\n      return false;\n    }\n\n    if (message && typeof message === 'object') {\n      // We'd have to make some assumptions about the description element's text, if the consumer\n      // passed in an element. Assume that if an element is passed in, the consumer has verified\n      // that it can be used as a description.\n      return true;\n    }\n\n    const trimmedMessage = message == null ? '' : `${message}`.trim();\n    const ariaLabel = element.getAttribute('aria-label');\n\n    // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n    // element, because screen readers will end up reading out the same text twice in a row.\n    return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n  }\n\n  /** Checks whether a node is an Element node. */\n  private _isElementNode(element: Node): element is Element {\n    return element.nodeType === this._document.ELEMENT_NODE;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  TAB,\n  A,\n  Z,\n  ZERO,\n  NINE,\n  hasModifierKey,\n  HOME,\n  END,\n} from '@angular/cdk/keycodes';\nimport {debounceTime, filter, map, tap} from 'rxjs/operators';\n\n/** This interface is for items that can be passed to a ListKeyManager. */\nexport interface ListKeyManagerOption {\n  /** Whether the option is disabled. */\n  disabled?: boolean;\n\n  /** Gets the label for this option. */\n  getLabel?(): string;\n}\n\n/** Modifier keys handled by the ListKeyManager. */\nexport type ListKeyManagerModifierKey = 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends ListKeyManagerOption> {\n  private _activeItemIndex = -1;\n  private _activeItem: T | null = null;\n  private _wrap = false;\n  private _letterKeyStream = new Subject<string>();\n  private _typeaheadSubscription = Subscription.EMPTY;\n  private _vertical = true;\n  private _horizontal: 'ltr' | 'rtl' | null;\n  private _allowedModifierKeys: ListKeyManagerModifierKey[] = [];\n  private _homeAndEnd = false;\n\n  /**\n   * Predicate function that can be used to check whether an item should be skipped\n   * by the key manager. By default, disabled items are skipped.\n   */\n  private _skipPredicateFn = (item: T) => item.disabled;\n\n  // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n  private _pressedLetters: string[] = [];\n\n  constructor(private _items: QueryList<T> | T[]) {\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      _items.changes.subscribe((newItems: QueryList<T>) => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stream that emits any time the TAB key is pressed, so components can react\n   * when focus is shifted off of the list.\n   */\n  tabOut: Subject<void> = new Subject<void>();\n\n  /** Stream that emits whenever the active item of the list manager changes. */\n  change = new Subject<number>();\n\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate: (item: T) => boolean): this {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true): this {\n    this._wrap = shouldWrap;\n    return this;\n  }\n\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled: boolean = true): this {\n    this._vertical = enabled;\n    return this;\n  }\n\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n    this._horizontal = direction;\n    return this;\n  }\n\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys: ListKeyManagerModifierKey[]): this {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval: number = 200): this {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && (this._items.length &&\n        this._items.some(item => typeof item.getLabel !== 'function'))) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n\n    this._typeaheadSubscription.unsubscribe();\n\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(\n      tap(letter => this._pressedLetters.push(letter)),\n      debounceTime(debounceInterval),\n      filter(() => this._pressedLetters.length > 0),\n      map(() => this._pressedLetters.join(''))\n    ).subscribe(inputString => {\n      const items = this._getItemsArray();\n\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n\n        if (!this._skipPredicateFn(item) &&\n            item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\n\n          this.setActiveItem(index);\n          break;\n        }\n      }\n\n      this._pressedLetters = [];\n    });\n\n    return this;\n  }\n\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled: boolean = true): this {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the index specified.\n   * @param index The index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the specified item.\n   * @param item The item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    const previousActiveItem = this._activeItem;\n\n    this.updateActiveItem(item);\n\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const modifiers: ListKeyManagerModifierKey[] = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      default:\n      if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n\n  /** Index of the currently active item. */\n  get activeItemIndex(): number | null {\n    return this._activeItemIndex;\n  }\n\n  /** The active item. */\n  get activeItem(): T | null {\n    return this._activeItem;\n  }\n\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping(): boolean {\n    return this._pressedLetters.length > 0;\n  }\n\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive(): void {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive(): void {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                                            : this._setActiveItemByDelta(-1);\n  }\n\n  /**\n   * Allows setting the active without any other effects.\n   * @param index Index of the item to be set as active.\n   */\n  updateActiveItem(index: number): void;\n\n  /**\n   * Allows setting the active item without any other effects.\n   * @param item Item to be set as active.\n   */\n  updateActiveItem(item: T): void;\n\n  updateActiveItem(item: any): void {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  private _setActiveItemByDelta(delta: -1 | 1): void {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  private _setActiveInWrapMode(delta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n      const item = items[index];\n\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  private _setActiveInDefaultMode(delta: -1 | 1): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  private _setActiveItemByIndex(index: number, fallbackDelta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    if (!items[index]) {\n      return;\n    }\n\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n\n      if (!items[index]) {\n        return;\n      }\n    }\n\n    this.setActiveItem(index);\n  }\n\n  /** Returns the items as an array. */\n  private _getItemsArray(): T[] {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends ListKeyManagerOption {\n  /** Applies the styles for an active item to this item. */\n  setActiveStyles(): void;\n\n  /** Applies the styles for an inactive item to this item. */\n  setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\n\n  /**\n   * Sets the active item to the item at the specified index and adds the\n   * active styles to the newly active item. Also removes active styles\n   * from the previously active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item to the specified one and adds the\n   * active styles to the it. Also removes active styles from the\n   * previously active item.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(index: any): void {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n */\nexport interface FocusableOption extends ListKeyManagerOption {\n  /** Focuses the `FocusableOption`. */\n  focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<FocusableOption & T> {\n  private _origin: FocusOrigin = 'program';\n\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin: FocusOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the specified\n   * index and focuses the newly active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item that is specified and focuses it.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    super.setActiveItem(item);\n\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable} from '@angular/core';\n\n/**\n * Configuration for the isFocusable method.\n */\nexport class IsFocusableConfig {\n  /**\n   * Whether to count an element as focusable even if it is not currently visible.\n   */\n  ignoreVisibility: boolean = false;\n}\n\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\n@Injectable({providedIn: 'root'})\nexport class InteractivityChecker {\n\n  constructor(private _platform: Platform) {}\n\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the server ð\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    const frameElement = getFrameElement(getWindow(element));\n\n    if (frameElement) {\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Browsers disable tabbing to an element inside of an invisible frame.\n      if (!this.isVisible(frameElement)) {\n        return false;\n      }\n    }\n\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe' || nodeName === 'object') {\n      // The frame or object's content may be tabbable depending on the content, but it's\n      // not possibly to reliably detect the content of the frames. We always consider such\n      // elements as non-tabbable.\n      return false;\n    }\n\n    // In iOS, the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      // Audio elements without controls enabled are never tabbable, regardless\n      // of the tabindex attribute explicitly being set.\n      if (!element.hasAttribute('controls')) {\n        return false;\n      }\n      // Audio elements with controls are by default tabbable unless the\n      // tabindex attribute is set to `-1` explicitly.\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'video') {\n      // For all video elements, if the tabindex attribute is set to `-1`, the video\n      // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n      // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n      // tabindex attribute is the source of truth here.\n      if (tabIndexValue === -1) {\n        return false;\n      }\n      // If the tabindex is explicitly set, and not `-1` (as per check before), the\n      // video element is always tabbable (regardless of whether it has controls or not).\n      if (tabIndexValue !== null) {\n        return true;\n      }\n      // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n      // has controls enabled. Firefox is special as videos are always tabbable regardless\n      // of whether there are controls or not.\n      return this._platform.FIREFOX || element.hasAttribute('controls');\n    }\n\n    return element.tabIndex >= 0;\n  }\n\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @param config The config object with options to customize this method's behavior\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element: HTMLElement, config?: IsFocusableConfig): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\n      (config?.ignoreVisibility || this.isVisible(element));\n  }\n\n}\n\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window: Window) {\n  try {\n    return window.frameElement as HTMLElement;\n  } catch {\n    return null;\n  }\n}\n\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight ||\n      (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n\n/** Gets whether an element's  */\nfunction isNativeFormElement(element: Node) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n\n/** Gets whether an element is an input element. */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element: HTMLElement): number | null {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node: HTMLElement): Window {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\n\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nexport class FocusTrap {\n  private _startAnchor: HTMLElement | null;\n  private _endAnchor: HTMLElement | null;\n  private _hasAttached = false;\n\n  // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n  protected startAnchorListener = () => this.focusLastTabbableElement();\n  protected endAnchorListener = () => this.focusFirstTabbableElement();\n\n  /** Whether the focus trap is active. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  protected _enabled: boolean = true;\n\n  constructor(\n    readonly _element: HTMLElement,\n    private _checker: InteractivityChecker,\n    readonly _ngZone: NgZone,\n    readonly _document: Document,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n\n      if (startAnchor.parentNode) {\n        startAnchor.parentNode.removeChild(startAnchor);\n      }\n    }\n\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n\n      if (endAnchor.parentNode) {\n        endAnchor.parentNode.removeChild(endAnchor);\n      }\n    }\n\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors(): boolean {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor!.addEventListener('focus', this.startAnchorListener);\n      }\n\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor!.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n\n    return this._hasAttached;\n  }\n\n  /**\n   * Waits for the zone to stabilize, then either focuses the first element that the\n   * user specified, or the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusInitialElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n    });\n  }\n\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdkFocusRegion${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\n\n    for (let i = 0; i < markers.length; i++) {\n      // @breaking-change 8.0.0\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                     `attribute will be removed in 8.0.0.`, markers[i]);\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                     `will be removed in 8.0.0.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusInitialElement(): boolean {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n                                                          `[cdkFocusInitial]`) as HTMLElement;\n\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n      }\n\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n        !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n\n      redirectToElement.focus();\n      return true;\n    }\n\n    return this.focusFirstTabbableElement();\n  }\n\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusFirstTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('start');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusLastTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('end');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Checks whether the focus trap has successfuly been attached.\n   */\n  hasAttached(): boolean {\n    return this._hasAttached;\n  }\n\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let children = root.children || root.childNodes;\n\n    for (let i = 0; i < children.length; i++) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let children = root.children || root.childNodes;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getLastTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Creates an anchor element. */\n  private _createAnchor(): HTMLElement {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  private _toggleAnchorTabIndex(isEnabled: boolean, anchor: HTMLElement) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  protected toggleAnchors(enabled: boolean) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n\n  /** Executes a function when the zone is stable. */\n  private _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n   *     manually by the user.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\n    return new FocusTrap(\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\n  }\n}\n\n/** Directive for trapping focus within a region. */\n@Directive({\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n})\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, OnChanges, DoCheck {\n  private _document: Document;\n\n  /** Underlying FocusTrap instance. */\n  focusTrap: FocusTrap;\n\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n  private _previouslyFocusedElement: HTMLElement | null = null;\n\n  /** Whether the focus trap is active. */\n  @Input('cdkTrapFocus')\n  get enabled(): boolean { return this.focusTrap.enabled; }\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n\n  /**\n   * Whether the directive should automatially move focus into the trapped region upon\n   * initialization and return focus to the previous activeElement upon destruction.\n   */\n  @Input('cdkTrapFocusAutoCapture')\n  get autoCapture(): boolean { return this._autoCapture; }\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\n  private _autoCapture: boolean;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _focusTrapFactory: FocusTrapFactory,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n\n    // If we stored a previously focused element when using autoCapture, return focus to that\n    // element now that the trapped region is being destroyed.\n    if (this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n      this._previouslyFocusedElement = null;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n\n    if (this.autoCapture) {\n      this._captureFocus();\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.focusTrap.hasAttached()) {\n      this.focusTrap.attachAnchors();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const autoCaptureChange = changes['autoCapture'];\n\n    if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\n        this.focusTrap.hasAttached()) {\n      this._captureFocus();\n    }\n  }\n\n  private _captureFocus() {\n    this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n    this.focusTrap.focusInitialElementWhenReady();\n  }\n\n  static ngAcceptInputType_enabled: BooleanInput;\n  static ngAcceptInputType_autoCapture: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\nimport {FocusTrap} from './focus-trap';\nimport {FocusTrapManager, ManagedFocusTrap} from './focus-trap-manager';\nimport {FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {ConfigurableFocusTrapConfig} from './configurable-focus-trap-config';\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nexport class ConfigurableFocusTrap extends FocusTrap implements ManagedFocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n\n  constructor(\n    _element: HTMLElement,\n    _checker: InteractivityChecker,\n    _ngZone: NgZone,\n    _document: Document,\n    private _focusTrapManager: FocusTrapManager,\n    private _inertStrategy: FocusTrapInertStrategy,\n    config: ConfigurableFocusTrapConfig) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager.register(this);\n  }\n\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nexport function closest(element: EventTarget|Element|null|undefined, selector: string):\n    Element|null {\n  if (!(element instanceof Node)) { return null; }\n\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element)) {\n    curr = curr.parentNode;\n  }\n\n  return curr && (hasNativeClosest ?\n      curr.closest(selector) : polyfillClosest(curr, selector)) as Element|null;\n}\n\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element: Element, selector: string): Element|null {\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n    curr = curr.parentNode;\n  }\n\n  return (curr || null) as Element|null;\n}\n\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n\n/** IE 11 compatible matches implementation. */\nfunction matches(element: Element, selector: string): boolean {\n  return element.matches ?\n      element.matches(selector) :\n      (element as any)['msMatchesSelector'](selector);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {ConfigurableFocusTrap} from './configurable-focus-trap';\nimport {closest} from './polyfill';\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nexport class EventListenerFocusTrapInertStrategy implements FocusTrapInertStrategy {\n  /** Focus event handler. */\n  private _listener: ((e: FocusEvent) => void) | null = null;\n\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap: ConfigurableFocusTrap): void {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener!, true);\n    }\n\n    this._listener = (e: FocusEvent) => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener!, true);\n    });\n  }\n\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap: ConfigurableFocusTrap): void {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener!, true);\n    this._listener = null;\n  }\n\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  private _trapFocus(focusTrap: ConfigurableFocusTrap, event: FocusEvent) {\n    const target = event.target as HTMLElement;\n    const focusTrapRoot = focusTrap._element;\n\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n        // Some legacy FocusTrap usages have logic that focuses some element on the page\n        // just before FocusTrap is destroyed. For backwards compatibility, wait\n        // to be sure FocusTrap is still enabled before refocusing.\n        setTimeout(() => {\n          // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n          if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n            focusTrap.focusFirstTabbableElement();\n          }\n        });\n      }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nexport class ConfigurableFocusTrapConfig {\n  /**\n   * Whether to defer the creation of FocusTrap elements to be\n   * done manually by the user. Default is to create them\n   * automatically.\n   */\n  defer: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,\n} from '@angular/core';\nimport {FocusTrap} from './focus-trap';\n\n/** The injection token used to specify the inert strategy. */\nexport const FOCUS_TRAP_INERT_STRATEGY =\n  new InjectionToken<FocusTrapInertStrategy>('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n */\nexport interface FocusTrapInertStrategy {\n  /** Makes all elements outside focusTrap unfocusable. */\n  preventFocus(focusTrap: FocusTrap): void;\n  /** Reverts elements made unfocusable by preventFocus to their previous state. */\n  allowFocus(focusTrap: FocusTrap): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n */\nexport interface ManagedFocusTrap {\n  _enable(): void;\n  _disable(): void;\n  focusInitialElementWhenReady(): Promise<boolean>;\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapManager {\n  // A stack of the FocusTraps on the page. Only the FocusTrap at the\n  // top of the stack is active.\n  private _focusTrapStack: ManagedFocusTrap[] = [];\n\n  /**\n   * Disables the FocusTrap at the top of the stack, and then pushes\n   * the new FocusTrap onto the stack.\n   */\n  register(focusTrap: ManagedFocusTrap): void {\n    // Dedupe focusTraps that register multiple times.\n    this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n\n    let stack = this._focusTrapStack;\n\n    if (stack.length) {\n      stack[stack.length - 1]._disable();\n    }\n\n    stack.push(focusTrap);\n    focusTrap._enable();\n  }\n\n  /**\n   * Removes the FocusTrap from the stack, and activates the\n   * FocusTrap that is the new top of the stack.\n   */\n  deregister(focusTrap: ManagedFocusTrap): void {\n    focusTrap._disable();\n\n    const stack = this._focusTrapStack;\n\n    const i = stack.indexOf(focusTrap);\n    if (i !== -1) {\n      stack.splice(i, 1);\n      if (stack.length) {\n        stack[stack.length - 1]._enable();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  Optional,\n  NgZone,\n} from '@angular/core';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\nimport {ConfigurableFocusTrap} from './configurable-focus-trap';\nimport {ConfigurableFocusTrapConfig} from './configurable-focus-trap-config';\nimport {FOCUS_TRAP_INERT_STRATEGY, FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {EventListenerFocusTrapInertStrategy} from './event-listener-inert-strategy';\nimport {FocusTrapManager} from './focus-trap-manager';\n\n/** Factory that allows easy instantiation of configurable focus traps. */\n@Injectable({providedIn: 'root'})\nexport class ConfigurableFocusTrapFactory {\n  private _document: Document;\n  private _inertStrategy: FocusTrapInertStrategy;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      private _focusTrapManager: FocusTrapManager,\n      @Inject(DOCUMENT) _document: any,\n      @Optional() @Inject(FOCUS_TRAP_INERT_STRATEGY) _inertStrategy?: FocusTrapInertStrategy) {\n\n    this._document = _document;\n    // TODO split up the strategies into different modules, similar to DateAdapter.\n    this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param config The focus trap configuration.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, config?: ConfigurableFocusTrapConfig): ConfigurableFocusTrap;\n\n  /**\n   * @deprecated Pass a config object instead of the `deferCaptureElements` flag.\n   * @breaking-change 11.0.0\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean): ConfigurableFocusTrap;\n\n  create(element: HTMLElement, config: ConfigurableFocusTrapConfig | boolean =\n    new ConfigurableFocusTrapConfig()): ConfigurableFocusTrap {\n    let configObject: ConfigurableFocusTrapConfig;\n    if (typeof config === 'boolean') {\n      configObject = new ConfigurableFocusTrapConfig();\n      configObject.defer = config;\n    } else {\n      configObject = config;\n    }\n    return new ConfigurableFocusTrap(\n        element, this._checker, this._ngZone, this._document, this._focusTrapManager,\n        this._inertStrategy, configObject);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n// The tokens for the live announcer are defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\n\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN =\n    new InjectionToken<HTMLElement | null>('liveAnnouncerElement', {\n      providedIn: 'root',\n      factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n    });\n\n/** @docs-private */\nexport function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY(): null {\n  return null;\n}\n\n/** Object that can be used to configure the default options for the LiveAnnouncer. */\nexport interface LiveAnnouncerDefaultOptions {\n  /** Default politeness for the announcements. */\n  politeness?: AriaLivePoliteness;\n\n  /** Default duration for the announcement messages. */\n  duration?: number;\n}\n\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nexport const LIVE_ANNOUNCER_DEFAULT_OPTIONS =\n    new InjectionToken<LiveAnnouncerDefaultOptions>('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ContentObserver} from '@angular/cdk/observers';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {\n  AriaLivePoliteness,\n  LiveAnnouncerDefaultOptions,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_DEFAULT_OPTIONS,\n} from './live-announcer-tokens';\n\n\n@Injectable({providedIn: 'root'})\nexport class LiveAnnouncer implements OnDestroy {\n  private _liveElement: HTMLElement;\n  private _document: Document;\n  private _previousTimeout?: number;\n\n  constructor(\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any,\n      @Optional() @Inject(LIVE_ANNOUNCER_DEFAULT_OPTIONS)\n      private _defaultOptions?: LiveAnnouncerDefaultOptions) {\n\n    // We inject the live element and document as `any` because the constructor signature cannot\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n    // a class decorator causes TypeScript to preserve the constructor signature types.\n    this._document = _document;\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, duration?: number): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness, duration?: number): Promise<void>;\n\n  announce(message: string, ...args: any[]): Promise<void> {\n    const defaultOptions = this._defaultOptions;\n    let politeness: AriaLivePoliteness | undefined;\n    let duration: number | undefined;\n\n    if (args.length === 1 && typeof args[0] === 'number') {\n      duration = args[0];\n    } else {\n      [politeness, duration] = args;\n    }\n\n    this.clear();\n    clearTimeout(this._previousTimeout);\n\n    if (!politeness) {\n      politeness =\n          (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n    }\n\n    if (duration == null && defaultOptions) {\n      duration = defaultOptions.duration;\n    }\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          resolve();\n\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n        }, 100);\n      });\n    });\n  }\n\n  /**\n   * Clears the current text from the announcer element. Can be used to prevent\n   * screen readers from reading the text out again while the user is going\n   * through the page landmarks.\n   */\n  clear() {\n    if (this._liveElement) {\n      this._liveElement.textContent = '';\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this._previousTimeout);\n\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n      this._liveElement = null!;\n    }\n  }\n\n  private _createLiveElement(): HTMLElement {\n    const elementClass = 'cdk-live-announcer-element';\n    const previousElements = this._document.getElementsByClassName(elementClass);\n    const liveEl = this._document.createElement('div');\n\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n    for (let i = 0; i < previousElements.length; i++) {\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\n    }\n\n    liveEl.classList.add(elementClass);\n    liveEl.classList.add('cdk-visually-hidden');\n\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    this._document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\n}\n\n\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\n@Directive({\n  selector: '[cdkAriaLive]',\n  exportAs: 'cdkAriaLive',\n})\nexport class CdkAriaLive implements OnDestroy {\n  /** The aria-live politeness level to use when announcing messages. */\n  @Input('cdkAriaLive')\n  get politeness(): AriaLivePoliteness { return this._politeness; }\n  set politeness(value: AriaLivePoliteness) {\n    this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n    if (this._politeness === 'off') {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n        this._subscription = null;\n      }\n    } else if (!this._subscription) {\n      this._subscription = this._ngZone.runOutsideAngular(() => {\n        return this._contentObserver\n          .observe(this._elementRef)\n          .subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n      });\n    }\n  }\n  private _politeness: AriaLivePoliteness = 'polite';\n\n  private _previousAnnouncedText?: string;\n  private _subscription: Subscription | null;\n\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform, normalizePassiveListenerOptions, _getShadowRoot} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injectable,\n  InjectionToken,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {isFakeMousedownFromScreenReader} from '../fake-mousedown';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n */\nexport interface FocusOptions {\n  /** Whether the browser should scroll to the element when it is focused. */\n  preventScroll?: boolean;\n}\n\n/** Detection mode used for attributing the origin of a focus event. */\nexport const enum FocusMonitorDetectionMode {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  IMMEDIATE,\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occured.\n   */\n  EVENTUAL\n}\n\n/** Injectable service-level options for FocusMonitor. */\nexport interface FocusMonitorOptions {\n  detectionMode?: FocusMonitorDetectionMode;\n}\n\n/** InjectionToken for FocusMonitorOptions. */\nexport const FOCUS_MONITOR_DEFAULT_OPTIONS =\n    new InjectionToken<FocusMonitorOptions>('cdk-focus-monitor-default-options');\n\ntype MonitoredElementInfo = {\n  checkChildren: boolean,\n  subject: Subject<FocusOrigin>,\n  rootNode: HTMLElement|Document\n};\n\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable({providedIn: 'root'})\nexport class FocusMonitor implements OnDestroy {\n  /** The focus origin that the next focus event is a result of. */\n  private _origin: FocusOrigin = null;\n\n  /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n  private _lastFocusOrigin: FocusOrigin;\n\n  /** Whether the window has just been focused. */\n  private _windowFocused = false;\n\n  /** The target of the last touch event. */\n  private _lastTouchTarget: EventTarget | null;\n\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\n  private _touchTimeoutId: number;\n\n  /** The timeout id of the window focus timeout. */\n  private _windowFocusTimeoutId: number;\n\n  /** The timeout id of the origin clearing timeout. */\n  private _originTimeoutId: number;\n\n  /** Map of elements being monitored to their info. */\n  private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\n\n  /** The number of elements currently being monitored. */\n  private _monitoredElementCount = 0;\n\n  /**\n   * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n   * as well as the number of monitored elements that they contain. We have to treat focus/blur\n   * handlers differently from the rest of the events, because the browser won't emit events\n   * to the document when focus moves inside of a shadow root.\n   */\n  private _rootNodeFocusListenerCount = new Map<HTMLElement|Document, number>();\n\n  /**\n   * The specified detection mode, used for attributing the origin of a focus\n   * event.\n   */\n  private readonly _detectionMode: FocusMonitorDetectionMode;\n\n  /**\n   * Event listener for `keydown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentKeydownListener = () => {\n    // On keydown record the origin and clear any touch event that may be in progress.\n    this._lastTouchTarget = null;\n    this._setOriginForCurrentEventQueue('keyboard');\n  }\n\n  /**\n   * Event listener for `mousedown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentMousedownListener = (event: MouseEvent) => {\n    // On mousedown record the origin only if there is not touch\n    // target, since a mousedown can happen as a result of a touch event.\n    if (!this._lastTouchTarget) {\n      // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n      // Resolve the focus source to `keyboard` if we detect one of them.\n      const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n      this._setOriginForCurrentEventQueue(source);\n    }\n  }\n\n  /**\n   * Event listener for `touchstart` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentTouchstartListener = (event: TouchEvent) => {\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n    // see if a focus happens.\n    if (this._touchTimeoutId != null) {\n      clearTimeout(this._touchTimeoutId);\n    }\n\n    this._lastTouchTarget = getTarget(event);\n    this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n  }\n\n  /**\n   * Event listener for `focus` events on the window.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _windowFocusListener = () => {\n    // Make a note of when the window regains focus, so we can\n    // restore the origin info for the focused element.\n    this._windowFocused = true;\n    this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n  }\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(\n      private _ngZone: NgZone,\n      private _platform: Platform,\n      /** @breaking-change 11.0.0 make document required */\n      @Optional() @Inject(DOCUMENT) document: any|null,\n      @Optional() @Inject(FOCUS_MONITOR_DEFAULT_OPTIONS) options:\n          FocusMonitorOptions|null) {\n    this._document = document;\n    this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n  }\n  /**\n   * Event listener for `focus` and 'blur' events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _rootNodeFocusAndBlurListener = (event: Event) => {\n    const target = getTarget(event);\n    const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n\n    // We need to walk up the ancestor chain in order to support `checkChildren`.\n    for (let element = target; element; element = element.parentElement) {\n      handler.call(this, event as FocusEvent, element);\n    }\n  }\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: HTMLElement, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: ElementRef<HTMLElement>, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  monitor(element: HTMLElement | ElementRef<HTMLElement>,\n          checkChildren: boolean = false): Observable<FocusOrigin> {\n    const nativeElement = coerceElement(element);\n\n    // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n    if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n      return observableOf(null);\n    }\n\n    // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n    // the shadow root, rather than the `document`, because the browser won't emit focus events\n    // to the `document`, if focus is moving within the same shadow root.\n    const rootNode = (_getShadowRoot(nativeElement) as HTMLElement|null) || this._getDocument();\n    const cachedInfo = this._elementInfo.get(nativeElement);\n\n    // Check if we're already monitoring this element.\n    if (cachedInfo) {\n      if (checkChildren) {\n        // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n        // observers into ones that behave as if `checkChildren` was turned on. We need a more\n        // robust solution.\n        cachedInfo.checkChildren = true;\n      }\n\n      return cachedInfo.subject;\n    }\n\n    // Create monitored element info.\n    const info: MonitoredElementInfo = {\n      checkChildren: checkChildren,\n      subject: new Subject<FocusOrigin>(),\n      rootNode\n    };\n    this._elementInfo.set(nativeElement, info);\n    this._registerGlobalListeners(info);\n\n    return info.subject;\n  }\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: HTMLElement): void;\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: ElementRef<HTMLElement>): void;\n\n  stopMonitoring(element: HTMLElement | ElementRef<HTMLElement>): void {\n    const nativeElement = coerceElement(element);\n    const elementInfo = this._elementInfo.get(nativeElement);\n\n    if (elementInfo) {\n      elementInfo.subject.complete();\n\n      this._setClasses(nativeElement);\n      this._elementInfo.delete(nativeElement);\n      this._removeGlobalListeners(elementInfo);\n    }\n  }\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: HTMLElement, origin: FocusOrigin, options?: FocusOptions): void;\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: ElementRef<HTMLElement>, origin: FocusOrigin, options?: FocusOptions): void;\n\n  focusVia(element: HTMLElement | ElementRef<HTMLElement>,\n          origin: FocusOrigin,\n          options?: FocusOptions): void {\n\n    const nativeElement = coerceElement(element);\n\n    this._setOriginForCurrentEventQueue(origin);\n\n    // `focus` isn't available on the server\n    if (typeof nativeElement.focus === 'function') {\n      // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n      (nativeElement as any).focus(options);\n    }\n  }\n\n  ngOnDestroy() {\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n  }\n\n  /** Access injected document if available or fallback to global document reference */\n  private _getDocument(): Document {\n    return this._document || document;\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n\n  private _toggleClass(element: Element, className: string, shouldSet: boolean) {\n    if (shouldSet) {\n      element.classList.add(className);\n    } else {\n      element.classList.remove(className);\n    }\n  }\n\n  private _getFocusOrigin(event: FocusEvent): FocusOrigin {\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (this._origin) {\n      return this._origin;\n    }\n\n    if (this._windowFocused && this._lastFocusOrigin) {\n      return this._lastFocusOrigin;\n    } else if (this._wasCausedByTouch(event)) {\n      return 'touch';\n    } else {\n      return 'program';\n    }\n  }\n\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    this._toggleClass(element, 'cdk-focused', !!origin);\n    this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n    this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n    this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n    this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n  }\n\n  /**\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\n   * If the detection mode is 'eventual', the origin is never cleared.\n   * @param origin The origin to set.\n   */\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._ngZone.runOutsideAngular(() => {\n      this._origin = origin;\n\n      if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n        // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n        // tick after the interaction event fired. To ensure the focus origin is always correct,\n        // the focus origin will be determined at the beginning of the next tick.\n        this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n      }\n    });\n  }\n\n  /**\n   * Checks whether the given focus event was caused by a touchstart event.\n   * @param event The focus event to check.\n   * @returns Whether the event was caused by a touch.\n   */\n  private _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, 'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    const focusTarget = getTarget(event);\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n      return;\n    }\n\n    const origin = this._getFocusOrigin(event);\n    this._setClasses(element, origin);\n    this._emitOrigin(elementInfo.subject, origin);\n    this._lastFocusOrigin = origin;\n  }\n\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    this._emitOrigin(elementInfo.subject, null);\n  }\n\n  private _emitOrigin(subject: Subject<FocusOrigin>, origin: FocusOrigin) {\n    this._ngZone.run(() => subject.next(origin));\n  }\n\n  private _registerGlobalListeners(elementInfo: MonitoredElementInfo) {\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    const rootNode = elementInfo.rootNode;\n    const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n\n    if (!rootNodeFocusListeners) {\n      this._ngZone.runOutsideAngular(() => {\n        rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n      });\n    }\n\n    this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n\n    // Register global listeners when first element is monitored.\n    if (++this._monitoredElementCount === 1) {\n      // Note: we listen to events in the capture phase so we\n      // can detect them even if the user stops propagation.\n      this._ngZone.runOutsideAngular(() => {\n        const document = this._getDocument();\n        const window = this._getWindow();\n\n        document.addEventListener('keydown', this._documentKeydownListener,\n          captureEventListenerOptions);\n        document.addEventListener('mousedown', this._documentMousedownListener,\n          captureEventListenerOptions);\n        document.addEventListener('touchstart', this._documentTouchstartListener,\n          captureEventListenerOptions);\n        window.addEventListener('focus', this._windowFocusListener);\n      });\n    }\n  }\n\n  private _removeGlobalListeners(elementInfo: MonitoredElementInfo) {\n    const rootNode = elementInfo.rootNode;\n\n    if (this._rootNodeFocusListenerCount.has(rootNode)) {\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode)!;\n\n      if (rootNodeFocusListeners > 1) {\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n      } else {\n        rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        this._rootNodeFocusListenerCount.delete(rootNode);\n      }\n    }\n\n    // Unregister global listeners when last element is unmonitored.\n    if (!--this._monitoredElementCount) {\n      const document = this._getDocument();\n      const window = this._getWindow();\n\n      document.removeEventListener('keydown', this._documentKeydownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('mousedown', this._documentMousedownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('touchstart', this._documentTouchstartListener,\n        captureEventListenerOptions);\n      window.removeEventListener('focus', this._windowFocusListener);\n\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n      clearTimeout(this._windowFocusTimeoutId);\n      clearTimeout(this._touchTimeoutId);\n      clearTimeout(this._originTimeoutId);\n    }\n  }\n}\n\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event: Event): HTMLElement|null {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return (event.composedPath ? event.composedPath()[0] : event.target) as HTMLElement | null;\n}\n\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements AfterViewInit, OnDestroy {\n  private _monitorSubscription: Subscription;\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _focusMonitor: FocusMonitor) {}\n\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n    this._monitorSubscription = this._focusMonitor.monitor(\n      element,\n      element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n    .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n\n    if (this._monitorSubscription) {\n      this._monitorSubscription.unsubscribe();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\n\n/** Set of possible high-contrast mode backgrounds. */\nexport const enum HighContrastMode {\n  NONE,\n  BLACK_ON_WHITE,\n  WHITE_ON_BLACK,\n}\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nexport const BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nexport const WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n\n/** CSS class applied to the document body when in high-contrast mode. */\nexport const HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\n@Injectable({providedIn: 'root'})\nexport class HighContrastModeDetector {\n  private _document: Document;\n\n  constructor(private _platform: Platform, @Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /** Gets the current high-contrast-mode for the page. */\n  getHighContrastMode(): HighContrastMode {\n    if (!this._platform.isBrowser) {\n      return HighContrastMode.NONE;\n    }\n\n    // Create a test element with an arbitrary background-color that is neither black nor\n    // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n    // appending the test element to the DOM does not affect layout by absolutely positioning it\n    const testElement = this._document.createElement('div');\n    testElement.style.backgroundColor = 'rgb(1,2,3)';\n    testElement.style.position = 'absolute';\n    this._document.body.appendChild(testElement);\n\n    // Get the computed style for the background color, collapsing spaces to normalize between\n    // browsers. Once we get this color, we no longer need the test element. Access the `window`\n    // via the document so we can fake it in tests. Note that we have extra null checks, because\n    // this logic will likely run during app bootstrap and throwing can break the entire app.\n    const documentWindow = this._document.defaultView || window;\n    const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n        documentWindow.getComputedStyle(testElement) : null;\n    const computedColor =\n        (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n    this._document.body.removeChild(testElement);\n\n    switch (computedColor) {\n      case 'rgb(0,0,0)': return HighContrastMode.WHITE_ON_BLACK;\n      case 'rgb(255,255,255)': return HighContrastMode.BLACK_ON_WHITE;\n    }\n    return HighContrastMode.NONE;\n  }\n\n  /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n  _applyBodyHighContrastModeCssClasses(): void {\n    if (this._platform.isBrowser && this._document.body) {\n      const bodyClasses = this._document.body.classList;\n      // IE11 doesn't support `classList` operations with multiple arguments\n      bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n      bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n      bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n\n      const mode = this.getHighContrastMode();\n      if (mode === HighContrastMode.BLACK_ON_WHITE) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n        bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n      } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n        bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus} from './focus-monitor/focus-monitor';\nimport {CdkTrapFocus} from './focus-trap/focus-trap';\nimport {HighContrastModeDetector} from './high-contrast-mode/high-contrast-mode-detector';\nimport {CdkAriaLive} from './live-announcer/live-announcer';\n\n\n@NgModule({\n  imports: [PlatformModule, ObserversModule],\n  declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n  exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n})\nexport class A11yModule {\n  constructor(highContrastModeDetector: HighContrastModeDetector) {\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './aria-describer/aria-describer';\nexport * from './key-manager/activedescendant-key-manager';\nexport * from './key-manager/focus-key-manager';\nexport * from './key-manager/list-key-manager';\nexport * from './focus-trap/configurable-focus-trap';\nexport * from './focus-trap/event-listener-inert-strategy';\nexport * from './focus-trap/focus-trap';\nexport * from './focus-trap/configurable-focus-trap-factory';\nexport * from './focus-trap/focus-trap-inert-strategy';\nexport * from './interactivity-checker/interactivity-checker';\nexport * from './live-announcer/live-announcer';\nexport * from './live-announcer/live-announcer-tokens';\nexport * from './focus-monitor/focus-monitor';\nexport * from './fake-mousedown';\nexport * from './a11y-module';\nexport {\n  HighContrastModeDetector,\n  HighContrastMode,\n} from './high-contrast-mode/high-contrast-mode-detector';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ConfigurableFocusTrapConfig as Éµangular_material_src_cdk_a11y_a11y_b} from './focus-trap/configurable-focus-trap-config';\nexport {FocusTrapManager as Éµangular_material_src_cdk_a11y_a11y_a} from './focus-trap/focus-trap-manager';","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.component.html',\n  styleUrls: ['./typography.component.css']\n})\nexport class TypographyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\ndeclare const google: any;\n\ninterface Marker {\nlat: number;\nlng: number;\nlabel?: string;\ndraggable?: boolean;\n}\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.component.html',\n  styleUrls: ['./maps.component.css']\n})\nexport class MapsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n    var myLatlng = new google.maps.LatLng(40.748817, -73.985428);\n    var mapOptions = {\n        zoom: 13,\n        center: myLatlng,\n        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [{\n            \"featureType\": \"water\",\n            \"stylers\": [{\n                \"saturation\": 43\n            }, {\n                \"lightness\": -11\n            }, {\n                \"hue\": \"#0088ff\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"hue\": \"#ff0000\"\n            }, {\n                \"saturation\": -100\n            }, {\n                \"lightness\": 99\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.stroke\",\n            \"stylers\": [{\n                \"color\": \"#808080\"\n            }, {\n                \"lightness\": 54\n            }]\n        }, {\n            \"featureType\": \"landscape.man_made\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ece2d9\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ccdca1\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n                \"color\": \"#767676\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{\n                \"color\": \"#ffffff\"\n            }]\n        }, {\n            \"featureType\": \"poi\",\n            \"stylers\": [{\n                \"visibility\": \"off\"\n            }]\n        }, {\n            \"featureType\": \"landscape.natural\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }, {\n                \"color\": \"#b8cb93\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.sports_complex\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.medical\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.business\",\n            \"stylers\": [{\n                \"visibility\": \"simplified\"\n            }]\n        }]\n\n    };\n    var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n\n    var marker = new google.maps.Marker({\n        position: myLatlng,\n        title: \"Hello World!\"\n    });\n\n    // To add the marker to the map, call setMap();\n    marker.setMap(map);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The injection token used to specify the virtual scrolling strategy. */\nexport const VIRTUAL_SCROLL_STRATEGY =\n    new InjectionToken<VirtualScrollStrategy>('VIRTUAL_SCROLL_STRATEGY');\n\n\n/** A strategy that dictates which items should be rendered in the viewport. */\nexport interface VirtualScrollStrategy {\n  /** Emits when the index of the first element visible in the viewport changes. */\n  scrolledIndexChange: Observable<number>;\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport): void;\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach(): void;\n\n  /** Called when the viewport is scrolled (debounced using requestAnimationFrame). */\n  onContentScrolled(): void;\n\n  /** Called when the length of the data changes. */\n  onDataLengthChanged(): void;\n\n  /** Called when the range of items rendered in the DOM has changed. */\n  onContentRendered(): void;\n\n  /** Called when the offset of the rendered items changed. */\n  onRenderedOffsetChanged(): void;\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {Directive, forwardRef, Input, OnChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\nimport {VIRTUAL_SCROLL_STRATEGY, VirtualScrollStrategy} from './virtual-scroll-strategy';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nexport class FixedSizeVirtualScrollStrategy implements VirtualScrollStrategy {\n  private _scrolledIndexChange = new Subject<number>();\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange: Observable<number> = this._scrolledIndexChange.pipe(distinctUntilChanged());\n\n  /** The attached viewport. */\n  private _viewport: CdkVirtualScrollViewport | null = null;\n\n  /** The size of the items in the virtually scrolling list. */\n  private _itemSize: number;\n\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  private _minBufferPx: number;\n\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  private _maxBufferPx: number;\n\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport: CdkVirtualScrollViewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize: number, minBufferPx: number, maxBufferPx: number) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() { /* no-op */ }\n\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() { /* no-op */ }\n\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index: number, behavior: ScrollBehavior): void {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n\n  /** Update the viewport's total content size. */\n  private _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n\n  /** Update the viewport's rendered range. */\n  private _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {start: renderedRange.start, end: renderedRange.end};\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    let firstVisibleIndex = scrollOffset / this._itemSize;\n\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0,\n          Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength,\n          Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0,\n              Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n\n\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nexport function _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir: CdkFixedSizeVirtualScroll) {\n  return fixedSizeDir._scrollStrategy;\n}\n\n\n/** A virtual scroll strategy that supports fixed-size items. */\n@Directive({\n  selector: 'cdk-virtual-scroll-viewport[itemSize]',\n  providers: [{\n    provide: VIRTUAL_SCROLL_STRATEGY,\n    useFactory: _fixedSizeVirtualScrollStrategyFactory,\n    deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n  }],\n})\nexport class CdkFixedSizeVirtualScroll implements OnChanges {\n  /** The size of the items in the list (in pixels). */\n  @Input()\n  get itemSize(): number { return this._itemSize; }\n  set itemSize(value: number) { this._itemSize = coerceNumberProperty(value); }\n  _itemSize = 20;\n\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  @Input()\n  get minBufferPx(): number { return this._minBufferPx; }\n  set minBufferPx(value: number) { this._minBufferPx = coerceNumberProperty(value); }\n  _minBufferPx = 100;\n\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  @Input()\n  get maxBufferPx(): number { return this._maxBufferPx; }\n  set maxBufferPx(value: number) { this._maxBufferPx = coerceNumberProperty(value); }\n  _maxBufferPx = 200;\n\n  /** The scroll strategy used by this directive. */\n  _scrollStrategy =\n      new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n\n  static ngAcceptInputType_itemSize: NumberInput;\n  static ngAcceptInputType_minBufferPx: NumberInput;\n  static ngAcceptInputType_maxBufferPx: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {ElementRef, Injectable, NgZone, OnDestroy, Optional, Inject} from '@angular/core';\nimport {fromEvent, of as observableOf, Subject, Subscription, Observable, Observer} from 'rxjs';\nimport {auditTime, filter} from 'rxjs/operators';\nimport {CdkScrollable} from './scrollable';\nimport {DOCUMENT} from '@angular/common';\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollDispatcher implements OnDestroy {\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(private _ngZone: NgZone,\n              private _platform: Platform,\n              /** @breaking-change 11.0.0 make document required */\n              @Optional() @Inject(DOCUMENT) document?: any) {\n    this._document = document;\n  }\n\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  private _scrolled = new Subject<CdkScrollable|void>();\n\n  /** Keeps track of the global `scroll` and `resize` subscriptions. */\n  _globalSubscription: Subscription | null = null;\n\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  private _scrolledCount = 0;\n\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers: Map<CdkScrollable, Subscription> = new Map();\n\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable: CdkScrollable): void {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n          .subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n\n  /**\n   * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable: CdkScrollable): void {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME): Observable<CdkScrollable|void> {\n    if (!this._platform.isBrowser) {\n      return observableOf<void>();\n    }\n\n    return new Observable((observer: Observer<CdkScrollable|void>) => {\n      if (!this._globalSubscription) {\n        this._addGlobalListener();\n      }\n\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ?\n        this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n        this._scrolled.subscribe(observer);\n\n      this._scrolledCount++;\n\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n\n        if (!this._scrolledCount) {\n          this._removeGlobalListener();\n        }\n      };\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeGlobalListener();\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementRef: ElementRef, auditTimeInMs?: number): Observable<CdkScrollable|void> {\n    const ancestors = this.getAncestorScrollContainers(elementRef);\n\n    return this.scrolled(auditTimeInMs).pipe(filter(target => {\n      return !target || ancestors.indexOf(target) > -1;\n    }));\n  }\n\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementRef: ElementRef): CdkScrollable[] {\n    const scrollingContainers: CdkScrollable[] = [];\n\n    this.scrollContainers.forEach((_subscription: Subscription, scrollable: CdkScrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n\n  /** Access injected document if available or fallback to global document reference */\n  private _getDocument(): Document {\n    return this._document || document;\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n\n  /** Returns true if the element is contained within the provided Scrollable. */\n  private _scrollableContainsElement(scrollable: CdkScrollable, elementRef: ElementRef): boolean {\n    let element: HTMLElement | null = elementRef.nativeElement;\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element!.parentElement);\n\n    return false;\n  }\n\n  /** Sets up the global scroll listeners. */\n  private _addGlobalListener() {\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      const window = this._getWindow();\n      return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n    });\n  }\n\n  /** Cleans up the global scroll listener. */\n  private _removeGlobalListener() {\n    if (this._globalSubscription) {\n      this._globalSubscription.unsubscribe();\n      this._globalSubscription = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  getRtlScrollAxisType,\n  RtlScrollAxisType,\n  supportsScrollBehavior\n} from '@angular/cdk/platform';\nimport {Directive, ElementRef, NgZone, OnDestroy, OnInit, Optional} from '@angular/core';\nimport {fromEvent, Observable, Subject, Observer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\nexport type _Without<T> = {[P in keyof T]?: never};\nexport type _XOR<T, U> = (_Without<T> & U) | (_Without<U> & T);\nexport type _Top = {top?: number};\nexport type _Bottom = {bottom?: number};\nexport type _Left = {left?: number};\nexport type _Right = {right?: number};\nexport type _Start = {start?: number};\nexport type _End = {end?: number};\nexport type _XAxis = _XOR<_XOR<_Left, _Right>, _XOR<_Start, _End>>;\nexport type _YAxis = _XOR<_Top, _Bottom>;\n\n/**\n * An extended version of ScrollToOptions that allows expressing scroll offsets relative to the\n * top, bottom, left, right, start, or end of the viewport rather than just the top and left.\n * Please note: the top and bottom properties are mutually exclusive, as are the left, right,\n * start, and end properties.\n */\nexport type ExtendedScrollToOptions = _XAxis & _YAxis & ScrollOptions;\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n  selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class CdkScrollable implements OnInit, OnDestroy {\n  private _destroyed = new Subject<void>();\n\n  private _elementScrolled: Observable<Event> = new Observable((observer: Observer<Event>) =>\n      this.ngZone.runOutsideAngular(() =>\n          fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n              .subscribe(observer)));\n\n  constructor(protected elementRef: ElementRef<HTMLElement>,\n              protected scrollDispatcher: ScrollDispatcher,\n              protected ngZone: NgZone,\n              @Optional() protected dir?: Directionality) {}\n\n  ngOnInit() {\n    this.scrollDispatcher.register(this);\n  }\n\n  ngOnDestroy() {\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled(): Observable<Event> {\n    return this._elementScrolled;\n  }\n\n  /** Gets the ElementRef for the viewport. */\n  getElementRef(): ElementRef<HTMLElement> {\n    return this.elementRef;\n  }\n\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options: ExtendedScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n\n    // Rewrite start & end offsets as right or left offsets.\n    if (options.left == null) {\n      options.left = isRtl ? options.end : options.start;\n    }\n\n    if (options.right == null) {\n      options.right = isRtl ? options.start : options.end;\n    }\n\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      (options as _Without<_Bottom> & _Top).top =\n          el.scrollHeight - el.clientHeight - options.bottom;\n    }\n\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        (options as _Without<_Left> & _Right).right =\n            el.scrollWidth - el.clientWidth - options.left;\n      }\n\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        (options as _Without<_Right> & _Left).left =\n            el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n\n    this._applyScrollToOptions(options);\n  }\n\n  private _applyScrollToOptions(options: ScrollToOptions): void {\n    const el = this.elementRef.nativeElement;\n\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable, NgZone, OnDestroy, Optional, Inject} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {auditTime} from 'rxjs/operators';\nimport {DOCUMENT} from '@angular/common';\n\n/** Time in ms to throttle the resize events by default. */\nexport const DEFAULT_RESIZE_TIME = 20;\n\n/** Object that holds the scroll position of the viewport in each direction. */\nexport interface ViewportScrollPosition {\n  top: number;\n  left: number;\n}\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class ViewportRuler implements OnDestroy {\n  /** Cached viewport dimensions. */\n  private _viewportSize: {width: number; height: number};\n\n  /** Stream of viewport change events. */\n  private _change = new Subject<Event>();\n\n  /** Event listener that will be used to handle the viewport change events. */\n  private _changeListener = (event: Event) => {\n    this._change.next(event);\n  }\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(private _platform: Platform,\n              ngZone: NgZone,\n              /** @breaking-change 11.0.0 make document required */\n              @Optional() @Inject(DOCUMENT) document?: any) {\n    this._document = document;\n\n    ngZone.runOutsideAngular(() => {\n      if (_platform.isBrowser) {\n        const window = this._getWindow();\n\n        // Note that bind the events ourselves, rather than going through something like RxJS's\n        // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n        window.addEventListener('resize', this._changeListener);\n        window.addEventListener('orientationchange', this._changeListener);\n      }\n\n      // We don't need to keep track of the subscription,\n      // because we complete the `change` stream on destroy.\n      this.change().subscribe(() => this._updateViewportSize());\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._platform.isBrowser) {\n      const window = this._getWindow();\n      window.removeEventListener('resize', this._changeListener);\n      window.removeEventListener('orientationchange', this._changeListener);\n    }\n\n    this._change.complete();\n  }\n\n  /** Returns the viewport's width and height. */\n  getViewportSize(): Readonly<{width: number, height: number}> {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n\n    const output = {width: this._viewportSize.width, height: this._viewportSize.height};\n\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null!;\n    }\n\n    return output;\n  }\n\n  /** Gets a ClientRect for the viewport's bounds. */\n  getViewportRect(): ClientRect {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {width, height} = this.getViewportSize();\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition(): ViewportScrollPosition {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {top: 0, left: 0};\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const document = this._getDocument();\n    const window = this._getWindow();\n    const documentElement = document.documentElement!;\n    const documentRect = documentElement.getBoundingClientRect();\n\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                 documentElement.scrollTop || 0;\n\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime: number = DEFAULT_RESIZE_TIME): Observable<Event> {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n\n  /** Access injected document if available or fallback to global document reference */\n  private _getDocument(): Document {\n    return this._document || document;\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n\n  /** Updates the cached viewport size. */\n  private _updateViewportSize() {\n    const window = this._getWindow();\n    this._viewportSize = this._platform.isBrowser ?\n        {width: window.innerWidth, height: window.innerHeight} :\n        {width: 0, height: 0};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ListRange} from '@angular/cdk/collections';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  animationFrameScheduler,\n  asapScheduler,\n  Observable,\n  Subject,\n  Observer,\n  Subscription,\n} from 'rxjs';\nimport {auditTime, startWith, takeUntil} from 'rxjs/operators';\nimport {ScrollDispatcher} from './scroll-dispatcher';\nimport {CdkScrollable, ExtendedScrollToOptions} from './scrollable';\nimport {VIRTUAL_SCROLL_STRATEGY, VirtualScrollStrategy} from './virtual-scroll-strategy';\nimport {ViewportRuler} from './viewport-ruler';\nimport {CdkVirtualScrollRepeater} from './virtual-scroll-repeater';\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1: ListRange, r2: ListRange): boolean {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER =\n    typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n\n\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\n@Component({\n  selector: 'cdk-virtual-scroll-viewport',\n  templateUrl: 'virtual-scroll-viewport.html',\n  styleUrls: ['virtual-scroll-viewport.css'],\n  host: {\n    'class': 'cdk-virtual-scroll-viewport',\n    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: CdkScrollable,\n    useExisting: CdkVirtualScrollViewport,\n  }]\n})\nexport class CdkVirtualScrollViewport extends CdkScrollable implements OnInit, OnDestroy {\n  /** Emits when the viewport is detached from a CdkVirtualForOf. */\n  private _detachedSubject = new Subject<void>();\n\n  /** Emits when the rendered range changes. */\n  private _renderedRangeSubject = new Subject<ListRange>();\n\n  /** The direction the viewport scrolls. */\n  @Input()\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(orientation: 'horizontal' | 'vertical') {\n    if (this._orientation !== orientation) {\n      this._orientation = orientation;\n      this._calculateSpacerSize();\n    }\n  }\n  private _orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n  // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n  // depending on how the strategy calculates the scrolled index, it may come at a cost to\n  // performance.\n  /** Emits when the index of the first element visible in the viewport changes. */\n  @Output() scrolledIndexChange: Observable<number> =\n      new Observable((observer: Observer<number>) =>\n        this._scrollStrategy.scrolledIndexChange.subscribe(index =>\n            Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n\n  /** The element that wraps the rendered content. */\n  @ViewChild('contentWrapper', {static: true}) _contentWrapper: ElementRef<HTMLElement>;\n\n  /** A stream that emits whenever the rendered range changes. */\n  renderedRangeStream: Observable<ListRange> = this._renderedRangeSubject;\n\n  /**\n   * The total size of all content (in pixels), including content that is not currently rendered.\n   */\n  private _totalContentSize = 0;\n\n  /** A string representing the `style.width` property value to be used for the spacer element. */\n  _totalContentWidth = '';\n\n  /** A string representing the `style.height` property value to be used for the spacer element. */\n  _totalContentHeight = '';\n\n  /**\n   * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n   * of the visible viewport.\n   */\n  private _renderedContentTransform: string;\n\n  /** The currently rendered range of indices. */\n  private _renderedRange: ListRange = {start: 0, end: 0};\n\n  /** The length of the data bound to this viewport (in number of items). */\n  private _dataLength = 0;\n\n  /** The size of the viewport (in pixels). */\n  private _viewportSize = 0;\n\n  /** the currently attached CdkVirtualScrollRepeater. */\n  private _forOf: CdkVirtualScrollRepeater<any> | null;\n\n  /** The last rendered content offset that was set. */\n  private _renderedContentOffset = 0;\n\n  /**\n   * Whether the last rendered content offset was to the end of the content (and therefore needs to\n   * be rewritten as an offset to the start of the content).\n   */\n  private _renderedContentOffsetNeedsRewrite = false;\n\n  /** Whether there is a pending change detection cycle. */\n  private _isChangeDetectionPending = false;\n\n  /** A list of functions to run after the next change detection cycle. */\n  private _runAfterChangeDetection: Function[] = [];\n\n  /** Subscription to changes in the viewport size. */\n  private _viewportChanges = Subscription.EMPTY;\n\n  constructor(public elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              ngZone: NgZone,\n              @Optional() @Inject(VIRTUAL_SCROLL_STRATEGY)\n                  private _scrollStrategy: VirtualScrollStrategy,\n              @Optional() dir: Directionality,\n              scrollDispatcher: ScrollDispatcher,\n              /**\n               * @deprecated `viewportRuler` parameter to become required.\n               * @breaking-change 11.0.0\n               */\n              viewportRuler?: ViewportRuler) {\n    super(elementRef, scrollDispatcher, ngZone, dir);\n\n    if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }\n\n    // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n    if (viewportRuler) {\n      this._viewportChanges = viewportRuler.change().subscribe(() => {\n        this.checkViewportSize();\n      });\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    // It's still too early to measure the viewport at this point. Deferring with a promise allows\n    // the Viewport to be rendered with the correct size before we measure. We run this outside the\n    // zone to avoid causing more change detection cycles. We handle the change detection loop\n    // ourselves instead.\n    this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n      this._measureViewportSize();\n      this._scrollStrategy.attach(this);\n\n      this.elementScrolled()\n          .pipe(\n              // Start off with a fake scroll event so we properly detect our initial position.\n              startWith(null!),\n              // Collect multiple events into one until the next animation frame. This way if\n              // there are multiple scroll events in the same frame we only need to recheck\n              // our layout once.\n              auditTime(0, SCROLL_SCHEDULER))\n          .subscribe(() => this._scrollStrategy.onContentScrolled());\n\n      this._markChangeDetectionNeeded();\n    }));\n  }\n\n  ngOnDestroy() {\n    this.detach();\n    this._scrollStrategy.detach();\n\n    // Complete all subjects\n    this._renderedRangeSubject.complete();\n    this._detachedSubject.complete();\n    this._viewportChanges.unsubscribe();\n\n    super.ngOnDestroy();\n  }\n\n  /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n  attach(forOf: CdkVirtualScrollRepeater<any>) {\n    if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkVirtualScrollViewport is already attached.');\n    }\n\n    // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n    // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n    // change detection loop ourselves.\n    this.ngZone.runOutsideAngular(() => {\n      this._forOf = forOf;\n      this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n        const newLength = data.length;\n        if (newLength !== this._dataLength) {\n          this._dataLength = newLength;\n          this._scrollStrategy.onDataLengthChanged();\n        }\n        this._doChangeDetection();\n      });\n    });\n  }\n\n  /** Detaches the current `CdkVirtualForOf`. */\n  detach() {\n    this._forOf = null;\n    this._detachedSubject.next();\n  }\n\n  /** Gets the length of the data bound to this viewport (in number of items). */\n  getDataLength(): number {\n    return this._dataLength;\n  }\n\n  /** Gets the size of the viewport (in pixels). */\n  getViewportSize(): number {\n    return this._viewportSize;\n  }\n\n  // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n  // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n  // setting it to something else, but its error prone and should probably be split into\n  // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n\n  /** Get the current rendered range of items. */\n  getRenderedRange(): ListRange {\n    return this._renderedRange;\n  }\n\n  /**\n   * Sets the total size of all content (in pixels), including content that is not currently\n   * rendered.\n   */\n  setTotalContentSize(size: number) {\n    if (this._totalContentSize !== size) {\n      this._totalContentSize = size;\n      this._calculateSpacerSize();\n      this._markChangeDetectionNeeded();\n    }\n  }\n\n  /** Sets the currently rendered range of indices. */\n  setRenderedRange(range: ListRange) {\n    if (!rangesEqual(this._renderedRange, range)) {\n      this._renderedRangeSubject.next(this._renderedRange = range);\n      this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n    }\n  }\n\n  /**\n   * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n   */\n  getOffsetToRenderedContentStart(): number | null {\n    return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n  }\n\n  /**\n   * Sets the offset from the start of the viewport to either the start or end of the rendered data\n   * (in pixels).\n   */\n  setRenderedContentOffset(offset: number, to: 'to-start' | 'to-end' = 'to-start') {\n    // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n    // in the negative direction.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    const isHorizontal = this.orientation == 'horizontal';\n    const axis = isHorizontal ? 'X' : 'Y';\n    const axisDirection = isHorizontal && isRtl ? -1 : 1;\n    let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n    this._renderedContentOffset = offset;\n    if (to === 'to-end') {\n      transform += ` translate${axis}(-100%)`;\n      // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n      // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n      // expand upward).\n      this._renderedContentOffsetNeedsRewrite = true;\n    }\n    if (this._renderedContentTransform != transform) {\n      // We know this value is safe because we parse `offset` with `Number()` before passing it\n      // into the string.\n      this._renderedContentTransform = transform;\n      this._markChangeDetectionNeeded(() => {\n        if (this._renderedContentOffsetNeedsRewrite) {\n          this._renderedContentOffset -= this.measureRenderedContentSize();\n          this._renderedContentOffsetNeedsRewrite = false;\n          this.setRenderedContentOffset(this._renderedContentOffset);\n        } else {\n          this._scrollStrategy.onRenderedOffsetChanged();\n        }\n      });\n    }\n  }\n\n  /**\n   * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n   * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n   * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n   * @param offset The offset to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToOffset(offset: number, behavior: ScrollBehavior = 'auto') {\n    const options: ExtendedScrollToOptions = {behavior};\n    if (this.orientation === 'horizontal') {\n      options.start = offset;\n    } else {\n      options.top = offset;\n    }\n    this.scrollTo(options);\n  }\n\n  /**\n   * Scrolls to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToIndex(index: number,  behavior: ScrollBehavior = 'auto') {\n    this._scrollStrategy.scrollToIndex(index, behavior);\n  }\n\n  /**\n   * Gets the current scroll offset from the start of the viewport (in pixels).\n   * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n   *     in horizontal mode.\n   */\n  measureScrollOffset(from?: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n    return from ?\n      super.measureScrollOffset(from) :\n      super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n  }\n\n  /** Measure the combined size of all of the rendered items. */\n  measureRenderedContentSize(): number {\n    const contentEl = this._contentWrapper.nativeElement;\n    return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n  }\n\n  /**\n   * Measure the total combined size of the given range. Throws if the range includes items that are\n   * not rendered.\n   */\n  measureRangeSize(range: ListRange): number {\n    if (!this._forOf) {\n      return 0;\n    }\n    return this._forOf.measureRangeSize(range, this.orientation);\n  }\n\n  /** Update the viewport dimensions and re-render. */\n  checkViewportSize() {\n    // TODO: Cleanup later when add logic for handling content resize\n    this._measureViewportSize();\n    this._scrollStrategy.onDataLengthChanged();\n  }\n\n  /** Measure the viewport size. */\n  private _measureViewportSize() {\n    const viewportEl = this.elementRef.nativeElement;\n    this._viewportSize = this.orientation === 'horizontal' ?\n        viewportEl.clientWidth : viewportEl.clientHeight;\n  }\n\n  /** Queue up change detection to run. */\n  private _markChangeDetectionNeeded(runAfter?: Function) {\n    if (runAfter) {\n      this._runAfterChangeDetection.push(runAfter);\n    }\n\n    // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n    // properties sequentially we only have to run `_doChangeDetection` once at the end.\n    if (!this._isChangeDetectionPending) {\n      this._isChangeDetectionPending = true;\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._doChangeDetection();\n      }));\n    }\n  }\n\n  /** Run change detection. */\n  private _doChangeDetection() {\n    this._isChangeDetectionPending = false;\n\n    // Apply the content transform. The transform can't be set via an Angular binding because\n    // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n    // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n    // the `Number` function first to coerce it to a numeric value.\n    this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n    // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n    // from the root, since the repeated items are content projected in. Calling `detectChanges`\n    // instead does not properly check the projected content.\n    this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n\n    const runAfterChangeDetection = this._runAfterChangeDetection;\n    this._runAfterChangeDetection = [];\n    for (const fn of runAfterChangeDetection) {\n      fn();\n    }\n  }\n\n  /** Calculates the `style.width` and `style.height` for the spacer element. */\n  private _calculateSpacerSize() {\n    this._totalContentHeight =\n        this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n    this._totalContentWidth =\n        this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ArrayDataSource,\n  CollectionViewer,\n  DataSource,\n  ListRange,\n  isDataSource,\n  _RecycleViewRepeaterStrategy,\n  _VIEW_REPEATER_STRATEGY,\n  _ViewRepeaterItemInsertArgs,\n} from '@angular/cdk/collections';\nimport {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  NgZone,\n  OnDestroy,\n  SkipSelf,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {Observable, Subject, of as observableOf, isObservable} from 'rxjs';\nimport {pairwise, shareReplay, startWith, switchMap, takeUntil} from 'rxjs/operators';\nimport {CdkVirtualScrollRepeater} from './virtual-scroll-repeater';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n\n/** The context for an item rendered by `CdkVirtualForOf` */\nexport type CdkVirtualForOfContext<T> = {\n  /** The item value. */\n  $implicit: T;\n  /** The DataSource, Observable, or NgIterable that was passed to *cdkVirtualFor. */\n  cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T>;\n  /** The index of the item in the DataSource. */\n  index: number;\n  /** The number of items in the DataSource. */\n  count: number;\n  /** Whether this is the first item in the DataSource. */\n  first: boolean;\n  /** Whether this is the last item in the DataSource. */\n  last: boolean;\n  /** Whether the index is even. */\n  even: boolean;\n  /** Whether the index is odd. */\n  odd: boolean;\n};\n\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation: 'horizontal' | 'vertical', direction: 'start' | 'end', node: Node) {\n  const el = node as Element;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\n@Directive({\n  selector: '[cdkVirtualFor][cdkVirtualForOf]',\n  providers: [\n    {provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy},\n  ]\n})\nexport class CdkVirtualForOf<T> implements\n    CdkVirtualScrollRepeater<T>, CollectionViewer, DoCheck, OnDestroy {\n  /** Emits when the rendered view of the data changes. */\n  viewChange = new Subject<ListRange>();\n\n  /** Subject that emits when a new DataSource instance is given. */\n  private _dataSourceChanges = new Subject<DataSource<T>>();\n\n  /** The DataSource to display. */\n  @Input()\n  get cdkVirtualForOf(): DataSource<T> | Observable<T[]> | NgIterable<T> | null | undefined {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value: DataSource<T> | Observable<T[]> | NgIterable<T> | null | undefined) {\n    this._cdkVirtualForOf = value;\n    if (isDataSource(value)) {\n      this._dataSourceChanges.next(value);\n    } else {\n      // Slice the value if its an NgIterable to ensure we're working with an array.\n      this._dataSourceChanges.next(new ArrayDataSource<T>(\n          isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n    }\n  }\n\n  _cdkVirtualForOf: DataSource<T> | Observable<T[]> | NgIterable<T> | null | undefined;\n\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  @Input()\n  get cdkVirtualForTrackBy(): TrackByFunction<T> | undefined {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn: TrackByFunction<T> | undefined) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ?\n        (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n        undefined;\n  }\n  private _cdkVirtualForTrackBy: TrackByFunction<T> | undefined;\n\n  /** The template used to stamp out new elements. */\n  @Input()\n  set cdkVirtualForTemplate(value: TemplateRef<CdkVirtualForOfContext<T>>) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  @Input()\n  get cdkVirtualForTemplateCacheSize() {\n    return this._viewRepeater.viewCacheSize;\n  }\n  set cdkVirtualForTemplateCacheSize(size: number) {\n    this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n  }\n\n  /** Emits whenever the data in the current DataSource changes. */\n  dataStream: Observable<T[] | ReadonlyArray<T>> = this._dataSourceChanges\n  .pipe(\n      // Start off with null `DataSource`.\n      startWith(null!),\n      // Bundle up the previous and current data sources so we can work with both.\n      pairwise(),\n      // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n      // new one, passing back a stream of data changes which we run through `switchMap` to give\n      // us a data stream that emits the latest data from whatever the current `DataSource` is.\n      switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n      // Replay the last emitted data when someone subscribes.\n      shareReplay(1));\n\n  /** The differ used to calculate changes to the data. */\n  private _differ: IterableDiffer<T> | null = null;\n\n  /** The most recent data emitted from the DataSource. */\n  private _data: T[] | ReadonlyArray<T>;\n\n  /** The currently rendered items. */\n  private _renderedItems: T[];\n\n  /** The currently rendered range of indices. */\n  private _renderedRange: ListRange;\n\n  /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n  private _needsUpdate = false;\n\n  private _destroyed = new Subject<void>();\n\n  constructor(\n      /** The view container to add items to. */\n      private _viewContainerRef: ViewContainerRef,\n      /** The template to use when stamping out new items. */\n      private _template: TemplateRef<CdkVirtualForOfContext<T>>,\n      /** The set of available differs. */\n      private _differs: IterableDiffers,\n      /** The strategy used to render items in the virtual scroll viewport. */\n      @Inject(_VIEW_REPEATER_STRATEGY)\n      private _viewRepeater: _RecycleViewRepeaterStrategy<T, T, CdkVirtualForOfContext<T>>,\n      /** The virtual scrolling viewport that these items are being rendered in. */\n      @SkipSelf() private _viewport: CdkVirtualScrollViewport,\n      ngZone: NgZone) {\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      ngZone.run(() => this.viewChange.next(this._renderedRange));\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range: ListRange, orientation: 'horizontal' | 'vertical'): number {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n\n    // Loop over all the views, find the first and land node and compute the size by subtracting\n    // the top of the first node from the bottom of the last one.\n    let firstNode: HTMLElement | undefined;\n    let lastNode: HTMLElement | undefined;\n\n    // Find the first node by starting from the beginning and going forwards.\n    for (let i = 0; i < rangeLen; i++) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>> | null;\n      if (view && view.rootNodes.length) {\n        firstNode = lastNode = view.rootNodes[0];\n        break;\n      }\n    }\n\n    // Find the last node by starting from the end and going backwards.\n    for (let i = rangeLen - 1; i > -1; i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>> | null;\n      if (view && view.rootNodes.length) {\n        lastNode = view.rootNodes[view.rootNodes.length - 1];\n        break;\n      }\n    }\n\n    return firstNode && lastNode ?\n        getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n  }\n\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._viewport.detach();\n\n    this._dataSourceChanges.next(undefined!);\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._viewRepeater.detach();\n  }\n\n  /** React to scroll state changes in the viewport. */\n  private _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n    }\n    this._needsUpdate = true;\n  }\n\n  /** Swap out one `DataSource` for another. */\n  private _changeDataSource(oldDs: DataSource<T> | null, newDs: DataSource<T> | null):\n      Observable<T[] | ReadonlyArray<T>> {\n\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : observableOf();\n  }\n\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  private _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      let view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n\n  /** Apply changes to the DOM. */\n  private _applyChanges(changes: IterableChanges<T>) {\n    this._viewRepeater.applyChanges(\n        changes,\n        this._viewContainerRef,\n        (record: IterableChangeRecord<T>,\n         adjustedPreviousIndex: number | null,\n         currentIndex: number | null) => this._getEmbeddedViewArgs(record, currentIndex!),\n        (record) => record.item);\n\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange((record: IterableChangeRecord<T>) => {\n      const view = this._viewContainerRef.get(record.currentIndex!) as\n          EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.$implicit = record.item;\n    });\n\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i) as EmbeddedViewRef<CdkVirtualForOfContext<T>>;\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  private _updateComputedContextProperties(context: CdkVirtualForOfContext<any>) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n\n  private _getEmbeddedViewArgs(record: IterableChangeRecord<T>, index: number):\n      _ViewRepeaterItemInsertArgs<CdkVirtualForOfContext<T>> {\n    // Note that it's important that we insert the item directly at the proper index,\n    // rather than inserting it and the moving it in place, because if there's a directive\n    // on the same node that injects the `ViewContainerRef`, Angular will insert another\n    // comment node which can throw off the move when it's being repeated for all items.\n    return {\n      templateRef: this._template,\n      context: {\n        $implicit: record.item,\n        // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n        // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n        cdkVirtualForOf: this._cdkVirtualForOf!,\n        index: -1,\n        count: -1,\n        first: false,\n        last: false,\n        odd: false,\n        even: false\n      },\n      index,\n    };\n  }\n\n  static ngAcceptInputType_cdkVirtualForTemplateCacheSize: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkFixedSizeVirtualScroll} from './fixed-size-virtual-scroll';\nimport {CdkScrollable} from './scrollable';\nimport {CdkVirtualForOf} from './virtual-for-of';\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\n\n@NgModule({\n  exports: [CdkScrollable],\n  declarations: [CdkScrollable]\n})\nexport class CdkScrollableModule {}\n\n/**\n * @docs-primary-export\n */\n@NgModule({\n  imports: [\n    BidiModule,\n    PlatformModule,\n    CdkScrollableModule\n  ],\n  exports: [\n    BidiModule,\n    CdkScrollableModule,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n  declarations: [\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n  ],\n})\nexport class ScrollingModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {ListRange} from '@angular/cdk/collections';\n\n/**\n * An item to be repeated by the VirtualScrollViewport\n */\nexport interface CdkVirtualScrollRepeater<T> {\n  dataStream: Observable<T[] | ReadonlyArray<T>>;\n  measureRangeSize(range: ListRange, orientation: 'horizontal' | 'vertical'): number;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './fixed-size-virtual-scroll';\nexport * from './scroll-dispatcher';\nexport * from './scrollable';\nexport * from './scrolling-module';\nexport * from './viewport-ruler';\nexport * from './virtual-for-of';\nexport * from './virtual-scroll-strategy';\nexport * from './virtual-scroll-viewport';\nexport * from './virtual-scroll-repeater';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of the Angular Component Development Kit. */\nexport const VERSION = new Version('10.2.4');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './version';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}