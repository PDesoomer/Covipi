{"version":3,"file":"ngx-order-pipe.js","sources":["../../src/app/order-pipe/ngx-order.pipe.ts","../../src/app/order-pipe/ngx-order.module.ts","../../ngx-order-pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"orderBy\",\n  pure: false,\n})\nexport class OrderPipe implements PipeTransform {\n  /**\n   * Check if a value is a string\n   *\n   * @param value\n   */\n  static isString(value: any) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n\n  /**\n   * Sorts values ignoring the case\n   *\n   * @param a\n   * @param b\n   */\n  static caseInsensitiveSort(a: any, b: any) {\n    if (OrderPipe.isString(a) && OrderPipe.isString(b)) {\n      return a.localeCompare(b);\n    }\n    return OrderPipe.defaultCompare(a, b);\n  }\n\n  /**\n   * Default compare method\n   *\n   * @param a\n   * @param b\n   */\n  static defaultCompare(a: any, b: any) {\n    if (a && a instanceof Date) {\n      a = a.getTime();\n    }\n    if (b && b instanceof Date) {\n      b = b.getTime();\n    }\n\n    if (a === b) {\n      return 0;\n    }\n    if (a == null) {\n      return 1;\n    }\n    if (b == null) {\n      return -1;\n    }\n    return a > b ? 1 : -1;\n  }\n\n  /**\n   * Parse expression, split into items\n   * @param expression\n   * @returns {string[]}\n   */\n  static parseExpression(expression: string): string[] {\n    expression = expression.replace(/\\[(\\w+)\\]/g, \".$1\");\n    expression = expression.replace(/^\\./, \"\");\n    return expression.split(\".\");\n  }\n\n  /**\n   * Get value by expression\n   *\n   * @param object\n   * @param expression\n   * @returns {any}\n   */\n  static getValue(object: any, expression: string[]) {\n    for (let i = 0, n = expression.length; i < n; ++i) {\n      if (!object) {\n        return;\n      }\n      const k = expression[i];\n      if (!(k in object)) {\n        return;\n      }\n      if (typeof object[k] === \"function\") {\n        object = object[k]();\n      } else {\n        object = object[k];\n      }\n    }\n\n    return object;\n  }\n\n  /**\n   * Set value by expression\n   *\n   * @param object\n   * @param value\n   * @param expression\n   */\n  static setValue(object: any, value: any, expression: string[]) {\n    let i;\n    for (i = 0; i < expression.length - 1; i++) {\n      object = object[expression[i]];\n    }\n\n    object[expression[i]] = value;\n  }\n\n  transform(\n    value: any | any[],\n    expression?: any,\n    reverse?: boolean,\n    isCaseInsensitive: boolean = false,\n    comparator?: Function\n  ): any {\n    if (!value) {\n      return value;\n    }\n\n    if (Array.isArray(expression)) {\n      return this.multiExpressionTransform(\n        value,\n        expression,\n        reverse,\n        isCaseInsensitive,\n        comparator\n      );\n    }\n\n    if (Array.isArray(value)) {\n      return this.sortArray(\n        value.slice(),\n        expression,\n        reverse,\n        isCaseInsensitive,\n        comparator\n      );\n    }\n\n    if (typeof value === \"object\") {\n      return this.transformObject(\n        Object.assign({}, value),\n        expression,\n        reverse,\n        isCaseInsensitive,\n        comparator\n      );\n    }\n\n    return value;\n  }\n\n  /**\n   * Sort array\n   *\n   * @param value\n   * @param expression\n   * @param reverse\n   * @param isCaseInsensitive\n   * @param comparator\n   * @returns {any[]}\n   */\n  private sortArray(\n    value: any[],\n    expression?: any,\n    reverse?: boolean,\n    isCaseInsensitive?: boolean,\n    comparator?: Function\n  ): any[] {\n    const isDeepLink = expression && expression.indexOf(\".\") !== -1;\n\n    if (isDeepLink) {\n      expression = OrderPipe.parseExpression(expression);\n    }\n\n    let compareFn: Function;\n\n    if (comparator && typeof comparator === \"function\") {\n      compareFn = comparator;\n    } else {\n      compareFn = isCaseInsensitive\n        ? OrderPipe.caseInsensitiveSort\n        : OrderPipe.defaultCompare;\n    }\n\n    const array: any[] = value.sort((a: any, b: any): number => {\n      if (!expression) {\n        return compareFn(a, b);\n      }\n\n      if (!isDeepLink) {\n        if (a && b) {\n          return compareFn(a[expression], b[expression]);\n        }\n        return compareFn(a, b);\n      }\n\n      return compareFn(\n        OrderPipe.getValue(a, expression),\n        OrderPipe.getValue(b, expression)\n      );\n    });\n\n    if (reverse) {\n      return array.reverse();\n    }\n\n    return array;\n  }\n\n  /**\n   * Transform Object\n   *\n   * @param value\n   * @param expression\n   * @param reverse\n   * @param isCaseInsensitive\n   * @param comparator\n   * @returns {any[]}\n   */\n  private transformObject(\n    value: any | any[],\n    expression?: any,\n    reverse?: boolean,\n    isCaseInsensitive?: boolean,\n    comparator?: Function\n  ): any {\n    const parsedExpression = OrderPipe.parseExpression(expression);\n    let lastPredicate = parsedExpression.pop();\n    let oldValue = OrderPipe.getValue(value, parsedExpression);\n\n    if (!Array.isArray(oldValue)) {\n      parsedExpression.push(lastPredicate);\n      lastPredicate = null;\n      oldValue = OrderPipe.getValue(value, parsedExpression);\n    }\n\n    if (!oldValue) {\n      return value;\n    }\n\n    OrderPipe.setValue(\n      value,\n      this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive),\n      parsedExpression\n    );\n    return value;\n  }\n\n  /**\n   * Apply multiple expressions\n   *\n   * @param value\n   * @param {any[]} expressions\n   * @param {boolean} reverse\n   * @param {boolean} isCaseInsensitive\n   * @param {Function} comparator\n   * @returns {any}\n   */\n  private multiExpressionTransform(\n    value: any,\n    expressions: any[],\n    reverse: boolean,\n    isCaseInsensitive: boolean = false,\n    comparator?: Function\n  ): any {\n    return expressions.reverse().reduce((result: any, expression: any) => {\n      return this.transform(\n        result,\n        expression,\n        reverse,\n        isCaseInsensitive,\n        comparator\n      );\n    }, value);\n  }\n}\n","/**\n * Created by vadimdez on 20/01/2017.\n */\nimport { NgModule } from '@angular/core';\nimport { OrderPipe } from './ngx-order.pipe';\n\n@NgModule({\n  declarations: [OrderPipe],\n  exports: [OrderPipe],\n  providers: [OrderPipe]\n})\nexport class OrderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}