/**
* @license Angular v10.1.0-next.6+7.sha-aaa1d8e
* (c) 2010-2020 Google LLC. https://angular.io/
* License: MIT
*/
!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("mediaQuery",(e,t,n)=>{function a(e){n.patchMethod(e,"addListener",e=>(a,i)=>{const o=i.length>0?i[0]:null;if("function"==typeof o){const i=t.current.wrap(o,"MediaQuery");return o[n.symbol("mediaQueryCallback")]=i,e.call(a,i)}return e.apply(a,i)})}function i(e){n.patchMethod(e,"removeListener",e=>(t,a)=>{const i=a.length>0?a[0]:null;if("function"==typeof i){const o=i[n.symbol("mediaQueryCallback")];return o?e.call(t,o):e.apply(t,a)}return e.apply(t,a)})}if(e.MediaQueryList){const t=e.MediaQueryList.prototype;a(t),i(t)}else e.matchMedia&&n.patchMethod(e,"matchMedia",e=>(t,n)=>{const o=e.apply(t,n);if(o){const e=Object.getPrototypeOf(o);e&&e.addListener?(a(e),i(e),a(o),i(o)):o.addListener&&(a(o),i(o))}return o})})}));