/**
* @license Angular v10.1.0-next.6+7.sha-aaa1d8e
* (c) 2010-2020 Google LLC. https://angular.io/
* License: MIT
*/
!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.TaskTrackingZoneSpec=class{constructor(){this.name="TaskTrackingZone",this.microTasks=[],this.macroTasks=[],this.eventTasks=[],this.properties={TaskTrackingZone:this}}static get(){return Zone.current.get("TaskTrackingZone")}getTasksFor(e){switch(e){case"microTask":return this.microTasks;case"macroTask":return this.macroTasks;case"eventTask":return this.eventTasks}throw new Error("Unknown task format: "+e)}onScheduleTask(e,s,t,n){return n.creationLocation=new Error(`Task '${n.type}' from '${n.source}'.`),this.getTasksFor(n.type).push(n),e.scheduleTask(t,n)}onCancelTask(e,s,t,n){const r=this.getTasksFor(n.type);for(let e=0;e<r.length;e++)if(r[e]==n){r.splice(e,1);break}return e.cancelTask(t,n)}onInvokeTask(e,s,t,n,r,a){if("eventTask"===n.type)return e.invokeTask(t,n,r,a);const o=this.getTasksFor(n.type);for(let e=0;e<o.length;e++)if(o[e]==n){o.splice(e,1);break}return e.invokeTask(t,n,r,a)}clearEvents(){for(;this.eventTasks.length;)Zone.current.cancelTask(this.eventTasks[0])}}}));