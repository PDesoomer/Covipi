{"ast":null,"code":"import _inherits from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultThrottleConfig;\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n  };\n}\n\nvar ThrottleOperator = /*#__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    _classCallCheck(this, ThrottleOperator);\n\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  _createClass(ThrottleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n  }]);\n\n  return ThrottleOperator;\n}();\n\nvar ThrottleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(ThrottleSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(ThrottleSubscriber);\n\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this;\n\n    _classCallCheck(this, ThrottleSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n\n  _createClass(ThrottleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this._hasValue = true;\n      this._sendValue = value;\n\n      if (!this._throttled) {\n        if (this._leading) {\n          this.send();\n        } else {\n          this.throttle(value);\n        }\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var _hasValue = this._hasValue,\n          _sendValue = this._sendValue;\n\n      if (_hasValue) {\n        this.destination.next(_sendValue);\n        this.throttle(_sendValue);\n      }\n\n      this._hasValue = false;\n      this._sendValue = undefined;\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(value) {\n      var duration = this.tryDurationSelector(value);\n\n      if (!!duration) {\n        this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n      }\n    }\n  }, {\n    key: \"tryDurationSelector\",\n    value: function tryDurationSelector(value) {\n      try {\n        return this.durationSelector(value);\n      } catch (err) {\n        this.destination.error(err);\n        return null;\n      }\n    }\n  }, {\n    key: \"throttlingDone\",\n    value: function throttlingDone() {\n      var _throttled = this._throttled,\n          _trailing = this._trailing;\n\n      if (_throttled) {\n        _throttled.unsubscribe();\n      }\n\n      this._throttled = undefined;\n\n      if (_trailing) {\n        this.send();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.throttlingDone();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.throttlingDone();\n    }\n  }]);\n\n  return ThrottleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/throttle.ts"],"names":[],"mappings":";;;;AAMA,SAAS,qBAAT,EAAgC,cAAhC,EAAgD,qBAAhD,QAA6E,mBAA7E;AAOA,OAAO,IAAM,qBAAqB,GAAmB;AACnD,EAAA,OAAO,EAAE,IAD0C;AAEnD,EAAA,QAAQ,EAAE;AAFyC,CAA9C;AAmDP,OAAM,SAAU,QAAV,CAAsB,gBAAtB,EACoE;AAAA,MAA9C,MAA8C,uEAArB,qBAAqB;AACxE,SAAO,UAAC,MAAD;AAAA,WAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,gBAAJ,CAAqB,gBAArB,EAAuC,CAAC,CAAC,MAAM,CAAC,OAAhD,EAAyD,CAAC,CAAC,MAAM,CAAC,QAAlE,CAAZ,CAA3B;AAAA,GAAP;AACD;;IAEK,gB;AACJ,4BAAoB,gBAApB,EACoB,OADpB,EAEoB,QAFpB,EAEqC;AAAA;;AAFjB,SAAA,gBAAA,GAAA,gBAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACnB;;;;yBAEI,U,EAA2B,M,EAAW;AACzC,aAAO,MAAM,CAAC,SAAP,CACL,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,KAAK,gBAAxC,EAA0D,KAAK,OAA/D,EAAwE,KAAK,QAA7E,CADK,CAAP;AAGD;;;;;;IAQG,kB;;;;;AAKJ,8BAAsB,WAAtB,EACoB,gBADpB,EAEoB,QAFpB,EAGoB,SAHpB,EAGsC;AAAA;;AAAA;;AACpC,8BAAM,WAAN;AAJoB,UAAA,WAAA,GAAA,WAAA;AACF,UAAA,gBAAA,GAAA,gBAAA;AACA,UAAA,QAAA,GAAA,QAAA;AACA,UAAA,SAAA,GAAA,SAAA;AALZ,UAAA,SAAA,GAAY,KAAZ;AAK8B;AAErC;;;;0BAEe,K,EAAQ;AACtB,WAAK,SAAL,GAAiB,IAAjB;AACA,WAAK,UAAL,GAAkB,KAAlB;;AAEA,UAAI,CAAC,KAAK,UAAV,EAAsB;AACpB,YAAI,KAAK,QAAT,EAAmB;AACjB,eAAK,IAAL;AACD,SAFD,MAEO;AACL,eAAK,QAAL,CAAc,KAAd;AACD;AACF;AACF;;;2BAEW;AAAA,UACF,SADE,GACwB,IADxB,CACF,SADE;AAAA,UACS,UADT,GACwB,IADxB,CACS,UADT;;AAEV,UAAI,SAAJ,EAAe;AACb,aAAK,WAAL,CAAiB,IAAjB,CAAsB,UAAtB;AACA,aAAK,QAAL,CAAc,UAAd;AACD;;AACD,WAAK,SAAL,GAAiB,KAAjB;AACA,WAAK,UAAL,GAAkB,SAAlB;AACD;;;6BAEgB,K,EAAQ;AACvB,UAAM,QAAQ,GAAG,KAAK,mBAAL,CAAyB,KAAzB,CAAjB;;AACA,UAAI,CAAC,CAAC,QAAN,EAAgB;AACd,aAAK,GAAL,CAAS,KAAK,UAAL,GAAkB,cAAc,CAAC,QAAD,EAAW,IAAI,qBAAJ,CAA0B,IAA1B,CAAX,CAAzC;AACD;AACF;;;wCAE2B,K,EAAQ;AAClC,UAAI;AACF,eAAO,KAAK,gBAAL,CAAsB,KAAtB,CAAP;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,aAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA,eAAO,IAAP;AACD;AACF;;;qCAEqB;AAAA,UACZ,UADY,GACc,IADd,CACZ,UADY;AAAA,UACA,SADA,GACc,IADd,CACA,SADA;;AAEpB,UAAI,UAAJ,EAAgB;AACd,QAAA,UAAU,CAAC,WAAX;AACD;;AACD,WAAK,UAAL,GAAkB,SAAlB;;AAEA,UAAI,SAAJ,EAAe;AACb,aAAK,IAAL;AACD;AACF;;;iCAES;AACR,WAAK,cAAL;AACD;;;qCAEa;AACZ,WAAK,cAAL;AACD;;;;EArEoC,qB","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map"]},"metadata":{},"sourceType":"module"}