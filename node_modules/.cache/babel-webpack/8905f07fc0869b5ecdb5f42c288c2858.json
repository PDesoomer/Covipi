{"ast":null,"code":"import _toConsumableArray from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dougair/Documents/WebDev/Angular/material-dashboard-angular2-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function (source) {\n    var project;\n\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nvar WithLatestFromOperator = /*#__PURE__*/function () {\n  function WithLatestFromOperator(observables, project) {\n    _classCallCheck(this, WithLatestFromOperator);\n\n    this.observables = observables;\n    this.project = project;\n  }\n\n  _createClass(WithLatestFromOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n  }]);\n\n  return WithLatestFromOperator;\n}();\n\nvar WithLatestFromSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(WithLatestFromSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(WithLatestFromSubscriber);\n\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this;\n\n    _classCallCheck(this, WithLatestFromSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n\n    for (var _i = 0; _i < len; _i++) {\n      var observable = observables[_i];\n\n      _this.add(subscribeToResult(_assertThisInitialized(_this), observable, undefined, _i));\n    }\n\n    return _this;\n  }\n\n  _createClass(WithLatestFromSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, innerValue, outerIndex) {\n      this.values[outerIndex] = innerValue;\n      var toRespond = this.toRespond;\n\n      if (toRespond.length > 0) {\n        var found = toRespond.indexOf(outerIndex);\n\n        if (found !== -1) {\n          toRespond.splice(found, 1);\n        }\n      }\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {}\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.toRespond.length === 0) {\n        var args = [value].concat(_toConsumableArray(this.values));\n\n        if (this.project) {\n          this._tryProject(args);\n        } else {\n          this.destination.next(args);\n        }\n      }\n    }\n  }, {\n    key: \"_tryProject\",\n    value: function _tryProject(args) {\n      var result;\n\n      try {\n        result = this.project.apply(this, args);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":"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","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map"]},"metadata":{},"sourceType":"module"}