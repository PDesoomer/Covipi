{"ast":null,"code":"import { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  return function (source) {\n    return source.lift.call(concatStatic.apply(void 0, [source].concat(observables)));\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/concat.ts"],"names":[],"mappings":"AAAA,SAAU,MAAM,IAAI,YAApB,QAAwC,sBAAxC;AA0BA,OAAM,SAAU,MAAV,GAAkF;AAAA,oCAAxD,WAAwD;AAAxD,IAAA,WAAwD;AAAA;;AACtF,SAAO,UAAC,MAAD;AAAA,WAA2B,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,YAAY,MAAZ,UAAa,MAAb,SAAwB,WAAxB,EAAjB,CAA3B;AAAA,GAAP;AACD","sourcesContent":["import { concat as concatStatic } from '../observable/concat';\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n//# sourceMappingURL=concat.js.map"]},"metadata":{},"sourceType":"module"}