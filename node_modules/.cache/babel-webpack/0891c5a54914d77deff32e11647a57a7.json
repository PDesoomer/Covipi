{"ast":null,"code":"import _get from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var VirtualTimeScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(VirtualTimeScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(VirtualTimeScheduler);\n\n  function VirtualTimeScheduler() {\n    var _this;\n\n    var SchedulerAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : VirtualAction;\n    var maxFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n    _classCallCheck(this, VirtualTimeScheduler);\n\n    _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    });\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  _createClass(VirtualTimeScheduler, [{\n    key: \"flush\",\n    value: function flush() {\n      var actions = this.actions,\n          maxFrames = this.maxFrames;\n      var error, action;\n\n      while ((action = actions[0]) && action.delay <= maxFrames) {\n        actions.shift();\n        this.frame = action.delay;\n\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      }\n\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport var VirtualAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(VirtualAction, _AsyncAction);\n\n  var _super2 = _createSuper(VirtualAction);\n\n  function VirtualAction(scheduler, work) {\n    var _this2;\n\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scheduler.index += 1;\n\n    _classCallCheck(this, VirtualAction);\n\n    _this2 = _super2.call(this, scheduler, work);\n    _this2.scheduler = scheduler;\n    _this2.work = work;\n    _this2.index = index;\n    _this2.active = true;\n    _this2.index = scheduler.index = index;\n    return _this2;\n  }\n\n  _createClass(VirtualAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (!this.id) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"schedule\", this).call(this, state, delay);\n      }\n\n      this.active = false;\n      var action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.delay = scheduler.frame + delay;\n      var actions = scheduler.actions;\n      actions.push(this);\n      actions.sort(VirtualAction.sortActions);\n      return true;\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      return undefined;\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute(state, delay) {\n      if (this.active === true) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"_execute\", this).call(this, state, delay);\n      }\n    }\n  }], [{\n    key: \"sortActions\",\n    value: function sortActions(a, b) {\n      if (a.delay === b.delay) {\n        if (a.index === b.index) {\n          return 0;\n        } else if (a.index > b.index) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else if (a.delay > b.delay) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }]);\n\n  return VirtualAction;\n}(AsyncAction);","map":{"version":3,"sources":["../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]},"metadata":{},"sourceType":"module"}