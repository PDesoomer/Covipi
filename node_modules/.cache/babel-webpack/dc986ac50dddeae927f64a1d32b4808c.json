{"ast":null,"code":"import _assertThisInitialized from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\nexport var MapOperator = /*#__PURE__*/function () {\n  function MapOperator(project, thisArg) {\n    _classCallCheck(this, MapOperator);\n\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n\n  _createClass(MapOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n  }]);\n\n  return MapOperator;\n}();\n\nvar MapSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(MapSubscriber, _Subscriber);\n\n  var _super = _createSuper(MapSubscriber);\n\n  function MapSubscriber(destination, project, thisArg) {\n    var _this;\n\n    _classCallCheck(this, MapSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.count = 0;\n    _this.thisArg = thisArg || _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(MapSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var result;\n\n      try {\n        result = this.project.call(this.thisArg, value, this.count++);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n\n  return MapSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/map.ts"],"names":[],"mappings":";;;;;AACA,SAAS,UAAT,QAA2B,eAA3B;AA2CA,OAAM,SAAU,GAAV,CAAoB,OAApB,EAA6D,OAA7D,EAA0E;AAC9E,SAAO,SAAS,YAAT,CAAsB,MAAtB,EAA2C;AAChD,QAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AACjC,YAAM,IAAI,SAAJ,CAAc,4DAAd,CAAN;AACD;;AACD,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,WAAJ,CAAgB,OAAhB,EAAyB,OAAzB,CAAZ,CAAP;AACD,GALD;AAMD;AAED,WAAa,WAAb;AACE,uBAAoB,OAApB,EAAqE,OAArE,EAAiF;AAAA;;AAA7D,SAAA,OAAA,GAAA,OAAA;AAAiD,SAAA,OAAA,GAAA,OAAA;AACpE;;AAFH;AAAA;AAAA,yBAIO,UAJP,EAIkC,MAJlC,EAI6C;AACzC,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,aAAJ,CAAkB,UAAlB,EAA8B,KAAK,OAAnC,EAA4C,KAAK,OAAjD,CAAjB,CAAP;AACD;AANH;;AAAA;AAAA;;IAcM,a;;;;;AAIJ,yBAAY,WAAZ,EACoB,OADpB,EAEY,OAFZ,EAEwB;AAAA;;AAAA;;AACtB,8BAAM,WAAN;AAFkB,UAAA,OAAA,GAAA,OAAA;AAJpB,UAAA,KAAA,GAAgB,CAAhB;AAOE,UAAK,OAAL,GAAe,OAAO,iCAAtB;AAFsB;AAGvB;;;;0BAIe,K,EAAQ;AACtB,UAAI,MAAJ;;AACA,UAAI;AACF,QAAA,MAAM,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,OAAvB,EAAgC,KAAhC,EAAuC,KAAK,KAAL,EAAvC,CAAT;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,aAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA;AACD;;AACD,WAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACD;;;;EAtB+B,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport class MapOperator {\n    constructor(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n}\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project, thisArg) {\n        super(destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=map.js.map"]},"metadata":{},"sourceType":"module"}