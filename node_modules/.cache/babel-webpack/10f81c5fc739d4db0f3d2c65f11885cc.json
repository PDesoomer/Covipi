{"ast":null,"code":"import _inherits from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license Angular v10.1.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { getUrlScheme, syntaxError, Identifiers, JitCompiler, ProviderMeta, I18NHtmlParser, CompilerConfig, CompileReflector, ResourceLoader, JitSummaryResolver, SummaryResolver, Lexer, Parser, HtmlParser, TemplateParser, ElementSchemaRegistry, JitEvaluator, DirectiveNormalizer, UrlResolver, CompileMetadataResolver, NgModuleResolver, DirectiveResolver, PipeResolver, StaticSymbolCache, StyleCompiler, ViewCompiler, NgModuleCompiler, DomElementSchemaRegistry } from '@angular/compiler';\nimport { ɵReflectionCapabilities, ɵstringify, ANALYZE_FOR_ENTRY_COMPONENTS, ElementRef, NgModuleRef, ViewContainerRef, ChangeDetectorRef, Renderer2, QueryList, TemplateRef, ɵCodegenComponentFactoryResolver, ComponentFactoryResolver, ComponentFactory, ComponentRef, NgModuleFactory, ɵcmf, ɵmod, ɵmpd, ɵregisterModuleFactory, Injector, ViewEncapsulation, ChangeDetectionStrategy, SecurityContext, LOCALE_ID, TRANSLATIONS_FORMAT, ɵinlineInterpolate, ɵinterpolate, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵvid, ɵeld, ɵand, ɵted, ɵdid, ɵprd, ɵqud, ɵpad, ɵpod, ɵppd, ɵpid, ɵnov, ɵncd, ɵunv, ɵcrt, ɵccf, InjectionToken, PACKAGE_ROOT_URL, Compiler, MissingTranslationStrategy, ɵConsole, Optional, Inject, TRANSLATIONS, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar MODULE_SUFFIX = '';\nvar builtinExternalReferences = createBuiltinExternalReferencesMap();\n\nvar JitReflector = /*#__PURE__*/function () {\n  function JitReflector() {\n    _classCallCheck(this, JitReflector);\n\n    this.reflectionCapabilities = new ɵReflectionCapabilities();\n  }\n\n  _createClass(JitReflector, [{\n    key: \"componentModuleUrl\",\n    value: function componentModuleUrl(type, cmpMetadata) {\n      var moduleId = cmpMetadata.moduleId;\n\n      if (typeof moduleId === 'string') {\n        var scheme = getUrlScheme(moduleId);\n        return scheme ? moduleId : \"package:\".concat(moduleId).concat(MODULE_SUFFIX);\n      } else if (moduleId !== null && moduleId !== void 0) {\n        throw syntaxError(\"moduleId should be a string in \\\"\".concat(ɵstringify(type), \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") + \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n      }\n\n      return \"./\".concat(ɵstringify(type));\n    }\n  }, {\n    key: \"parameters\",\n    value: function parameters(typeOrFunc) {\n      return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n  }, {\n    key: \"tryAnnotations\",\n    value: function tryAnnotations(typeOrFunc) {\n      return this.annotations(typeOrFunc);\n    }\n  }, {\n    key: \"annotations\",\n    value: function annotations(typeOrFunc) {\n      return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n  }, {\n    key: \"shallowAnnotations\",\n    value: function shallowAnnotations(typeOrFunc) {\n      throw new Error('Not supported in JIT mode');\n    }\n  }, {\n    key: \"propMetadata\",\n    value: function propMetadata(typeOrFunc) {\n      return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n  }, {\n    key: \"hasLifecycleHook\",\n    value: function hasLifecycleHook(type, lcProperty) {\n      return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n  }, {\n    key: \"guards\",\n    value: function guards(type) {\n      return this.reflectionCapabilities.guards(type);\n    }\n  }, {\n    key: \"resolveExternalReference\",\n    value: function resolveExternalReference(ref) {\n      return builtinExternalReferences.get(ref) || ref.runtime;\n    }\n  }]);\n\n  return JitReflector;\n}();\n\nfunction createBuiltinExternalReferencesMap() {\n  var map = new Map();\n  map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n  map.set(Identifiers.Renderer2, Renderer2);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(Identifiers.createModuleFactory, ɵcmf);\n  map.set(Identifiers.moduleDef, ɵmod);\n  map.set(Identifiers.moduleProviderDef, ɵmpd);\n  map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n  map.set(Identifiers.Injector, Injector);\n  map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n  map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n  map.set(Identifiers.SecurityContext, SecurityContext);\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n  map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.unwrapValue, ɵunv);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\n\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\nvar _NO_RESOURCE_LOADER = {\n  get: function get(url) {\n    throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\".concat(url, \"\\\"\"));\n  }\n};\nvar baseHtmlParser = new InjectionToken('HtmlParser');\n\nvar CompilerImpl = /*#__PURE__*/function () {\n  function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console) {\n    _classCallCheck(this, CompilerImpl);\n\n    this._metadataResolver = _metadataResolver;\n    this._delegate = new JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n\n  _createClass(CompilerImpl, [{\n    key: \"getExtraNgModuleProviders\",\n    value: function getExtraNgModuleProviders() {\n      return [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, {\n        useValue: this\n      }))];\n    }\n  }, {\n    key: \"compileModuleSync\",\n    value: function compileModuleSync(moduleType) {\n      return this._delegate.compileModuleSync(moduleType);\n    }\n  }, {\n    key: \"compileModuleAsync\",\n    value: function compileModuleAsync(moduleType) {\n      return this._delegate.compileModuleAsync(moduleType);\n    }\n  }, {\n    key: \"compileModuleAndAllComponentsSync\",\n    value: function compileModuleAndAllComponentsSync(moduleType) {\n      var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n\n      return {\n        ngModuleFactory: result.ngModuleFactory,\n        componentFactories: result.componentFactories\n      };\n    }\n  }, {\n    key: \"compileModuleAndAllComponentsAsync\",\n    value: function compileModuleAndAllComponentsAsync(moduleType) {\n      return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(function (result) {\n        return {\n          ngModuleFactory: result.ngModuleFactory,\n          componentFactories: result.componentFactories\n        };\n      });\n    }\n  }, {\n    key: \"loadAotSummaries\",\n    value: function loadAotSummaries(summaries) {\n      this._delegate.loadAotSummaries(summaries);\n    }\n  }, {\n    key: \"hasAotSummary\",\n    value: function hasAotSummary(ref) {\n      return this._delegate.hasAotSummary(ref);\n    }\n  }, {\n    key: \"getComponentFactory\",\n    value: function getComponentFactory(component) {\n      return this._delegate.getComponentFactory(component);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._delegate.clearCache();\n    }\n  }, {\n    key: \"clearCacheFor\",\n    value: function clearCacheFor(type) {\n      this._delegate.clearCacheFor(type);\n    }\n  }, {\n    key: \"getModuleId\",\n    value: function getModuleId(moduleType) {\n      var meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n\n      return meta && meta.id || undefined;\n    }\n  }]);\n\n  return CompilerImpl;\n}();\n\nvar ɵ0 = new JitReflector(),\n    ɵ1 = _NO_RESOURCE_LOADER,\n    ɵ2 = function ɵ2(parser, translations, format, config, console) {\n  translations = translations || '';\n  var missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n  return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n},\n    ɵ3 = new CompilerConfig();\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\n\n\nvar COMPILER_PROVIDERS__PRE_R3__ = [{\n  provide: CompileReflector,\n  useValue: ɵ0\n}, {\n  provide: ResourceLoader,\n  useValue: ɵ1\n}, {\n  provide: JitSummaryResolver,\n  deps: []\n}, {\n  provide: SummaryResolver,\n  useExisting: JitSummaryResolver\n}, {\n  provide: ɵConsole,\n  deps: []\n}, {\n  provide: Lexer,\n  deps: []\n}, {\n  provide: Parser,\n  deps: [Lexer]\n}, {\n  provide: baseHtmlParser,\n  useClass: HtmlParser,\n  deps: []\n}, {\n  provide: I18NHtmlParser,\n  useFactory: ɵ2,\n  deps: [baseHtmlParser, [new Optional(), new Inject(TRANSLATIONS)], [new Optional(), new Inject(TRANSLATIONS_FORMAT)], [CompilerConfig], [ɵConsole]]\n}, {\n  provide: HtmlParser,\n  useExisting: I18NHtmlParser\n}, {\n  provide: TemplateParser,\n  deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, ɵConsole]\n}, {\n  provide: JitEvaluator,\n  useClass: JitEvaluator,\n  deps: []\n}, {\n  provide: DirectiveNormalizer,\n  deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]\n}, {\n  provide: CompileMetadataResolver,\n  deps: [CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver, SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, ɵConsole, [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]]\n}, DEFAULT_PACKAGE_URL_PROVIDER, {\n  provide: StyleCompiler,\n  deps: [UrlResolver]\n}, {\n  provide: ViewCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: CompilerConfig,\n  useValue: ɵ3\n}, {\n  provide: Compiler,\n  useClass: CompilerImpl,\n  deps: [Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler, NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, ɵConsole]\n}, {\n  provide: DomElementSchemaRegistry,\n  deps: []\n}, {\n  provide: ElementSchemaRegistry,\n  useExisting: DomElementSchemaRegistry\n}, {\n  provide: UrlResolver,\n  deps: [PACKAGE_ROOT_URL]\n}, {\n  provide: DirectiveResolver,\n  deps: [CompileReflector]\n}, {\n  provide: PipeResolver,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleResolver,\n  deps: [CompileReflector]\n}];\nvar COMPILER_PROVIDERS__POST_R3__ = [{\n  provide: Compiler,\n  useFactory: function useFactory() {\n    return new Compiler();\n  }\n}];\nvar COMPILER_PROVIDERS = COMPILER_PROVIDERS__POST_R3__;\n/**\n * @publicApi\n */\n\nvar JitCompilerFactory = /*#__PURE__*/function () {\n  /* @internal */\n  function JitCompilerFactory(defaultOptions) {\n    _classCallCheck(this, JitCompilerFactory);\n\n    var compilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning\n    };\n    this._defaultOptions = [compilerOptions].concat(_toConsumableArray(defaultOptions));\n  }\n\n  _createClass(JitCompilerFactory, [{\n    key: \"createCompiler\",\n    value: function createCompiler() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var opts = _mergeOptions(this._defaultOptions.concat(options));\n\n      var injector = Injector.create([COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: function useFactory() {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces\n          });\n        },\n        deps: []\n      }, opts.providers]);\n      return injector.get(Compiler);\n    }\n  }]);\n\n  return JitCompilerFactory;\n}();\n\nfunction _mergeOptions(optionsArr) {\n  return {\n    useJit: _lastDefined(optionsArr.map(function (options) {\n      return options.useJit;\n    })),\n    defaultEncapsulation: _lastDefined(optionsArr.map(function (options) {\n      return options.defaultEncapsulation;\n    })),\n    providers: _mergeArrays(optionsArr.map(function (options) {\n      return options.providers;\n    })),\n    missingTranslation: _lastDefined(optionsArr.map(function (options) {\n      return options.missingTranslation;\n    })),\n    preserveWhitespaces: _lastDefined(optionsArr.map(function (options) {\n      return options.preserveWhitespaces;\n    }))\n  };\n}\n\nfunction _lastDefined(args) {\n  for (var i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n\n  return undefined;\n}\n\nfunction _mergeArrays(parts) {\n  var result = [];\n  parts.forEach(function (part) {\n    return part && result.push.apply(result, _toConsumableArray(part));\n  });\n  return result;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ɵ0$1 = {};\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\n\nvar platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [{\n  provide: COMPILER_OPTIONS,\n  useValue: ɵ0$1,\n  multi: true\n}, {\n  provide: CompilerFactory,\n  useClass: JitCompilerFactory,\n  deps: [COMPILER_OPTIONS]\n}]);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ResourceLoaderImpl = /*#__PURE__*/function (_ResourceLoader) {\n  _inherits(ResourceLoaderImpl, _ResourceLoader);\n\n  var _super = _createSuper(ResourceLoaderImpl);\n\n  function ResourceLoaderImpl() {\n    _classCallCheck(this, ResourceLoaderImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceLoaderImpl, [{\n    key: \"get\",\n    value: function get(url) {\n      var resolve;\n      var reject;\n      var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n      });\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'text';\n\n      xhr.onload = function () {\n        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n        // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n        // by IE10)\n        var response = xhr.response || xhr.responseText; // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\n        var status = xhr.status === 1223 ? 204 : xhr.status; // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status <= 300) {\n          resolve(response);\n        } else {\n          reject(\"Failed to load \".concat(url));\n        }\n      };\n\n      xhr.onerror = function () {\n        reject(\"Failed to load \".concat(url));\n      };\n\n      xhr.send();\n      return promise;\n    }\n  }]);\n\n  return ResourceLoaderImpl;\n}(ResourceLoader);\n\nResourceLoaderImpl.ɵfac = function ResourceLoaderImpl_Factory(t) {\n  return ɵResourceLoaderImpl_BaseFactory(t || ResourceLoaderImpl);\n};\n\nResourceLoaderImpl.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ResourceLoaderImpl,\n  factory: ResourceLoaderImpl.ɵfac\n});\nvar ɵResourceLoaderImpl_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(ResourceLoaderImpl);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResourceLoaderImpl, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ɵ0$2 = {\n  providers: [{\n    provide: ResourceLoader,\n    useClass: ResourceLoaderImpl,\n    deps: []\n  }]\n},\n    ɵ1$1 = ɵPLATFORM_BROWSER_ID;\n/**\n * @publicApi\n */\n\nvar INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, {\n  provide: COMPILER_OPTIONS,\n  useValue: ɵ0$2,\n  multi: true\n}, {\n  provide: PLATFORM_ID,\n  useValue: ɵ1$1\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\n\nvar CachedResourceLoader = /*#__PURE__*/function (_ResourceLoader2) {\n  _inherits(CachedResourceLoader, _ResourceLoader2);\n\n  var _super2 = _createSuper(CachedResourceLoader);\n\n  function CachedResourceLoader() {\n    var _this;\n\n    _classCallCheck(this, CachedResourceLoader);\n\n    _this = _super2.call(this);\n    _this._cache = ɵglobal.$templateCache;\n\n    if (_this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n\n    return _this;\n  }\n\n  _createClass(CachedResourceLoader, [{\n    key: \"get\",\n    value: function get(url) {\n      if (this._cache.hasOwnProperty(url)) {\n        return Promise.resolve(this._cache[url]);\n      } else {\n        return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n      }\n    }\n  }]);\n\n  return CachedResourceLoader;\n}(ResourceLoader);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('10.1.4');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\nvar RESOURCE_CACHE_PROVIDER = [{\n  provide: ResourceLoader,\n  useClass: CachedResourceLoader,\n  deps: []\n}];\n/**\n * @publicApi\n */\n\nvar platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, ResourceLoaderImpl as ɵResourceLoaderImpl, CachedResourceLoader as ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a, platformCoreDynamic as ɵplatformCoreDynamic };","map":{"version":3,"sources":["../../../../../../packages/platform-browser-dynamic/src/compiler_reflector.ts","../../../../../../packages/platform-browser-dynamic/src/compiler_factory.ts","../../../../../../packages/platform-browser-dynamic/src/platform_core_dynamic.ts","../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts","../../../../../../packages/platform-browser-dynamic/src/platform_providers.ts","../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts","../../../../../../packages/platform-browser-dynamic/src/private_export.ts","../../../../../../packages/platform-browser-dynamic/src/version.ts","../../../../../../packages/platform-browser-dynamic/src/platform-browser-dynamic.ts","../../../../../../packages/platform-browser-dynamic/public_api.ts","../../../../../../packages/platform-browser-dynamic/index.ts","../../../../../../packages/platform-browser-dynamic/platform-browser-dynamic.ts"],"names":["ReflectionCapabilities","stringify","Console","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_BROWSER_ID","global"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, ExternalReference, getUrlScheme, Identifiers, syntaxError} from '@angular/compiler';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, QueryList, Renderer2, SecurityContext, TemplateRef, TRANSLATIONS_FORMAT, ViewContainerRef, ViewEncapsulation, ɵand, ɵccf, ɵcmf, ɵCodegenComponentFactoryResolver, ɵcrt, ɵdid, ɵeld, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵReflectionCapabilities as ReflectionCapabilities, ɵregisterModuleFactory, ɵstringify as stringify, ɵted, ɵunv, ɵvid} from '@angular/core';\n\nexport const MODULE_SUFFIX = '';\nconst builtinExternalReferences = createBuiltinExternalReferencesMap();\n\nexport class JitReflector implements CompileReflector {\n  private reflectionCapabilities = new ReflectionCapabilities();\n\n  componentModuleUrl(type: any, cmpMetadata: Component): string {\n    const moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(\n          `moduleId should be a string in \"${\n              stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n          `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${stringify(type)}`;\n  }\n  parameters(typeOrFunc: /*Type*/ any): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n  tryAnnotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.annotations(typeOrFunc);\n  }\n  annotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n  shallowAnnotations(typeOrFunc: /*Type*/ any): any[] {\n    throw new Error('Not supported in JIT mode');\n  }\n  propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n  guards(type: any): {[key: string]: any} {\n    return this.reflectionCapabilities.guards(type);\n  }\n  resolveExternalReference(ref: ExternalReference): any {\n    return builtinExternalReferences.get(ref) || ref.runtime;\n  }\n}\n\n\nfunction createBuiltinExternalReferencesMap() {\n  const map = new Map<ExternalReference, any>();\n  map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n  map.set(Identifiers.Renderer2, Renderer2);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(Identifiers.createModuleFactory, ɵcmf);\n  map.set(Identifiers.moduleDef, ɵmod);\n  map.set(Identifiers.moduleProviderDef, ɵmpd);\n  map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n  map.set(Identifiers.Injector, Injector);\n  map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n  map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n  map.set(Identifiers.SecurityContext, SecurityContext);\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n  map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.unwrapValue, ɵunv);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileMetadataResolver, CompilerConfig, CompileReflector, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, ElementSchemaRegistry, HtmlParser, I18NHtmlParser, JitCompiler, JitEvaluator, JitSummaryResolver, Lexer, NgModuleCompiler, NgModuleResolver, Parser, PipeResolver, ProviderMeta, ResourceLoader, StaticSymbolCache, StyleCompiler, SummaryResolver, TemplateParser, UrlResolver, ViewCompiler} from '@angular/compiler';\nimport {Compiler, CompilerFactory, CompilerOptions, ComponentFactory, Inject, InjectionToken, Injector, isDevMode, MissingTranslationStrategy, ModuleWithComponentFactories, NgModuleFactory, Optional, PACKAGE_ROOT_URL, StaticProvider, TRANSLATIONS, TRANSLATIONS_FORMAT, Type, ViewEncapsulation, ɵConsole as Console} from '@angular/core';\n\nimport {JitReflector} from './compiler_reflector';\n\nexport const ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\n\nconst _NO_RESOURCE_LOADER: ResourceLoader = {\n  get(url: string): Promise<string> {\n    throw new Error(\n        `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);\n  }\n};\n\nconst baseHtmlParser = new InjectionToken('HtmlParser');\n\nexport class CompilerImpl implements Compiler {\n  private _delegate: JitCompiler;\n  public readonly injector: Injector;\n  constructor(\n      injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      templateParser: TemplateParser, styleCompiler: StyleCompiler, viewCompiler: ViewCompiler,\n      ngModuleCompiler: NgModuleCompiler, summaryResolver: SummaryResolver<Type<any>>,\n      compileReflector: CompileReflector, jitEvaluator: JitEvaluator,\n      compilerConfig: CompilerConfig, console: Console) {\n    this._delegate = new JitCompiler(\n        _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler,\n        summaryResolver, compileReflector, jitEvaluator, compilerConfig, console,\n        this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n\n  private getExtraNgModuleProviders() {\n    return [this._metadataResolver.getProviderMetadata(\n        new ProviderMeta(Compiler, {useValue: this}))];\n  }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType) as NgModuleFactory<T>;\n  }\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType) as Promise<NgModuleFactory<T>>;\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    return {\n      ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n      componentFactories: result.componentFactories as ComponentFactory<any>[],\n    };\n  }\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n        .then((result) => ({\n                ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n                componentFactories: result.componentFactories as ComponentFactory<any>[],\n              }));\n  }\n  loadAotSummaries(summaries: () => any[]) {\n    this._delegate.loadAotSummaries(summaries);\n  }\n  hasAotSummary(ref: Type<any>): boolean {\n    return this._delegate.hasAotSummary(ref);\n  }\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    return this._delegate.getComponentFactory(component) as ComponentFactory<T>;\n  }\n  clearCache(): void {\n    this._delegate.clearCache();\n  }\n  clearCacheFor(type: Type<any>) {\n    this._delegate.clearCacheFor(type);\n  }\n  getModuleId(moduleType: Type<any>): string|undefined {\n    const meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n    return meta && meta.id || undefined;\n  }\n}\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nconst COMPILER_PROVIDERS__PRE_R3__ = <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: I18NHtmlParser,\n    useFactory:\n        (parser: HtmlParser, translations: string|null, format: string, config: CompilerConfig,\n         console: Console) => {\n          translations = translations || '';\n          const missingTranslation =\n              translations ? config.missingTranslation! : MissingTranslationStrategy.Ignore;\n          return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser,\n    deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, Console]\n  },\n  {provide: JitEvaluator, useClass: JitEvaluator, deps: []},\n  {provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  {\n    provide: CompileMetadataResolver,\n    deps: [\n      CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver,\n      SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, Console,\n      [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]\n    ]\n  },\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  {provide: StyleCompiler, deps: [UrlResolver]},\n  {provide: ViewCompiler, deps: [CompileReflector]},\n  {provide: NgModuleCompiler, deps: [CompileReflector]},\n  {provide: CompilerConfig, useValue: new CompilerConfig()},\n  {\n    provide: Compiler,\n    useClass: CompilerImpl,\n    deps: [\n      Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler,\n      NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, Console\n    ]\n  },\n  {provide: DomElementSchemaRegistry, deps: []},\n  {provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  {provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  {provide: DirectiveResolver, deps: [CompileReflector]},\n  {provide: PipeResolver, deps: [CompileReflector]},\n  {provide: NgModuleResolver, deps: [CompileReflector]},\n];\n\nexport const COMPILER_PROVIDERS__POST_R3__ =\n    <StaticProvider[]>[{provide: Compiler, useFactory: () => new Compiler()}];\nexport const COMPILER_PROVIDERS = COMPILER_PROVIDERS__PRE_R3__;\n/**\n * @publicApi\n */\nexport class JitCompilerFactory implements CompilerFactory {\n  private _defaultOptions: CompilerOptions[];\n\n  /* @internal */\n  constructor(defaultOptions: CompilerOptions[]) {\n    const compilerOptions: CompilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n  createCompiler(options: CompilerOptions[] = []): Compiler {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces,\n          });\n        },\n        deps: []\n      },\n      opts.providers!\n    ]);\n    return injector.get(Compiler);\n  }\n}\n\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers!)),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n  };\n}\n\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  const result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, CompilerFactory, createPlatformFactory, platformCore, PlatformRef, StaticProvider} from '@angular/core';\n\nimport {JitCompilerFactory} from './compiler_factory';\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nexport const platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\n]);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class ResourceLoaderImpl extends ResourceLoader {\n  get(url: string): Promise<string> {\n    let resolve: (result: any) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise<string>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText;\n\n      // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n      let status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() {\n      reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return promise;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {ResourceLoader} from '@angular/compiler';\nimport {COMPILER_OPTIONS, PLATFORM_ID, StaticProvider} from '@angular/core';\n\nimport {ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS as INTERNAL_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser';\n\nimport {ResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\n/**\n * @publicApi\n */\nexport const INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: StaticProvider[] = [\n  INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n  {\n    provide: COMPILER_OPTIONS,\n    useValue: {providers: [{provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: []}]},\n    multi: true\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {ɵglobal as global} from '@angular/core';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl} from './compiler_factory';\nexport {platformCoreDynamic as ɵplatformCoreDynamic} from './platform_core_dynamic';\nexport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nexport {ResourceLoaderImpl as ɵResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('10.1.4');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {CompilerFactory, createPlatformFactory, platformCore, PlatformRef, Provider, StaticProvider} from '@angular/core';\n\nimport {platformCoreDynamic} from './platform_core_dynamic';\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nimport {CachedResourceLoader} from './resource_loader/resource_loader_cache';\n\nexport * from './private_export';\nexport {VERSION} from './version';\nexport {JitCompilerFactory} from './compiler_factory';\n\n/**\n * @publicApi\n */\nexport const RESOURCE_CACHE_PROVIDER: Provider[] =\n    [{provide: ResourceLoader, useClass: CachedResourceLoader, deps: []}];\n\n/**\n * @publicApi\n */\nexport const platformBrowserDynamic = createPlatformFactory(\n    platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/platform-browser-dynamic';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CachedResourceLoader as ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a} from './src/resource_loader/resource_loader_cache';"]},"metadata":{},"sourceType":"module"}