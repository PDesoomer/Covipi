{"ast":null,"code":"import _createClass from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/azarog/Documents/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport var SubjectSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SubjectSubscriber, _Subscriber);\n\n  var _super = _createSuper(SubjectSubscriber);\n\n  function SubjectSubscriber(destination) {\n    var _this;\n\n    _classCallCheck(this, SubjectSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    return _this;\n  }\n\n  return SubjectSubscriber;\n}(Subscriber);\nexport var Subject = /*#__PURE__*/function (_Observable) {\n  _inherits(Subject, _Observable);\n\n  var _super2 = _createSuper(Subject);\n\n  function Subject() {\n    var _this2;\n\n    _classCallCheck(this, Subject);\n\n    _this2 = _super2.call(this);\n    _this2.observers = [];\n    _this2.closed = false;\n    _this2.isStopped = false;\n    _this2.hasError = false;\n    _this2.thrownError = null;\n    return _this2;\n  }\n\n  _createClass(Subject, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return new SubjectSubscriber(this);\n    }\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      var subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      if (!this.isStopped) {\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n\n        for (var i = 0; i < len; i++) {\n          copy[i].next(value);\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      this.hasError = true;\n      this.thrownError = err;\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n\n      for (var i = 0; i < len; i++) {\n        copy[i].error(err);\n      }\n\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n\n      for (var i = 0; i < len; i++) {\n        copy[i].complete();\n      }\n\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.isStopped = true;\n      this.closed = true;\n      this.observers = null;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else {\n        return _get(_getPrototypeOf(Subject.prototype), \"_trySubscribe\", this).call(this, subscriber);\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else if (this.hasError) {\n        subscriber.error(this.thrownError);\n        return Subscription.EMPTY;\n      } else if (this.isStopped) {\n        subscriber.complete();\n        return Subscription.EMPTY;\n      } else {\n        this.observers.push(subscriber);\n        return new SubjectSubscription(this, subscriber);\n      }\n    }\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      var observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }]);\n\n  return Subject;\n}(Observable);\n\nSubject.create = function (destination, source) {\n  return new AnonymousSubject(destination, source);\n};\n\nexport var AnonymousSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AnonymousSubject, _Subject);\n\n  var _super3 = _createSuper(AnonymousSubject);\n\n  function AnonymousSubject(destination, source) {\n    var _this3;\n\n    _classCallCheck(this, AnonymousSubject);\n\n    _this3 = _super3.call(this);\n    _this3.destination = destination;\n    _this3.source = source;\n    return _this3;\n  }\n\n  _createClass(AnonymousSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var destination = this.destination;\n\n      if (destination && destination.next) {\n        destination.next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var destination = this.destination;\n\n      if (destination && destination.error) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var destination = this.destination;\n\n      if (destination && destination.complete) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var source = this.source;\n\n      if (source) {\n        return this.source.subscribe(subscriber);\n      } else {\n        return Subscription.EMPTY;\n      }\n    }\n  }]);\n\n  return AnonymousSubject;\n}(Subject);","map":{"version":3,"sources":["../../src/internal/Subject.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map"]},"metadata":{},"sourceType":"module"}