{"ast":null,"code":"// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n//     You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//     See the License for the specific language governing permissions and\n// limitations under the License.\n!function () {\n  var a = {},\n      b = {};\n  !function (a, b) {\n    function c(a) {\n      if (\"number\" == typeof a) return a;\n      var b = {};\n\n      for (var c in a) {\n        b[c] = a[c];\n      }\n\n      return b;\n    }\n\n    function d() {\n      this._delay = 0, this._endDelay = 0, this._fill = \"none\", this._iterationStart = 0, this._iterations = 1, this._duration = 0, this._playbackRate = 1, this._direction = \"normal\", this._easing = \"linear\", this._easingFunction = x;\n    }\n\n    function e() {\n      return a.isDeprecated(\"Invalid timing inputs\", \"2016-03-02\", \"TypeError exceptions will be thrown instead.\", !0);\n    }\n\n    function f(b, c, e) {\n      var f = new d();\n      return c && (f.fill = \"both\", f.duration = \"auto\"), \"number\" != typeof b || isNaN(b) ? void 0 !== b && Object.getOwnPropertyNames(b).forEach(function (c) {\n        if (\"auto\" != b[c]) {\n          if ((\"number\" == typeof f[c] || \"duration\" == c) && (\"number\" != typeof b[c] || isNaN(b[c]))) return;\n          if (\"fill\" == c && -1 == v.indexOf(b[c])) return;\n          if (\"direction\" == c && -1 == w.indexOf(b[c])) return;\n          if (\"playbackRate\" == c && 1 !== b[c] && a.isDeprecated(\"AnimationEffectTiming.playbackRate\", \"2014-11-28\", \"Use Animation.playbackRate instead.\")) return;\n          f[c] = b[c];\n        }\n      }) : f.duration = b, f;\n    }\n\n    function g(a) {\n      return \"number\" == typeof a && (a = isNaN(a) ? {\n        duration: 0\n      } : {\n        duration: a\n      }), a;\n    }\n\n    function h(b, c) {\n      return b = a.numericTimingToObject(b), f(b, c);\n    }\n\n    function i(a, b, c, d) {\n      return a < 0 || a > 1 || c < 0 || c > 1 ? x : function (e) {\n        function f(a, b, c) {\n          return 3 * a * (1 - c) * (1 - c) * c + 3 * b * (1 - c) * c * c + c * c * c;\n        }\n\n        if (e <= 0) {\n          var g = 0;\n          return a > 0 ? g = b / a : !b && c > 0 && (g = d / c), g * e;\n        }\n\n        if (e >= 1) {\n          var h = 0;\n          return c < 1 ? h = (d - 1) / (c - 1) : 1 == c && a < 1 && (h = (b - 1) / (a - 1)), 1 + h * (e - 1);\n        }\n\n        for (var i = 0, j = 1; i < j;) {\n          var k = (i + j) / 2,\n              l = f(a, c, k);\n          if (Math.abs(e - l) < 1e-5) return f(b, d, k);\n          l < e ? i = k : j = k;\n        }\n\n        return f(b, d, k);\n      };\n    }\n\n    function j(a, b) {\n      return function (c) {\n        if (c >= 1) return 1;\n        var d = 1 / a;\n        return (c += b * d) - c % d;\n      };\n    }\n\n    function k(a) {\n      C || (C = document.createElement(\"div\").style), C.animationTimingFunction = \"\", C.animationTimingFunction = a;\n      var b = C.animationTimingFunction;\n      if (\"\" == b && e()) throw new TypeError(a + \" is not a valid value for easing\");\n      return b;\n    }\n\n    function l(a) {\n      if (\"linear\" == a) return x;\n      var b = E.exec(a);\n      if (b) return i.apply(this, b.slice(1).map(Number));\n      var c = F.exec(a);\n      if (c) return j(Number(c[1]), A);\n      var d = G.exec(a);\n      return d ? j(Number(d[1]), {\n        start: y,\n        middle: z,\n        end: A\n      }[d[2]]) : B[a] || x;\n    }\n\n    function m(a) {\n      return Math.abs(n(a) / a.playbackRate);\n    }\n\n    function n(a) {\n      return 0 === a.duration || 0 === a.iterations ? 0 : a.duration * a.iterations;\n    }\n\n    function o(a, b, c) {\n      if (null == b) return H;\n      var d = c.delay + a + c.endDelay;\n      return b < Math.min(c.delay, d) ? I : b >= Math.min(c.delay + a, d) ? J : K;\n    }\n\n    function p(a, b, c, d, e) {\n      switch (d) {\n        case I:\n          return \"backwards\" == b || \"both\" == b ? 0 : null;\n\n        case K:\n          return c - e;\n\n        case J:\n          return \"forwards\" == b || \"both\" == b ? a : null;\n\n        case H:\n          return null;\n      }\n    }\n\n    function q(a, b, c, d, e) {\n      var f = e;\n      return 0 === a ? b !== I && (f += c) : f += d / a, f;\n    }\n\n    function r(a, b, c, d, e, f) {\n      var g = a === 1 / 0 ? b % 1 : a % 1;\n      return 0 !== g || c !== J || 0 === d || 0 === e && 0 !== f || (g = 1), g;\n    }\n\n    function s(a, b, c, d) {\n      return a === J && b === 1 / 0 ? 1 / 0 : 1 === c ? Math.floor(d) - 1 : Math.floor(d);\n    }\n\n    function t(a, b, c) {\n      var d = a;\n\n      if (\"normal\" !== a && \"reverse\" !== a) {\n        var e = b;\n        \"alternate-reverse\" === a && (e += 1), d = \"normal\", e !== 1 / 0 && e % 2 != 0 && (d = \"reverse\");\n      }\n\n      return \"normal\" === d ? c : 1 - c;\n    }\n\n    function u(a, b, c) {\n      var d = o(a, b, c),\n          e = p(a, c.fill, b, d, c.delay);\n      if (null === e) return null;\n      var f = q(c.duration, d, c.iterations, e, c.iterationStart),\n          g = r(f, c.iterationStart, d, c.iterations, e, c.duration),\n          h = s(d, c.iterations, g, f),\n          i = t(c.direction, h, g);\n      return c._easingFunction(i);\n    }\n\n    var v = \"backwards|forwards|both|none\".split(\"|\"),\n        w = \"reverse|alternate|alternate-reverse\".split(\"|\"),\n        x = function x(a) {\n      return a;\n    };\n\n    d.prototype = {\n      _setMember: function _setMember(b, c) {\n        this[\"_\" + b] = c, this._effect && (this._effect._timingInput[b] = c, this._effect._timing = a.normalizeTimingInput(this._effect._timingInput), this._effect.activeDuration = a.calculateActiveDuration(this._effect._timing), this._effect._animation && this._effect._animation._rebuildUnderlyingAnimation());\n      },\n\n      get playbackRate() {\n        return this._playbackRate;\n      },\n\n      set delay(a) {\n        this._setMember(\"delay\", a);\n      },\n\n      get delay() {\n        return this._delay;\n      },\n\n      set endDelay(a) {\n        this._setMember(\"endDelay\", a);\n      },\n\n      get endDelay() {\n        return this._endDelay;\n      },\n\n      set fill(a) {\n        this._setMember(\"fill\", a);\n      },\n\n      get fill() {\n        return this._fill;\n      },\n\n      set iterationStart(a) {\n        if ((isNaN(a) || a < 0) && e()) throw new TypeError(\"iterationStart must be a non-negative number, received: \" + a);\n\n        this._setMember(\"iterationStart\", a);\n      },\n\n      get iterationStart() {\n        return this._iterationStart;\n      },\n\n      set duration(a) {\n        if (\"auto\" != a && (isNaN(a) || a < 0) && e()) throw new TypeError(\"duration must be non-negative or auto, received: \" + a);\n\n        this._setMember(\"duration\", a);\n      },\n\n      get duration() {\n        return this._duration;\n      },\n\n      set direction(a) {\n        this._setMember(\"direction\", a);\n      },\n\n      get direction() {\n        return this._direction;\n      },\n\n      set easing(a) {\n        this._easingFunction = l(k(a)), this._setMember(\"easing\", a);\n      },\n\n      get easing() {\n        return this._easing;\n      },\n\n      set iterations(a) {\n        if ((isNaN(a) || a < 0) && e()) throw new TypeError(\"iterations must be non-negative, received: \" + a);\n\n        this._setMember(\"iterations\", a);\n      },\n\n      get iterations() {\n        return this._iterations;\n      }\n\n    };\n    var y = 1,\n        z = .5,\n        A = 0,\n        B = {\n      ease: i(.25, .1, .25, 1),\n      \"ease-in\": i(.42, 0, 1, 1),\n      \"ease-out\": i(0, 0, .58, 1),\n      \"ease-in-out\": i(.42, 0, .58, 1),\n      \"step-start\": j(1, y),\n      \"step-middle\": j(1, z),\n      \"step-end\": j(1, A)\n    },\n        C = null,\n        D = \"\\\\s*(-?\\\\d+\\\\.?\\\\d*|-?\\\\.\\\\d+)\\\\s*\",\n        E = new RegExp(\"cubic-bezier\\\\(\" + D + \",\" + D + \",\" + D + \",\" + D + \"\\\\)\"),\n        F = /steps\\(\\s*(\\d+)\\s*\\)/,\n        G = /steps\\(\\s*(\\d+)\\s*,\\s*(start|middle|end)\\s*\\)/,\n        H = 0,\n        I = 1,\n        J = 2,\n        K = 3;\n    a.cloneTimingInput = c, a.makeTiming = f, a.numericTimingToObject = g, a.normalizeTimingInput = h, a.calculateActiveDuration = m, a.calculateIterationProgress = u, a.calculatePhase = o, a.normalizeEasing = k, a.parseEasingFunction = l;\n  }(a), function (a, b) {\n    function c(a, b) {\n      return a in k ? k[a][b] || b : b;\n    }\n\n    function d(a) {\n      return \"display\" === a || 0 === a.lastIndexOf(\"animation\", 0) || 0 === a.lastIndexOf(\"transition\", 0);\n    }\n\n    function e(a, b, e) {\n      if (!d(a)) {\n        var f = h[a];\n\n        if (f) {\n          i.style[a] = b;\n\n          for (var g in f) {\n            var j = f[g],\n                k = i.style[j];\n            e[j] = c(j, k);\n          }\n        } else e[a] = c(a, b);\n      }\n    }\n\n    function f(a) {\n      var b = [];\n\n      for (var c in a) {\n        if (!(c in [\"easing\", \"offset\", \"composite\"])) {\n          var d = a[c];\n          Array.isArray(d) || (d = [d]);\n\n          for (var e, f = d.length, g = 0; g < f; g++) {\n            e = {}, e.offset = \"offset\" in a ? a.offset : 1 == f ? 1 : g / (f - 1), \"easing\" in a && (e.easing = a.easing), \"composite\" in a && (e.composite = a.composite), e[c] = d[g], b.push(e);\n          }\n        }\n      }\n\n      return b.sort(function (a, b) {\n        return a.offset - b.offset;\n      }), b;\n    }\n\n    function g(b) {\n      function c() {\n        var a = d.length;\n        null == d[a - 1].offset && (d[a - 1].offset = 1), a > 1 && null == d[0].offset && (d[0].offset = 0);\n\n        for (var b = 0, c = d[0].offset, e = 1; e < a; e++) {\n          var f = d[e].offset;\n\n          if (null != f) {\n            for (var g = 1; g < e - b; g++) {\n              d[b + g].offset = c + (f - c) * g / (e - b);\n            }\n\n            b = e, c = f;\n          }\n        }\n      }\n\n      if (null == b) return [];\n      window.Symbol && Symbol.iterator && Array.prototype.from && b[Symbol.iterator] && (b = Array.from(b)), Array.isArray(b) || (b = f(b));\n\n      for (var d = b.map(function (b) {\n        var c = {};\n\n        for (var d in b) {\n          var f = b[d];\n\n          if (\"offset\" == d) {\n            if (null != f) {\n              if (f = Number(f), !isFinite(f)) throw new TypeError(\"Keyframe offsets must be numbers.\");\n              if (f < 0 || f > 1) throw new TypeError(\"Keyframe offsets must be between 0 and 1.\");\n            }\n          } else if (\"composite\" == d) {\n            if (\"add\" == f || \"accumulate\" == f) throw {\n              type: DOMException.NOT_SUPPORTED_ERR,\n              name: \"NotSupportedError\",\n              message: \"add compositing is not supported\"\n            };\n            if (\"replace\" != f) throw new TypeError(\"Invalid composite mode \" + f + \".\");\n          } else f = \"easing\" == d ? a.normalizeEasing(f) : \"\" + f;\n\n          e(d, f, c);\n        }\n\n        return void 0 == c.offset && (c.offset = null), void 0 == c.easing && (c.easing = \"linear\"), c;\n      }), g = !0, h = -1 / 0, i = 0; i < d.length; i++) {\n        var j = d[i].offset;\n\n        if (null != j) {\n          if (j < h) throw new TypeError(\"Keyframes are not loosely sorted by offset. Sort or specify offsets.\");\n          h = j;\n        } else g = !1;\n      }\n\n      return d = d.filter(function (a) {\n        return a.offset >= 0 && a.offset <= 1;\n      }), g || c(), d;\n    }\n\n    var h = {\n      background: [\"backgroundImage\", \"backgroundPosition\", \"backgroundSize\", \"backgroundRepeat\", \"backgroundAttachment\", \"backgroundOrigin\", \"backgroundClip\", \"backgroundColor\"],\n      border: [\"borderTopColor\", \"borderTopStyle\", \"borderTopWidth\", \"borderRightColor\", \"borderRightStyle\", \"borderRightWidth\", \"borderBottomColor\", \"borderBottomStyle\", \"borderBottomWidth\", \"borderLeftColor\", \"borderLeftStyle\", \"borderLeftWidth\"],\n      borderBottom: [\"borderBottomWidth\", \"borderBottomStyle\", \"borderBottomColor\"],\n      borderColor: [\"borderTopColor\", \"borderRightColor\", \"borderBottomColor\", \"borderLeftColor\"],\n      borderLeft: [\"borderLeftWidth\", \"borderLeftStyle\", \"borderLeftColor\"],\n      borderRadius: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\"],\n      borderRight: [\"borderRightWidth\", \"borderRightStyle\", \"borderRightColor\"],\n      borderTop: [\"borderTopWidth\", \"borderTopStyle\", \"borderTopColor\"],\n      borderWidth: [\"borderTopWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderLeftWidth\"],\n      flex: [\"flexGrow\", \"flexShrink\", \"flexBasis\"],\n      font: [\"fontFamily\", \"fontSize\", \"fontStyle\", \"fontVariant\", \"fontWeight\", \"lineHeight\"],\n      margin: [\"marginTop\", \"marginRight\", \"marginBottom\", \"marginLeft\"],\n      outline: [\"outlineColor\", \"outlineStyle\", \"outlineWidth\"],\n      padding: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"]\n    },\n        i = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\"),\n        j = {\n      thin: \"1px\",\n      medium: \"3px\",\n      thick: \"5px\"\n    },\n        k = {\n      borderBottomWidth: j,\n      borderLeftWidth: j,\n      borderRightWidth: j,\n      borderTopWidth: j,\n      fontSize: {\n        \"xx-small\": \"60%\",\n        \"x-small\": \"75%\",\n        small: \"89%\",\n        medium: \"100%\",\n        large: \"120%\",\n        \"x-large\": \"150%\",\n        \"xx-large\": \"200%\"\n      },\n      fontWeight: {\n        normal: \"400\",\n        bold: \"700\"\n      },\n      outlineWidth: j,\n      textShadow: {\n        none: \"0px 0px 0px transparent\"\n      },\n      boxShadow: {\n        none: \"0px 0px 0px 0px transparent\"\n      }\n    };\n    a.convertToArrayForm = f, a.normalizeKeyframes = g;\n  }(a), function (a) {\n    var b = {};\n    a.isDeprecated = function (a, c, d, e) {\n      var f = e ? \"are\" : \"is\",\n          g = new Date(),\n          h = new Date(c);\n      return h.setMonth(h.getMonth() + 3), !(g < h && (a in b || console.warn(\"Web Animations: \" + a + \" \" + f + \" deprecated and will stop working on \" + h.toDateString() + \". \" + d), b[a] = !0, 1));\n    }, a.deprecated = function (b, c, d, e) {\n      var f = e ? \"are\" : \"is\";\n      if (a.isDeprecated(b, c, d, e)) throw new Error(b + \" \" + f + \" no longer supported. \" + d);\n    };\n  }(a), function () {\n    if (document.documentElement.animate) {\n      var c = document.documentElement.animate([], 0),\n          d = !0;\n      if (c && (d = !1, \"play|currentTime|pause|reverse|playbackRate|cancel|finish|startTime|playState\".split(\"|\").forEach(function (a) {\n        void 0 === c[a] && (d = !0);\n      })), !d) return;\n    }\n\n    !function (a, b, c) {\n      function d(a) {\n        for (var b = {}, c = 0; c < a.length; c++) {\n          for (var d in a[c]) {\n            if (\"offset\" != d && \"easing\" != d && \"composite\" != d) {\n              var e = {\n                offset: a[c].offset,\n                easing: a[c].easing,\n                value: a[c][d]\n              };\n              b[d] = b[d] || [], b[d].push(e);\n            }\n          }\n        }\n\n        for (var f in b) {\n          var g = b[f];\n          if (0 != g[0].offset || 1 != g[g.length - 1].offset) throw {\n            type: DOMException.NOT_SUPPORTED_ERR,\n            name: \"NotSupportedError\",\n            message: \"Partial keyframes are not supported\"\n          };\n        }\n\n        return b;\n      }\n\n      function e(c) {\n        var d = [];\n\n        for (var e in c) {\n          for (var f = c[e], g = 0; g < f.length - 1; g++) {\n            var h = g,\n                i = g + 1,\n                j = f[h].offset,\n                k = f[i].offset,\n                l = j,\n                m = k;\n            0 == g && (l = -1 / 0, 0 == k && (i = h)), g == f.length - 2 && (m = 1 / 0, 1 == j && (h = i)), d.push({\n              applyFrom: l,\n              applyTo: m,\n              startOffset: f[h].offset,\n              endOffset: f[i].offset,\n              easingFunction: a.parseEasingFunction(f[h].easing),\n              property: e,\n              interpolation: b.propertyInterpolation(e, f[h].value, f[i].value)\n            });\n          }\n        }\n\n        return d.sort(function (a, b) {\n          return a.startOffset - b.startOffset;\n        }), d;\n      }\n\n      b.convertEffectInput = function (c) {\n        var f = a.normalizeKeyframes(c),\n            g = d(f),\n            h = e(g);\n        return function (a, c) {\n          if (null != c) h.filter(function (a) {\n            return c >= a.applyFrom && c < a.applyTo;\n          }).forEach(function (d) {\n            var e = c - d.startOffset,\n                f = d.endOffset - d.startOffset,\n                g = 0 == f ? 0 : d.easingFunction(e / f);\n            b.apply(a, d.property, d.interpolation(g));\n          });else for (var d in g) {\n            \"offset\" != d && \"easing\" != d && \"composite\" != d && b.clear(a, d);\n          }\n        };\n      };\n    }(a, b), function (a, b, c) {\n      function d(a) {\n        return a.replace(/-(.)/g, function (a, b) {\n          return b.toUpperCase();\n        });\n      }\n\n      function e(a, b, c) {\n        h[c] = h[c] || [], h[c].push([a, b]);\n      }\n\n      function f(a, b, c) {\n        for (var f = 0; f < c.length; f++) {\n          e(a, b, d(c[f]));\n        }\n      }\n\n      function g(c, e, f) {\n        var g = c;\n        /-/.test(c) && !a.isDeprecated(\"Hyphenated property names\", \"2016-03-22\", \"Use camelCase instead.\", !0) && (g = d(c)), \"initial\" != e && \"initial\" != f || (\"initial\" == e && (e = i[g]), \"initial\" == f && (f = i[g]));\n\n        for (var j = e == f ? [] : h[g], k = 0; j && k < j.length; k++) {\n          var l = j[k][0](e),\n              m = j[k][0](f);\n\n          if (void 0 !== l && void 0 !== m) {\n            var n = j[k][1](l, m);\n\n            if (n) {\n              var o = b.Interpolation.apply(null, n);\n              return function (a) {\n                return 0 == a ? e : 1 == a ? f : o(a);\n              };\n            }\n          }\n        }\n\n        return b.Interpolation(!1, !0, function (a) {\n          return a ? f : e;\n        });\n      }\n\n      var h = {};\n      b.addPropertiesHandler = f;\n      var i = {\n        backgroundColor: \"transparent\",\n        backgroundPosition: \"0% 0%\",\n        borderBottomColor: \"currentColor\",\n        borderBottomLeftRadius: \"0px\",\n        borderBottomRightRadius: \"0px\",\n        borderBottomWidth: \"3px\",\n        borderLeftColor: \"currentColor\",\n        borderLeftWidth: \"3px\",\n        borderRightColor: \"currentColor\",\n        borderRightWidth: \"3px\",\n        borderSpacing: \"2px\",\n        borderTopColor: \"currentColor\",\n        borderTopLeftRadius: \"0px\",\n        borderTopRightRadius: \"0px\",\n        borderTopWidth: \"3px\",\n        bottom: \"auto\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        color: \"black\",\n        fontSize: \"100%\",\n        fontWeight: \"400\",\n        height: \"auto\",\n        left: \"auto\",\n        letterSpacing: \"normal\",\n        lineHeight: \"120%\",\n        marginBottom: \"0px\",\n        marginLeft: \"0px\",\n        marginRight: \"0px\",\n        marginTop: \"0px\",\n        maxHeight: \"none\",\n        maxWidth: \"none\",\n        minHeight: \"0px\",\n        minWidth: \"0px\",\n        opacity: \"1.0\",\n        outlineColor: \"invert\",\n        outlineOffset: \"0px\",\n        outlineWidth: \"3px\",\n        paddingBottom: \"0px\",\n        paddingLeft: \"0px\",\n        paddingRight: \"0px\",\n        paddingTop: \"0px\",\n        right: \"auto\",\n        strokeDasharray: \"none\",\n        strokeDashoffset: \"0px\",\n        textIndent: \"0px\",\n        textShadow: \"0px 0px 0px transparent\",\n        top: \"auto\",\n        transform: \"\",\n        verticalAlign: \"0px\",\n        visibility: \"visible\",\n        width: \"auto\",\n        wordSpacing: \"normal\",\n        zIndex: \"auto\"\n      };\n      b.propertyInterpolation = g;\n    }(a, b), function (a, b, c) {\n      function d(b) {\n        var c = a.calculateActiveDuration(b),\n            d = function d(_d) {\n          return a.calculateIterationProgress(c, _d, b);\n        };\n\n        return d._totalDuration = b.delay + c + b.endDelay, d;\n      }\n\n      b.KeyframeEffect = function (c, e, f, g) {\n        var h,\n            i = d(a.normalizeTimingInput(f)),\n            j = b.convertEffectInput(e),\n            k = function k() {\n          j(c, h);\n        };\n\n        return k._update = function (a) {\n          return null !== (h = i(a));\n        }, k._clear = function () {\n          j(c, null);\n        }, k._hasSameTarget = function (a) {\n          return c === a;\n        }, k._target = c, k._totalDuration = i._totalDuration, k._id = g, k;\n      };\n    }(a, b), function (a, b) {\n      function c(a, b) {\n        return !(!b.namespaceURI || -1 == b.namespaceURI.indexOf(\"/svg\")) && (g in a || (a[g] = /Trident|MSIE|IEMobile|Edge|Android 4/i.test(a.navigator.userAgent)), a[g]);\n      }\n\n      function d(a, b, c) {\n        c.enumerable = !0, c.configurable = !0, Object.defineProperty(a, b, c);\n      }\n\n      function e(a) {\n        this._element = a, this._surrogateStyle = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\").style, this._style = a.style, this._length = 0, this._isAnimatedProperty = {}, this._updateSvgTransformAttr = c(window, a), this._savedTransformAttr = null;\n\n        for (var b = 0; b < this._style.length; b++) {\n          var d = this._style[b];\n          this._surrogateStyle[d] = this._style[d];\n        }\n\n        this._updateIndices();\n      }\n\n      function f(a) {\n        if (!a._webAnimationsPatchedStyle) {\n          var b = new e(a);\n\n          try {\n            d(a, \"style\", {\n              get: function get() {\n                return b;\n              }\n            });\n          } catch (b) {\n            a.style._set = function (b, c) {\n              a.style[b] = c;\n            }, a.style._clear = function (b) {\n              a.style[b] = \"\";\n            };\n          }\n\n          a._webAnimationsPatchedStyle = a.style;\n        }\n      }\n\n      var g = \"_webAnimationsUpdateSvgTransformAttr\",\n          h = {\n        cssText: 1,\n        length: 1,\n        parentRule: 1\n      },\n          i = {\n        getPropertyCSSValue: 1,\n        getPropertyPriority: 1,\n        getPropertyValue: 1,\n        item: 1,\n        removeProperty: 1,\n        setProperty: 1\n      },\n          j = {\n        removeProperty: 1,\n        setProperty: 1\n      };\n      e.prototype = {\n        get cssText() {\n          return this._surrogateStyle.cssText;\n        },\n\n        set cssText(a) {\n          for (var b = {}, c = 0; c < this._surrogateStyle.length; c++) {\n            b[this._surrogateStyle[c]] = !0;\n          }\n\n          this._surrogateStyle.cssText = a, this._updateIndices();\n\n          for (var c = 0; c < this._surrogateStyle.length; c++) {\n            b[this._surrogateStyle[c]] = !0;\n          }\n\n          for (var d in b) {\n            this._isAnimatedProperty[d] || this._style.setProperty(d, this._surrogateStyle.getPropertyValue(d));\n          }\n        },\n\n        get length() {\n          return this._surrogateStyle.length;\n        },\n\n        get parentRule() {\n          return this._style.parentRule;\n        },\n\n        _updateIndices: function _updateIndices() {\n          for (; this._length < this._surrogateStyle.length;) {\n            Object.defineProperty(this, this._length, {\n              configurable: !0,\n              enumerable: !1,\n              get: function (a) {\n                return function () {\n                  return this._surrogateStyle[a];\n                };\n              }(this._length)\n            }), this._length++;\n          }\n\n          for (; this._length > this._surrogateStyle.length;) {\n            this._length--, Object.defineProperty(this, this._length, {\n              configurable: !0,\n              enumerable: !1,\n              value: void 0\n            });\n          }\n        },\n        _set: function _set(b, c) {\n          this._style[b] = c, this._isAnimatedProperty[b] = !0, this._updateSvgTransformAttr && \"transform\" == a.unprefixedPropertyName(b) && (null == this._savedTransformAttr && (this._savedTransformAttr = this._element.getAttribute(\"transform\")), this._element.setAttribute(\"transform\", a.transformToSvgMatrix(c)));\n        },\n        _clear: function _clear(b) {\n          this._style[b] = this._surrogateStyle[b], this._updateSvgTransformAttr && \"transform\" == a.unprefixedPropertyName(b) && (this._savedTransformAttr ? this._element.setAttribute(\"transform\", this._savedTransformAttr) : this._element.removeAttribute(\"transform\"), this._savedTransformAttr = null), delete this._isAnimatedProperty[b];\n        }\n      };\n\n      for (var k in i) {\n        e.prototype[k] = function (a, b) {\n          return function () {\n            var c = this._surrogateStyle[a].apply(this._surrogateStyle, arguments);\n\n            return b && (this._isAnimatedProperty[arguments[0]] || this._style[a].apply(this._style, arguments), this._updateIndices()), c;\n          };\n        }(k, k in j);\n      }\n\n      for (var l in document.documentElement.style) {\n        l in h || l in i || function (a) {\n          d(e.prototype, a, {\n            get: function get() {\n              return this._surrogateStyle[a];\n            },\n            set: function set(b) {\n              this._surrogateStyle[a] = b, this._updateIndices(), this._isAnimatedProperty[a] || (this._style[a] = b);\n            }\n          });\n        }(l);\n      }\n\n      a.apply = function (b, c, d) {\n        f(b), b.style._set(a.propertyName(c), d);\n      }, a.clear = function (b, c) {\n        b._webAnimationsPatchedStyle && b.style._clear(a.propertyName(c));\n      };\n    }(b), function (a) {\n      window.Element.prototype.animate = function (b, c) {\n        var d = \"\";\n        return c && c.id && (d = c.id), a.timeline._play(a.KeyframeEffect(this, b, c, d));\n      };\n    }(b), function (a, b) {\n      function c(a, b, d) {\n        if (\"number\" == typeof a && \"number\" == typeof b) return a * (1 - d) + b * d;\n        if (\"boolean\" == typeof a && \"boolean\" == typeof b) return d < .5 ? a : b;\n\n        if (a.length == b.length) {\n          for (var e = [], f = 0; f < a.length; f++) {\n            e.push(c(a[f], b[f], d));\n          }\n\n          return e;\n        }\n\n        throw \"Mismatched interpolation arguments \" + a + \":\" + b;\n      }\n\n      a.Interpolation = function (a, b, d) {\n        return function (e) {\n          return d(c(a, b, e));\n        };\n      };\n    }(b), function (a, b) {\n      function c(a, b, c) {\n        return Math.max(Math.min(a, c), b);\n      }\n\n      function d(b, d, e) {\n        var f = a.dot(b, d);\n        f = c(f, -1, 1);\n        var g = [];\n        if (1 === f) g = b;else for (var h = Math.acos(f), i = 1 * Math.sin(e * h) / Math.sqrt(1 - f * f), j = 0; j < 4; j++) {\n          g.push(b[j] * (Math.cos(e * h) - f * i) + d[j] * i);\n        }\n        return g;\n      }\n\n      var e = function () {\n        function a(a, b) {\n          for (var c = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], d = 0; d < 4; d++) {\n            for (var e = 0; e < 4; e++) {\n              for (var f = 0; f < 4; f++) {\n                c[d][e] += b[d][f] * a[f][e];\n              }\n            }\n          }\n\n          return c;\n        }\n\n        function b(a) {\n          return 0 == a[0][2] && 0 == a[0][3] && 0 == a[1][2] && 0 == a[1][3] && 0 == a[2][0] && 0 == a[2][1] && 1 == a[2][2] && 0 == a[2][3] && 0 == a[3][2] && 1 == a[3][3];\n        }\n\n        function c(c, d, e, f, g) {\n          for (var h = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]], i = 0; i < 4; i++) {\n            h[i][3] = g[i];\n          }\n\n          for (var i = 0; i < 3; i++) {\n            for (var j = 0; j < 3; j++) {\n              h[3][i] += c[j] * h[j][i];\n            }\n          }\n\n          var k = f[0],\n              l = f[1],\n              m = f[2],\n              n = f[3],\n              o = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n          o[0][0] = 1 - 2 * (l * l + m * m), o[0][1] = 2 * (k * l - m * n), o[0][2] = 2 * (k * m + l * n), o[1][0] = 2 * (k * l + m * n), o[1][1] = 1 - 2 * (k * k + m * m), o[1][2] = 2 * (l * m - k * n), o[2][0] = 2 * (k * m - l * n), o[2][1] = 2 * (l * m + k * n), o[2][2] = 1 - 2 * (k * k + l * l), h = a(h, o);\n          var p = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n          e[2] && (p[2][1] = e[2], h = a(h, p)), e[1] && (p[2][1] = 0, p[2][0] = e[0], h = a(h, p)), e[0] && (p[2][0] = 0, p[1][0] = e[0], h = a(h, p));\n\n          for (var i = 0; i < 3; i++) {\n            for (var j = 0; j < 3; j++) {\n              h[i][j] *= d[i];\n            }\n          }\n\n          return b(h) ? [h[0][0], h[0][1], h[1][0], h[1][1], h[3][0], h[3][1]] : h[0].concat(h[1], h[2], h[3]);\n        }\n\n        return c;\n      }();\n\n      a.composeMatrix = e, a.quat = d;\n    }(b), function (a, b, c) {\n      a.sequenceNumber = 0;\n\n      var d = function d(a, b, c) {\n        this.target = a, this.currentTime = b, this.timelineTime = c, this.type = \"finish\", this.bubbles = !1, this.cancelable = !1, this.currentTarget = a, this.defaultPrevented = !1, this.eventPhase = Event.AT_TARGET, this.timeStamp = Date.now();\n      };\n\n      b.Animation = function (b) {\n        this.id = \"\", b && b._id && (this.id = b._id), this._sequenceNumber = a.sequenceNumber++, this._currentTime = 0, this._startTime = null, this._paused = !1, this._playbackRate = 1, this._inTimeline = !0, this._finishedFlag = !0, this.onfinish = null, this._finishHandlers = [], this._effect = b, this._inEffect = this._effect._update(0), this._idle = !0, this._currentTimePending = !1;\n      }, b.Animation.prototype = {\n        _ensureAlive: function _ensureAlive() {\n          this.playbackRate < 0 && 0 === this.currentTime ? this._inEffect = this._effect._update(-1) : this._inEffect = this._effect._update(this.currentTime), this._inTimeline || !this._inEffect && this._finishedFlag || (this._inTimeline = !0, b.timeline._animations.push(this));\n        },\n        _tickCurrentTime: function _tickCurrentTime(a, b) {\n          a != this._currentTime && (this._currentTime = a, this._isFinished && !b && (this._currentTime = this._playbackRate > 0 ? this._totalDuration : 0), this._ensureAlive());\n        },\n\n        get currentTime() {\n          return this._idle || this._currentTimePending ? null : this._currentTime;\n        },\n\n        set currentTime(a) {\n          a = +a, isNaN(a) || (b.restart(), this._paused || null == this._startTime || (this._startTime = this._timeline.currentTime - a / this._playbackRate), this._currentTimePending = !1, this._currentTime != a && (this._idle && (this._idle = !1, this._paused = !0), this._tickCurrentTime(a, !0), b.applyDirtiedAnimation(this)));\n        },\n\n        get startTime() {\n          return this._startTime;\n        },\n\n        set startTime(a) {\n          a = +a, isNaN(a) || this._paused || this._idle || (this._startTime = a, this._tickCurrentTime((this._timeline.currentTime - this._startTime) * this.playbackRate), b.applyDirtiedAnimation(this));\n        },\n\n        get playbackRate() {\n          return this._playbackRate;\n        },\n\n        set playbackRate(a) {\n          if (a != this._playbackRate) {\n            var c = this.currentTime;\n            this._playbackRate = a, this._startTime = null, \"paused\" != this.playState && \"idle\" != this.playState && (this._finishedFlag = !1, this._idle = !1, this._ensureAlive(), b.applyDirtiedAnimation(this)), null != c && (this.currentTime = c);\n          }\n        },\n\n        get _isFinished() {\n          return !this._idle && (this._playbackRate > 0 && this._currentTime >= this._totalDuration || this._playbackRate < 0 && this._currentTime <= 0);\n        },\n\n        get _totalDuration() {\n          return this._effect._totalDuration;\n        },\n\n        get playState() {\n          return this._idle ? \"idle\" : null == this._startTime && !this._paused && 0 != this.playbackRate || this._currentTimePending ? \"pending\" : this._paused ? \"paused\" : this._isFinished ? \"finished\" : \"running\";\n        },\n\n        _rewind: function _rewind() {\n          if (this._playbackRate >= 0) this._currentTime = 0;else {\n            if (!(this._totalDuration < 1 / 0)) throw new DOMException(\"Unable to rewind negative playback rate animation with infinite duration\", \"InvalidStateError\");\n            this._currentTime = this._totalDuration;\n          }\n        },\n        play: function play() {\n          this._paused = !1, (this._isFinished || this._idle) && (this._rewind(), this._startTime = null), this._finishedFlag = !1, this._idle = !1, this._ensureAlive(), b.applyDirtiedAnimation(this);\n        },\n        pause: function pause() {\n          this._isFinished || this._paused || this._idle ? this._idle && (this._rewind(), this._idle = !1) : this._currentTimePending = !0, this._startTime = null, this._paused = !0;\n        },\n        finish: function finish() {\n          this._idle || (this.currentTime = this._playbackRate > 0 ? this._totalDuration : 0, this._startTime = this._totalDuration - this.currentTime, this._currentTimePending = !1, b.applyDirtiedAnimation(this));\n        },\n        cancel: function cancel() {\n          this._inEffect && (this._inEffect = !1, this._idle = !0, this._paused = !1, this._finishedFlag = !0, this._currentTime = 0, this._startTime = null, this._effect._update(null), b.applyDirtiedAnimation(this));\n        },\n        reverse: function reverse() {\n          this.playbackRate *= -1, this.play();\n        },\n        addEventListener: function addEventListener(a, b) {\n          \"function\" == typeof b && \"finish\" == a && this._finishHandlers.push(b);\n        },\n        removeEventListener: function removeEventListener(a, b) {\n          if (\"finish\" == a) {\n            var c = this._finishHandlers.indexOf(b);\n\n            c >= 0 && this._finishHandlers.splice(c, 1);\n          }\n        },\n        _fireEvents: function _fireEvents(a) {\n          if (this._isFinished) {\n            if (!this._finishedFlag) {\n              var b = new d(this, this._currentTime, a),\n                  c = this._finishHandlers.concat(this.onfinish ? [this.onfinish] : []);\n\n              setTimeout(function () {\n                c.forEach(function (a) {\n                  a.call(b.target, b);\n                });\n              }, 0), this._finishedFlag = !0;\n            }\n          } else this._finishedFlag = !1;\n        },\n        _tick: function _tick(a, b) {\n          this._idle || this._paused || (null == this._startTime ? b && (this.startTime = a - this._currentTime / this.playbackRate) : this._isFinished || this._tickCurrentTime((a - this._startTime) * this.playbackRate)), b && (this._currentTimePending = !1, this._fireEvents(a));\n        },\n\n        get _needsTick() {\n          return this.playState in {\n            pending: 1,\n            running: 1\n          } || !this._finishedFlag;\n        },\n\n        _targetAnimations: function _targetAnimations() {\n          var a = this._effect._target;\n          return a._activeAnimations || (a._activeAnimations = []), a._activeAnimations;\n        },\n        _markTarget: function _markTarget() {\n          var a = this._targetAnimations();\n\n          -1 === a.indexOf(this) && a.push(this);\n        },\n        _unmarkTarget: function _unmarkTarget() {\n          var a = this._targetAnimations(),\n              b = a.indexOf(this);\n\n          -1 !== b && a.splice(b, 1);\n        }\n      };\n    }(a, b), function (a, b, c) {\n      function d(a) {\n        var b = j;\n        j = [], a < q.currentTime && (a = q.currentTime), q._animations.sort(e), q._animations = h(a, !0, q._animations)[0], b.forEach(function (b) {\n          b[1](a);\n        }), g(), l = void 0;\n      }\n\n      function e(a, b) {\n        return a._sequenceNumber - b._sequenceNumber;\n      }\n\n      function f() {\n        this._animations = [], this.currentTime = window.performance && performance.now ? performance.now() : 0;\n      }\n\n      function g() {\n        o.forEach(function (a) {\n          a();\n        }), o.length = 0;\n      }\n\n      function h(a, c, d) {\n        p = !0, n = !1, b.timeline.currentTime = a, m = !1;\n        var e = [],\n            f = [],\n            g = [],\n            h = [];\n        return d.forEach(function (b) {\n          b._tick(a, c), b._inEffect ? (f.push(b._effect), b._markTarget()) : (e.push(b._effect), b._unmarkTarget()), b._needsTick && (m = !0);\n          var d = b._inEffect || b._needsTick;\n          b._inTimeline = d, d ? g.push(b) : h.push(b);\n        }), o.push.apply(o, e), o.push.apply(o, f), m && requestAnimationFrame(function () {}), p = !1, [g, h];\n      }\n\n      var i = window.requestAnimationFrame,\n          j = [],\n          k = 0;\n      window.requestAnimationFrame = function (a) {\n        var b = k++;\n        return 0 == j.length && i(d), j.push([b, a]), b;\n      }, window.cancelAnimationFrame = function (a) {\n        j.forEach(function (b) {\n          b[0] == a && (b[1] = function () {});\n        });\n      }, f.prototype = {\n        _play: function _play(c) {\n          c._timing = a.normalizeTimingInput(c.timing);\n          var d = new b.Animation(c);\n          return d._idle = !1, d._timeline = this, this._animations.push(d), b.restart(), b.applyDirtiedAnimation(d), d;\n        }\n      };\n      var l = void 0,\n          m = !1,\n          n = !1;\n      b.restart = function () {\n        return m || (m = !0, requestAnimationFrame(function () {}), n = !0), n;\n      }, b.applyDirtiedAnimation = function (a) {\n        if (!p) {\n          a._markTarget();\n\n          var c = a._targetAnimations();\n\n          c.sort(e), h(b.timeline.currentTime, !1, c.slice())[1].forEach(function (a) {\n            var b = q._animations.indexOf(a);\n\n            -1 !== b && q._animations.splice(b, 1);\n          }), g();\n        }\n      };\n      var o = [],\n          p = !1,\n          q = new f();\n      b.timeline = q;\n    }(a, b), function (a, b) {\n      function c(a, b) {\n        for (var c = 0, d = 0; d < a.length; d++) {\n          c += a[d] * b[d];\n        }\n\n        return c;\n      }\n\n      function d(a, b) {\n        return [a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3], a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3], a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3], a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3], a[0] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7], a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7], a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7], a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7], a[0] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11], a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11], a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11], a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11], a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15], a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15], a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15], a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15]];\n      }\n\n      function e(a) {\n        var b = a.rad || 0;\n        return ((a.deg || 0) / 360 + (a.grad || 0) / 400 + (a.turn || 0)) * (2 * Math.PI) + b;\n      }\n\n      function f(a) {\n        switch (a.t) {\n          case \"rotatex\":\n            var b = e(a.d[0]);\n            return [1, 0, 0, 0, 0, Math.cos(b), Math.sin(b), 0, 0, -Math.sin(b), Math.cos(b), 0, 0, 0, 0, 1];\n\n          case \"rotatey\":\n            var b = e(a.d[0]);\n            return [Math.cos(b), 0, -Math.sin(b), 0, 0, 1, 0, 0, Math.sin(b), 0, Math.cos(b), 0, 0, 0, 0, 1];\n\n          case \"rotate\":\n          case \"rotatez\":\n            var b = e(a.d[0]);\n            return [Math.cos(b), Math.sin(b), 0, 0, -Math.sin(b), Math.cos(b), 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"rotate3d\":\n            var c = a.d[0],\n                d = a.d[1],\n                f = a.d[2],\n                b = e(a.d[3]),\n                g = c * c + d * d + f * f;\n            if (0 === g) c = 1, d = 0, f = 0;else if (1 !== g) {\n              var h = Math.sqrt(g);\n              c /= h, d /= h, f /= h;\n            }\n            var i = Math.sin(b / 2),\n                j = i * Math.cos(b / 2),\n                k = i * i;\n            return [1 - 2 * (d * d + f * f) * k, 2 * (c * d * k + f * j), 2 * (c * f * k - d * j), 0, 2 * (c * d * k - f * j), 1 - 2 * (c * c + f * f) * k, 2 * (d * f * k + c * j), 0, 2 * (c * f * k + d * j), 2 * (d * f * k - c * j), 1 - 2 * (c * c + d * d) * k, 0, 0, 0, 0, 1];\n\n          case \"scale\":\n            return [a.d[0], 0, 0, 0, 0, a.d[1], 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"scalex\":\n            return [a.d[0], 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"scaley\":\n            return [1, 0, 0, 0, 0, a.d[0], 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"scalez\":\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, a.d[0], 0, 0, 0, 0, 1];\n\n          case \"scale3d\":\n            return [a.d[0], 0, 0, 0, 0, a.d[1], 0, 0, 0, 0, a.d[2], 0, 0, 0, 0, 1];\n\n          case \"skew\":\n            var l = e(a.d[0]),\n                m = e(a.d[1]);\n            return [1, Math.tan(m), 0, 0, Math.tan(l), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"skewx\":\n            var b = e(a.d[0]);\n            return [1, 0, 0, 0, Math.tan(b), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"skewy\":\n            var b = e(a.d[0]);\n            return [1, Math.tan(b), 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n          case \"translate\":\n            var c = a.d[0].px || 0,\n                d = a.d[1].px || 0;\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, c, d, 0, 1];\n\n          case \"translatex\":\n            var c = a.d[0].px || 0;\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, c, 0, 0, 1];\n\n          case \"translatey\":\n            var d = a.d[0].px || 0;\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, d, 0, 1];\n\n          case \"translatez\":\n            var f = a.d[0].px || 0;\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, f, 1];\n\n          case \"translate3d\":\n            var c = a.d[0].px || 0,\n                d = a.d[1].px || 0,\n                f = a.d[2].px || 0;\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, c, d, f, 1];\n\n          case \"perspective\":\n            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, a.d[0].px ? -1 / a.d[0].px : 0, 0, 0, 0, 1];\n\n          case \"matrix\":\n            return [a.d[0], a.d[1], 0, 0, a.d[2], a.d[3], 0, 0, 0, 0, 1, 0, a.d[4], a.d[5], 0, 1];\n\n          case \"matrix3d\":\n            return a.d;\n        }\n      }\n\n      function g(a) {\n        return 0 === a.length ? [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] : a.map(f).reduce(d);\n      }\n\n      function h(a) {\n        return [i(g(a))];\n      }\n\n      var i = function () {\n        function a(a) {\n          return a[0][0] * a[1][1] * a[2][2] + a[1][0] * a[2][1] * a[0][2] + a[2][0] * a[0][1] * a[1][2] - a[0][2] * a[1][1] * a[2][0] - a[1][2] * a[2][1] * a[0][0] - a[2][2] * a[0][1] * a[1][0];\n        }\n\n        function b(b) {\n          for (var c = 1 / a(b), d = b[0][0], e = b[0][1], f = b[0][2], g = b[1][0], h = b[1][1], i = b[1][2], j = b[2][0], k = b[2][1], l = b[2][2], m = [[(h * l - i * k) * c, (f * k - e * l) * c, (e * i - f * h) * c, 0], [(i * j - g * l) * c, (d * l - f * j) * c, (f * g - d * i) * c, 0], [(g * k - h * j) * c, (j * e - d * k) * c, (d * h - e * g) * c, 0]], n = [], o = 0; o < 3; o++) {\n            for (var p = 0, q = 0; q < 3; q++) {\n              p += b[3][q] * m[q][o];\n            }\n\n            n.push(p);\n          }\n\n          return n.push(1), m.push(n), m;\n        }\n\n        function d(a) {\n          return [[a[0][0], a[1][0], a[2][0], a[3][0]], [a[0][1], a[1][1], a[2][1], a[3][1]], [a[0][2], a[1][2], a[2][2], a[3][2]], [a[0][3], a[1][3], a[2][3], a[3][3]]];\n        }\n\n        function e(a, b) {\n          for (var c = [], d = 0; d < 4; d++) {\n            for (var e = 0, f = 0; f < 4; f++) {\n              e += a[f] * b[f][d];\n            }\n\n            c.push(e);\n          }\n\n          return c;\n        }\n\n        function f(a) {\n          var b = g(a);\n          return [a[0] / b, a[1] / b, a[2] / b];\n        }\n\n        function g(a) {\n          return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n        }\n\n        function h(a, b, c, d) {\n          return [c * a[0] + d * b[0], c * a[1] + d * b[1], c * a[2] + d * b[2]];\n        }\n\n        function i(a, b) {\n          return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n        }\n\n        function j(j) {\n          var k = [j.slice(0, 4), j.slice(4, 8), j.slice(8, 12), j.slice(12, 16)];\n          if (1 !== k[3][3]) return null;\n\n          for (var l = [], m = 0; m < 4; m++) {\n            l.push(k[m].slice());\n          }\n\n          for (var m = 0; m < 3; m++) {\n            l[m][3] = 0;\n          }\n\n          if (0 === a(l)) return null;\n          var n,\n              o = [];\n          k[0][3] || k[1][3] || k[2][3] ? (o.push(k[0][3]), o.push(k[1][3]), o.push(k[2][3]), o.push(k[3][3]), n = e(o, d(b(l)))) : n = [0, 0, 0, 1];\n          var p = k[3].slice(0, 3),\n              q = [];\n          q.push(k[0].slice(0, 3));\n          var r = [];\n          r.push(g(q[0])), q[0] = f(q[0]);\n          var s = [];\n          q.push(k[1].slice(0, 3)), s.push(c(q[0], q[1])), q[1] = h(q[1], q[0], 1, -s[0]), r.push(g(q[1])), q[1] = f(q[1]), s[0] /= r[1], q.push(k[2].slice(0, 3)), s.push(c(q[0], q[2])), q[2] = h(q[2], q[0], 1, -s[1]), s.push(c(q[1], q[2])), q[2] = h(q[2], q[1], 1, -s[2]), r.push(g(q[2])), q[2] = f(q[2]), s[1] /= r[2], s[2] /= r[2];\n          var t = i(q[1], q[2]);\n          if (c(q[0], t) < 0) for (var m = 0; m < 3; m++) {\n            r[m] *= -1, q[m][0] *= -1, q[m][1] *= -1, q[m][2] *= -1;\n          }\n          var u,\n              v,\n              w = q[0][0] + q[1][1] + q[2][2] + 1;\n          return w > 1e-4 ? (u = .5 / Math.sqrt(w), v = [(q[2][1] - q[1][2]) * u, (q[0][2] - q[2][0]) * u, (q[1][0] - q[0][1]) * u, .25 / u]) : q[0][0] > q[1][1] && q[0][0] > q[2][2] ? (u = 2 * Math.sqrt(1 + q[0][0] - q[1][1] - q[2][2]), v = [.25 * u, (q[0][1] + q[1][0]) / u, (q[0][2] + q[2][0]) / u, (q[2][1] - q[1][2]) / u]) : q[1][1] > q[2][2] ? (u = 2 * Math.sqrt(1 + q[1][1] - q[0][0] - q[2][2]), v = [(q[0][1] + q[1][0]) / u, .25 * u, (q[1][2] + q[2][1]) / u, (q[0][2] - q[2][0]) / u]) : (u = 2 * Math.sqrt(1 + q[2][2] - q[0][0] - q[1][1]), v = [(q[0][2] + q[2][0]) / u, (q[1][2] + q[2][1]) / u, .25 * u, (q[1][0] - q[0][1]) / u]), [p, r, s, v, n];\n        }\n\n        return j;\n      }();\n\n      a.dot = c, a.makeMatrixDecomposition = h, a.transformListToMatrix = g;\n    }(b), function (a) {\n      function b(a, b) {\n        var c = a.exec(b);\n        if (c) return c = a.ignoreCase ? c[0].toLowerCase() : c[0], [c, b.substr(c.length)];\n      }\n\n      function c(a, b) {\n        b = b.replace(/^\\s*/, \"\");\n        var c = a(b);\n        if (c) return [c[0], c[1].replace(/^\\s*/, \"\")];\n      }\n\n      function d(a, d, e) {\n        a = c.bind(null, a);\n\n        for (var f = [];;) {\n          var g = a(e);\n          if (!g) return [f, e];\n          if (f.push(g[0]), e = g[1], !(g = b(d, e)) || \"\" == g[1]) return [f, e];\n          e = g[1];\n        }\n      }\n\n      function e(a, b) {\n        for (var c = 0, d = 0; d < b.length && (!/\\s|,/.test(b[d]) || 0 != c); d++) {\n          if (\"(\" == b[d]) c++;else if (\")\" == b[d] && (c--, 0 == c && d++, c <= 0)) break;\n        }\n\n        var e = a(b.substr(0, d));\n        return void 0 == e ? void 0 : [e, b.substr(d)];\n      }\n\n      function f(a, b) {\n        for (var c = a, d = b; c && d;) {\n          c > d ? c %= d : d %= c;\n        }\n\n        return c = a * b / (c + d);\n      }\n\n      function g(a) {\n        return function (b) {\n          var c = a(b);\n          return c && (c[0] = void 0), c;\n        };\n      }\n\n      function h(a, b) {\n        return function (c) {\n          return a(c) || [b, c];\n        };\n      }\n\n      function i(b, c) {\n        for (var d = [], e = 0; e < b.length; e++) {\n          var f = a.consumeTrimmed(b[e], c);\n          if (!f || \"\" == f[0]) return;\n          void 0 !== f[0] && d.push(f[0]), c = f[1];\n        }\n\n        if (\"\" == c) return d;\n      }\n\n      function j(a, b, c, d, e) {\n        for (var g = [], h = [], i = [], j = f(d.length, e.length), k = 0; k < j; k++) {\n          var l = b(d[k % d.length], e[k % e.length]);\n          if (!l) return;\n          g.push(l[0]), h.push(l[1]), i.push(l[2]);\n        }\n\n        return [g, h, function (b) {\n          var d = b.map(function (a, b) {\n            return i[b](a);\n          }).join(c);\n          return a ? a(d) : d;\n        }];\n      }\n\n      function k(a, b, c) {\n        for (var d = [], e = [], f = [], g = 0, h = 0; h < c.length; h++) {\n          if (\"function\" == typeof c[h]) {\n            var i = c[h](a[g], b[g++]);\n            d.push(i[0]), e.push(i[1]), f.push(i[2]);\n          } else !function (a) {\n            d.push(!1), e.push(!1), f.push(function () {\n              return c[a];\n            });\n          }(h);\n        }\n\n        return [d, e, function (a) {\n          for (var b = \"\", c = 0; c < a.length; c++) {\n            b += f[c](a[c]);\n          }\n\n          return b;\n        }];\n      }\n\n      a.consumeToken = b, a.consumeTrimmed = c, a.consumeRepeated = d, a.consumeParenthesised = e, a.ignore = g, a.optional = h, a.consumeList = i, a.mergeNestedRepeated = j.bind(null, null), a.mergeWrappedNestedRepeated = j, a.mergeList = k;\n    }(b), function (a) {\n      function b(b) {\n        function c(b) {\n          var c = a.consumeToken(/^inset/i, b);\n          return c ? (d.inset = !0, c) : (c = a.consumeLengthOrPercent(b)) ? (d.lengths.push(c[0]), c) : (c = a.consumeColor(b), c ? (d.color = c[0], c) : void 0);\n        }\n\n        var d = {\n          inset: !1,\n          lengths: [],\n          color: null\n        },\n            e = a.consumeRepeated(c, /^/, b);\n        if (e && e[0].length) return [d, e[1]];\n      }\n\n      function c(c) {\n        var d = a.consumeRepeated(b, /^,/, c);\n        if (d && \"\" == d[1]) return d[0];\n      }\n\n      function d(b, c) {\n        for (; b.lengths.length < Math.max(b.lengths.length, c.lengths.length);) {\n          b.lengths.push({\n            px: 0\n          });\n        }\n\n        for (; c.lengths.length < Math.max(b.lengths.length, c.lengths.length);) {\n          c.lengths.push({\n            px: 0\n          });\n        }\n\n        if (b.inset == c.inset && !!b.color == !!c.color) {\n          for (var d, e = [], f = [[], 0], g = [[], 0], h = 0; h < b.lengths.length; h++) {\n            var i = a.mergeDimensions(b.lengths[h], c.lengths[h], 2 == h);\n            f[0].push(i[0]), g[0].push(i[1]), e.push(i[2]);\n          }\n\n          if (b.color && c.color) {\n            var j = a.mergeColors(b.color, c.color);\n            f[1] = j[0], g[1] = j[1], d = j[2];\n          }\n\n          return [f, g, function (a) {\n            for (var c = b.inset ? \"inset \" : \" \", f = 0; f < e.length; f++) {\n              c += e[f](a[0][f]) + \" \";\n            }\n\n            return d && (c += d(a[1])), c;\n          }];\n        }\n      }\n\n      function e(b, c, d, e) {\n        function f(a) {\n          return {\n            inset: a,\n            color: [0, 0, 0, 0],\n            lengths: [{\n              px: 0\n            }, {\n              px: 0\n            }, {\n              px: 0\n            }, {\n              px: 0\n            }]\n          };\n        }\n\n        for (var g = [], h = [], i = 0; i < d.length || i < e.length; i++) {\n          var j = d[i] || f(e[i].inset),\n              k = e[i] || f(d[i].inset);\n          g.push(j), h.push(k);\n        }\n\n        return a.mergeNestedRepeated(b, c, g, h);\n      }\n\n      var f = e.bind(null, d, \", \");\n      a.addPropertiesHandler(c, f, [\"box-shadow\", \"text-shadow\"]);\n    }(b), function (a, b) {\n      function c(a) {\n        return a.toFixed(3).replace(/0+$/, \"\").replace(/\\.$/, \"\");\n      }\n\n      function d(a, b, c) {\n        return Math.min(b, Math.max(a, c));\n      }\n\n      function e(a) {\n        if (/^\\s*[-+]?(\\d*\\.)?\\d+\\s*$/.test(a)) return Number(a);\n      }\n\n      function f(a, b) {\n        return [a, b, c];\n      }\n\n      function g(a, b) {\n        if (0 != a) return i(0, 1 / 0)(a, b);\n      }\n\n      function h(a, b) {\n        return [a, b, function (a) {\n          return Math.round(d(1, 1 / 0, a));\n        }];\n      }\n\n      function i(a, b) {\n        return function (e, f) {\n          return [e, f, function (e) {\n            return c(d(a, b, e));\n          }];\n        };\n      }\n\n      function j(a) {\n        var b = a.trim().split(/\\s*[\\s,]\\s*/);\n\n        if (0 !== b.length) {\n          for (var c = [], d = 0; d < b.length; d++) {\n            var f = e(b[d]);\n            if (void 0 === f) return;\n            c.push(f);\n          }\n\n          return c;\n        }\n      }\n\n      function k(a, b) {\n        if (a.length == b.length) return [a, b, function (a) {\n          return a.map(c).join(\" \");\n        }];\n      }\n\n      function l(a, b) {\n        return [a, b, Math.round];\n      }\n\n      a.clamp = d, a.addPropertiesHandler(j, k, [\"stroke-dasharray\"]), a.addPropertiesHandler(e, i(0, 1 / 0), [\"border-image-width\", \"line-height\"]), a.addPropertiesHandler(e, i(0, 1), [\"opacity\", \"shape-image-threshold\"]), a.addPropertiesHandler(e, g, [\"flex-grow\", \"flex-shrink\"]), a.addPropertiesHandler(e, h, [\"orphans\", \"widows\"]), a.addPropertiesHandler(e, l, [\"z-index\"]), a.parseNumber = e, a.parseNumberList = j, a.mergeNumbers = f, a.numberToString = c;\n    }(b), function (a, b) {\n      function c(a, b) {\n        if (\"visible\" == a || \"visible\" == b) return [0, 1, function (c) {\n          return c <= 0 ? a : c >= 1 ? b : \"visible\";\n        }];\n      }\n\n      a.addPropertiesHandler(String, c, [\"visibility\"]);\n    }(b), function (a, b) {\n      function c(a) {\n        a = a.trim(), f.fillStyle = \"#000\", f.fillStyle = a;\n        var b = f.fillStyle;\n\n        if (f.fillStyle = \"#fff\", f.fillStyle = a, b == f.fillStyle) {\n          f.fillRect(0, 0, 1, 1);\n          var c = f.getImageData(0, 0, 1, 1).data;\n          f.clearRect(0, 0, 1, 1);\n          var d = c[3] / 255;\n          return [c[0] * d, c[1] * d, c[2] * d, d];\n        }\n      }\n\n      function d(b, c) {\n        return [b, c, function (b) {\n          function c(a) {\n            return Math.max(0, Math.min(255, a));\n          }\n\n          if (b[3]) for (var d = 0; d < 3; d++) {\n            b[d] = Math.round(c(b[d] / b[3]));\n          }\n          return b[3] = a.numberToString(a.clamp(0, 1, b[3])), \"rgba(\" + b.join(\",\") + \")\";\n        }];\n      }\n\n      var e = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\");\n      e.width = e.height = 1;\n      var f = e.getContext(\"2d\");\n      a.addPropertiesHandler(c, d, [\"background-color\", \"border-bottom-color\", \"border-left-color\", \"border-right-color\", \"border-top-color\", \"color\", \"fill\", \"flood-color\", \"lighting-color\", \"outline-color\", \"stop-color\", \"stroke\", \"text-decoration-color\"]), a.consumeColor = a.consumeParenthesised.bind(null, c), a.mergeColors = d;\n    }(b), function (a, b) {\n      function c(a) {\n        function b() {\n          var b = h.exec(a);\n          g = b ? b[0] : void 0;\n        }\n\n        function c() {\n          var a = Number(g);\n          return b(), a;\n        }\n\n        function d() {\n          if (\"(\" !== g) return c();\n          b();\n          var a = f();\n          return \")\" !== g ? NaN : (b(), a);\n        }\n\n        function e() {\n          for (var a = d(); \"*\" === g || \"/\" === g;) {\n            var c = g;\n            b();\n            var e = d();\n            \"*\" === c ? a *= e : a /= e;\n          }\n\n          return a;\n        }\n\n        function f() {\n          for (var a = e(); \"+\" === g || \"-\" === g;) {\n            var c = g;\n            b();\n            var d = e();\n            \"+\" === c ? a += d : a -= d;\n          }\n\n          return a;\n        }\n\n        var g,\n            h = /([\\+\\-\\w\\.]+|[\\(\\)\\*\\/])/g;\n        return b(), f();\n      }\n\n      function d(a, b) {\n        if (\"0\" == (b = b.trim().toLowerCase()) && \"px\".search(a) >= 0) return {\n          px: 0\n        };\n\n        if (/^[^(]*$|^calc/.test(b)) {\n          b = b.replace(/calc\\(/g, \"(\");\n          var d = {};\n          b = b.replace(a, function (a) {\n            return d[a] = null, \"U\" + a;\n          });\n\n          for (var e = \"U(\" + a.source + \")\", f = b.replace(/[-+]?(\\d*\\.)?\\d+([Ee][-+]?\\d+)?/g, \"N\").replace(new RegExp(\"N\" + e, \"g\"), \"D\").replace(/\\s[+-]\\s/g, \"O\").replace(/\\s/g, \"\"), g = [/N\\*(D)/g, /(N|D)[*\\/]N/g, /(N|D)O\\1/g, /\\((N|D)\\)/g], h = 0; h < g.length;) {\n            g[h].test(f) ? (f = f.replace(g[h], \"$1\"), h = 0) : h++;\n          }\n\n          if (\"D\" == f) {\n            for (var i in d) {\n              var j = c(b.replace(new RegExp(\"U\" + i, \"g\"), \"\").replace(new RegExp(e, \"g\"), \"*0\"));\n              if (!isFinite(j)) return;\n              d[i] = j;\n            }\n\n            return d;\n          }\n        }\n      }\n\n      function e(a, b) {\n        return f(a, b, !0);\n      }\n\n      function f(b, c, d) {\n        var e,\n            f = [];\n\n        for (e in b) {\n          f.push(e);\n        }\n\n        for (e in c) {\n          f.indexOf(e) < 0 && f.push(e);\n        }\n\n        return b = f.map(function (a) {\n          return b[a] || 0;\n        }), c = f.map(function (a) {\n          return c[a] || 0;\n        }), [b, c, function (b) {\n          var c = b.map(function (c, e) {\n            return 1 == b.length && d && (c = Math.max(c, 0)), a.numberToString(c) + f[e];\n          }).join(\" + \");\n          return b.length > 1 ? \"calc(\" + c + \")\" : c;\n        }];\n      }\n\n      var g = \"px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc\",\n          h = d.bind(null, new RegExp(g, \"g\")),\n          i = d.bind(null, new RegExp(g + \"|%\", \"g\")),\n          j = d.bind(null, /deg|rad|grad|turn/g);\n      a.parseLength = h, a.parseLengthOrPercent = i, a.consumeLengthOrPercent = a.consumeParenthesised.bind(null, i), a.parseAngle = j, a.mergeDimensions = f;\n      var k = a.consumeParenthesised.bind(null, h),\n          l = a.consumeRepeated.bind(void 0, k, /^/),\n          m = a.consumeRepeated.bind(void 0, l, /^,/);\n      a.consumeSizePairList = m;\n\n      var n = function n(a) {\n        var b = m(a);\n        if (b && \"\" == b[1]) return b[0];\n      },\n          o = a.mergeNestedRepeated.bind(void 0, e, \" \"),\n          p = a.mergeNestedRepeated.bind(void 0, o, \",\");\n\n      a.mergeNonNegativeSizePair = o, a.addPropertiesHandler(n, p, [\"background-size\"]), a.addPropertiesHandler(i, e, [\"border-bottom-width\", \"border-image-width\", \"border-left-width\", \"border-right-width\", \"border-top-width\", \"flex-basis\", \"font-size\", \"height\", \"line-height\", \"max-height\", \"max-width\", \"outline-width\", \"width\"]), a.addPropertiesHandler(i, f, [\"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-top-left-radius\", \"border-top-right-radius\", \"bottom\", \"left\", \"letter-spacing\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"min-height\", \"min-width\", \"outline-offset\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\", \"perspective\", \"right\", \"shape-margin\", \"stroke-dashoffset\", \"text-indent\", \"top\", \"vertical-align\", \"word-spacing\"]);\n    }(b), function (a, b) {\n      function c(b) {\n        return a.consumeLengthOrPercent(b) || a.consumeToken(/^auto/, b);\n      }\n\n      function d(b) {\n        var d = a.consumeList([a.ignore(a.consumeToken.bind(null, /^rect/)), a.ignore(a.consumeToken.bind(null, /^\\(/)), a.consumeRepeated.bind(null, c, /^,/), a.ignore(a.consumeToken.bind(null, /^\\)/))], b);\n        if (d && 4 == d[0].length) return d[0];\n      }\n\n      function e(b, c) {\n        return \"auto\" == b || \"auto\" == c ? [!0, !1, function (d) {\n          var e = d ? b : c;\n          if (\"auto\" == e) return \"auto\";\n          var f = a.mergeDimensions(e, e);\n          return f[2](f[0]);\n        }] : a.mergeDimensions(b, c);\n      }\n\n      function f(a) {\n        return \"rect(\" + a + \")\";\n      }\n\n      var g = a.mergeWrappedNestedRepeated.bind(null, f, e, \", \");\n      a.parseBox = d, a.mergeBoxes = g, a.addPropertiesHandler(d, g, [\"clip\"]);\n    }(b), function (a, b) {\n      function c(a) {\n        return function (b) {\n          var c = 0;\n          return a.map(function (a) {\n            return a === k ? b[c++] : a;\n          });\n        };\n      }\n\n      function d(a) {\n        return a;\n      }\n\n      function e(b) {\n        if (\"none\" == (b = b.toLowerCase().trim())) return [];\n\n        for (var c, d = /\\s*(\\w+)\\(([^)]*)\\)/g, e = [], f = 0; c = d.exec(b);) {\n          if (c.index != f) return;\n          f = c.index + c[0].length;\n          var g = c[1],\n              h = n[g];\n          if (!h) return;\n          var i = c[2].split(\",\"),\n              j = h[0];\n          if (j.length < i.length) return;\n\n          for (var k = [], o = 0; o < j.length; o++) {\n            var p,\n                q = i[o],\n                r = j[o];\n            if (void 0 === (p = q ? {\n              A: function A(b) {\n                return \"0\" == b.trim() ? m : a.parseAngle(b);\n              },\n              N: a.parseNumber,\n              T: a.parseLengthOrPercent,\n              L: a.parseLength\n            }[r.toUpperCase()](q) : {\n              a: m,\n              n: k[0],\n              t: l\n            }[r])) return;\n            k.push(p);\n          }\n\n          if (e.push({\n            t: g,\n            d: k\n          }), d.lastIndex == b.length) return e;\n        }\n      }\n\n      function f(a) {\n        return a.toFixed(6).replace(\".000000\", \"\");\n      }\n\n      function g(b, c) {\n        if (b.decompositionPair !== c) {\n          b.decompositionPair = c;\n          var d = a.makeMatrixDecomposition(b);\n        }\n\n        if (c.decompositionPair !== b) {\n          c.decompositionPair = b;\n          var e = a.makeMatrixDecomposition(c);\n        }\n\n        return null == d[0] || null == e[0] ? [[!1], [!0], function (a) {\n          return a ? c[0].d : b[0].d;\n        }] : (d[0].push(0), e[0].push(1), [d, e, function (b) {\n          var c = a.quat(d[0][3], e[0][3], b[5]);\n          return a.composeMatrix(b[0], b[1], b[2], c, b[4]).map(f).join(\",\");\n        }]);\n      }\n\n      function h(a) {\n        return a.replace(/[xy]/, \"\");\n      }\n\n      function i(a) {\n        return a.replace(/(x|y|z|3d)?$/, \"3d\");\n      }\n\n      function j(b, c) {\n        var d = a.makeMatrixDecomposition && !0,\n            e = !1;\n\n        if (!b.length || !c.length) {\n          b.length || (e = !0, b = c, c = []);\n\n          for (var f = 0; f < b.length; f++) {\n            var j = b[f].t,\n                k = b[f].d,\n                l = \"scale\" == j.substr(0, 5) ? 1 : 0;\n            c.push({\n              t: j,\n              d: k.map(function (a) {\n                if (\"number\" == typeof a) return l;\n                var b = {};\n\n                for (var c in a) {\n                  b[c] = l;\n                }\n\n                return b;\n              })\n            });\n          }\n        }\n\n        var m = function m(a, b) {\n          return \"perspective\" == a && \"perspective\" == b || (\"matrix\" == a || \"matrix3d\" == a) && (\"matrix\" == b || \"matrix3d\" == b);\n        },\n            o = [],\n            p = [],\n            q = [];\n\n        if (b.length != c.length) {\n          if (!d) return;\n          var r = g(b, c);\n          o = [r[0]], p = [r[1]], q = [[\"matrix\", [r[2]]]];\n        } else for (var f = 0; f < b.length; f++) {\n          var j,\n              s = b[f].t,\n              t = c[f].t,\n              u = b[f].d,\n              v = c[f].d,\n              w = n[s],\n              x = n[t];\n\n          if (m(s, t)) {\n            if (!d) return;\n            var r = g([b[f]], [c[f]]);\n            o.push(r[0]), p.push(r[1]), q.push([\"matrix\", [r[2]]]);\n          } else {\n            if (s == t) j = s;else if (w[2] && x[2] && h(s) == h(t)) j = h(s), u = w[2](u), v = x[2](v);else {\n              if (!w[1] || !x[1] || i(s) != i(t)) {\n                if (!d) return;\n                var r = g(b, c);\n                o = [r[0]], p = [r[1]], q = [[\"matrix\", [r[2]]]];\n                break;\n              }\n\n              j = i(s), u = w[1](u), v = x[1](v);\n            }\n\n            for (var y = [], z = [], A = [], B = 0; B < u.length; B++) {\n              var C = \"number\" == typeof u[B] ? a.mergeNumbers : a.mergeDimensions,\n                  r = C(u[B], v[B]);\n              y[B] = r[0], z[B] = r[1], A.push(r[2]);\n            }\n\n            o.push(y), p.push(z), q.push([j, A]);\n          }\n        }\n\n        if (e) {\n          var D = o;\n          o = p, p = D;\n        }\n\n        return [o, p, function (a) {\n          return a.map(function (a, b) {\n            var c = a.map(function (a, c) {\n              return q[b][1][c](a);\n            }).join(\",\");\n            return \"matrix\" == q[b][0] && 16 == c.split(\",\").length && (q[b][0] = \"matrix3d\"), q[b][0] + \"(\" + c + \")\";\n          }).join(\" \");\n        }];\n      }\n\n      var k = null,\n          l = {\n        px: 0\n      },\n          m = {\n        deg: 0\n      },\n          n = {\n        matrix: [\"NNNNNN\", [k, k, 0, 0, k, k, 0, 0, 0, 0, 1, 0, k, k, 0, 1], d],\n        matrix3d: [\"NNNNNNNNNNNNNNNN\", d],\n        rotate: [\"A\"],\n        rotatex: [\"A\"],\n        rotatey: [\"A\"],\n        rotatez: [\"A\"],\n        rotate3d: [\"NNNA\"],\n        perspective: [\"L\"],\n        scale: [\"Nn\", c([k, k, 1]), d],\n        scalex: [\"N\", c([k, 1, 1]), c([k, 1])],\n        scaley: [\"N\", c([1, k, 1]), c([1, k])],\n        scalez: [\"N\", c([1, 1, k])],\n        scale3d: [\"NNN\", d],\n        skew: [\"Aa\", null, d],\n        skewx: [\"A\", null, c([k, m])],\n        skewy: [\"A\", null, c([m, k])],\n        translate: [\"Tt\", c([k, k, l]), d],\n        translatex: [\"T\", c([k, l, l]), c([k, l])],\n        translatey: [\"T\", c([l, k, l]), c([l, k])],\n        translatez: [\"L\", c([l, l, k])],\n        translate3d: [\"TTL\", d]\n      };\n      a.addPropertiesHandler(e, j, [\"transform\"]), a.transformToSvgMatrix = function (b) {\n        var c = a.transformListToMatrix(e(b));\n        return \"matrix(\" + f(c[0]) + \" \" + f(c[1]) + \" \" + f(c[4]) + \" \" + f(c[5]) + \" \" + f(c[12]) + \" \" + f(c[13]) + \")\";\n      };\n    }(b), function (a) {\n      function b(a) {\n        var b = Number(a);\n        if (!(isNaN(b) || b < 100 || b > 900 || b % 100 != 0)) return b;\n      }\n\n      function c(b) {\n        return b = 100 * Math.round(b / 100), b = a.clamp(100, 900, b), 400 === b ? \"normal\" : 700 === b ? \"bold\" : String(b);\n      }\n\n      function d(a, b) {\n        return [a, b, c];\n      }\n\n      a.addPropertiesHandler(b, d, [\"font-weight\"]);\n    }(b), function (a) {\n      function b(a) {\n        var b = {};\n\n        for (var c in a) {\n          b[c] = -a[c];\n        }\n\n        return b;\n      }\n\n      function c(b) {\n        return a.consumeToken(/^(left|center|right|top|bottom)\\b/i, b) || a.consumeLengthOrPercent(b);\n      }\n\n      function d(b, d) {\n        var e = a.consumeRepeated(c, /^/, d);\n\n        if (e && \"\" == e[1]) {\n          var f = e[0];\n\n          if (f[0] = f[0] || \"center\", f[1] = f[1] || \"center\", 3 == b && (f[2] = f[2] || {\n            px: 0\n          }), f.length == b) {\n            if (/top|bottom/.test(f[0]) || /left|right/.test(f[1])) {\n              var h = f[0];\n              f[0] = f[1], f[1] = h;\n            }\n\n            if (/left|right|center|Object/.test(f[0]) && /top|bottom|center|Object/.test(f[1])) return f.map(function (a) {\n              return \"object\" == typeof a ? a : g[a];\n            });\n          }\n        }\n      }\n\n      function e(d) {\n        var e = a.consumeRepeated(c, /^/, d);\n\n        if (e) {\n          for (var f = e[0], h = [{\n            \"%\": 50\n          }, {\n            \"%\": 50\n          }], i = 0, j = !1, k = 0; k < f.length; k++) {\n            var l = f[k];\n            \"string\" == typeof l ? (j = /bottom|right/.test(l), i = {\n              left: 0,\n              right: 0,\n              center: i,\n              top: 1,\n              bottom: 1\n            }[l], h[i] = g[l], \"center\" == l && i++) : (j && (l = b(l), l[\"%\"] = (l[\"%\"] || 0) + 100), h[i] = l, i++, j = !1);\n          }\n\n          return [h, e[1]];\n        }\n      }\n\n      function f(b) {\n        var c = a.consumeRepeated(e, /^,/, b);\n        if (c && \"\" == c[1]) return c[0];\n      }\n\n      var g = {\n        left: {\n          \"%\": 0\n        },\n        center: {\n          \"%\": 50\n        },\n        right: {\n          \"%\": 100\n        },\n        top: {\n          \"%\": 0\n        },\n        bottom: {\n          \"%\": 100\n        }\n      },\n          h = a.mergeNestedRepeated.bind(null, a.mergeDimensions, \" \");\n      a.addPropertiesHandler(d.bind(null, 3), h, [\"transform-origin\"]), a.addPropertiesHandler(d.bind(null, 2), h, [\"perspective-origin\"]), a.consumePosition = e, a.mergeOffsetList = h;\n      var i = a.mergeNestedRepeated.bind(null, h, \", \");\n      a.addPropertiesHandler(f, i, [\"background-position\", \"object-position\"]);\n    }(b), function (a) {\n      function b(b) {\n        var c = a.consumeToken(/^circle/, b);\n        if (c && c[0]) return [\"circle\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0, /^\\(/)), d, a.ignore(a.consumeToken.bind(void 0, /^at/)), a.consumePosition, a.ignore(a.consumeToken.bind(void 0, /^\\)/))], c[1]));\n        var f = a.consumeToken(/^ellipse/, b);\n        if (f && f[0]) return [\"ellipse\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0, /^\\(/)), e, a.ignore(a.consumeToken.bind(void 0, /^at/)), a.consumePosition, a.ignore(a.consumeToken.bind(void 0, /^\\)/))], f[1]));\n        var g = a.consumeToken(/^polygon/, b);\n        return g && g[0] ? [\"polygon\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0, /^\\(/)), a.optional(a.consumeToken.bind(void 0, /^nonzero\\s*,|^evenodd\\s*,/), \"nonzero,\"), a.consumeSizePairList, a.ignore(a.consumeToken.bind(void 0, /^\\)/))], g[1])) : void 0;\n      }\n\n      function c(b, c) {\n        if (b[0] === c[0]) return \"circle\" == b[0] ? a.mergeList(b.slice(1), c.slice(1), [\"circle(\", a.mergeDimensions, \" at \", a.mergeOffsetList, \")\"]) : \"ellipse\" == b[0] ? a.mergeList(b.slice(1), c.slice(1), [\"ellipse(\", a.mergeNonNegativeSizePair, \" at \", a.mergeOffsetList, \")\"]) : \"polygon\" == b[0] && b[1] == c[1] ? a.mergeList(b.slice(2), c.slice(2), [\"polygon(\", b[1], g, \")\"]) : void 0;\n      }\n\n      var d = a.consumeParenthesised.bind(null, a.parseLengthOrPercent),\n          e = a.consumeRepeated.bind(void 0, d, /^/),\n          f = a.mergeNestedRepeated.bind(void 0, a.mergeDimensions, \" \"),\n          g = a.mergeNestedRepeated.bind(void 0, f, \",\");\n      a.addPropertiesHandler(b, c, [\"shape-outside\"]);\n    }(b), function (a, b) {\n      function c(a, b) {\n        b.concat([a]).forEach(function (b) {\n          b in document.documentElement.style && (d[a] = b), e[b] = a;\n        });\n      }\n\n      var d = {},\n          e = {};\n      c(\"transform\", [\"webkitTransform\", \"msTransform\"]), c(\"transformOrigin\", [\"webkitTransformOrigin\"]), c(\"perspective\", [\"webkitPerspective\"]), c(\"perspectiveOrigin\", [\"webkitPerspectiveOrigin\"]), a.propertyName = function (a) {\n        return d[a] || a;\n      }, a.unprefixedPropertyName = function (a) {\n        return e[a] || a;\n      };\n    }(b);\n  }(), function () {\n    if (void 0 === document.createElement(\"div\").animate([]).oncancel) {\n      var a;\n      if (window.performance && performance.now) var a = function a() {\n        return performance.now();\n      };else var a = function a() {\n        return Date.now();\n      };\n\n      var b = function b(a, _b, c) {\n        this.target = a, this.currentTime = _b, this.timelineTime = c, this.type = \"cancel\", this.bubbles = !1, this.cancelable = !1, this.currentTarget = a, this.defaultPrevented = !1, this.eventPhase = Event.AT_TARGET, this.timeStamp = Date.now();\n      },\n          c = window.Element.prototype.animate;\n\n      window.Element.prototype.animate = function (d, e) {\n        var f = c.call(this, d, e);\n        f._cancelHandlers = [], f.oncancel = null;\n        var g = f.cancel;\n\n        f.cancel = function () {\n          g.call(this);\n\n          var c = new b(this, null, a()),\n              d = this._cancelHandlers.concat(this.oncancel ? [this.oncancel] : []);\n\n          setTimeout(function () {\n            d.forEach(function (a) {\n              a.call(c.target, c);\n            });\n          }, 0);\n        };\n\n        var h = f.addEventListener;\n\n        f.addEventListener = function (a, b) {\n          \"function\" == typeof b && \"cancel\" == a ? this._cancelHandlers.push(b) : h.call(this, a, b);\n        };\n\n        var i = f.removeEventListener;\n        return f.removeEventListener = function (a, b) {\n          if (\"cancel\" == a) {\n            var c = this._cancelHandlers.indexOf(b);\n\n            c >= 0 && this._cancelHandlers.splice(c, 1);\n          } else i.call(this, a, b);\n        }, f;\n      };\n    }\n  }(), function (a) {\n    var b = document.documentElement,\n        c = null,\n        d = !1;\n\n    try {\n      var e = getComputedStyle(b).getPropertyValue(\"opacity\"),\n          f = \"0\" == e ? \"1\" : \"0\";\n      c = b.animate({\n        opacity: [f, f]\n      }, {\n        duration: 1\n      }), c.currentTime = 0, d = getComputedStyle(b).getPropertyValue(\"opacity\") == f;\n    } catch (a) {} finally {\n      c && c.cancel();\n    }\n\n    if (!d) {\n      var g = window.Element.prototype.animate;\n\n      window.Element.prototype.animate = function (b, c) {\n        return window.Symbol && Symbol.iterator && Array.prototype.from && b[Symbol.iterator] && (b = Array.from(b)), Array.isArray(b) || null === b || (b = a.convertToArrayForm(b)), g.call(this, b, c);\n      };\n    }\n  }(a);\n}();","map":{"version":3,"sources":["src/scope.js","src/timing-utilities.js","src/normalize-keyframes.js","src/deprecation.js","src/web-animations-bonus-cancel-events.js","src/web-animations-bonus-object-form-keyframes.js"],"names":["webAnimationsShared","webAnimations1","shared","testing","fills","split","directions","linear","x","cloneTimingInput","timingInput","clone","m","AnimationEffectTiming","this","_delay","_endDelay","_fill","_iterationStart","_iterations","_duration","_playbackRate","_direction","_easing","_easingFunction","isInvalidTimingDeprecated","isDeprecated","prototype","_setMember","member","value","_effect","_timingInput","_timing","normalizeTimingInput","activeDuration","calculateActiveDuration","_animation","_rebuildUnderlyingAnimation","playbackRate","delay","endDelay","fill","iterationStart","isNaN","TypeError","duration","direction","easing","parseEasingFunction","normalizeEasing","iterations","makeTiming","forGroup","effect","timing","Object","getOwnPropertyNames","forEach","property","indexOf","numericTimingToObject","cubic","a","b","c","d","start_gradient","end_gradient","start","end","f","mid","xEst","Math","abs","Start","Middle","End","step","count","pos","stepSize","presets","ease","ease-in","ease-out","ease-in-out","step-start","step-middle","step-end","styleForCleaning","numberString","cubicBezierRe","RegExp","step1Re","step2Re","document","createElement","style","animationTimingFunction","normalizedEasing","cubicData","exec","apply","slice","map","Number","step1Data","step2Data","middle","repeatedDuration","PhaseNone","PhaseBefore","PhaseAfter","PhaseActive","calculatePhase","localTime","endTime","min","calculateActiveTime","fillMode","phase","calculateOverallProgress","iterationDuration","activeTime","overallProgress","calculateSimpleIterationProgress","simpleIterationProgress","Infinity","calculateCurrentIteration","floor","calculateDirectedProgress","playbackDirection","currentIteration","currentDirection","calculateIterationProgress","directedProgress","shorthandToLonghand","background","border","borderBottom","borderColor","borderLeft","borderRadius","borderRight","borderTop","borderWidth","flex","font","margin","outline","padding","shorthandExpanderElem","createElementNS","borderWidthAliases","thin","medium","thick","aliases","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopWidth","fontSize","xx-small","x-small","small","large","x-large","xx-large","fontWeight","normal","bold","outlineWidth","textShadow","none","boxShadow","antiAlias","isNotAnimatable","lastIndexOf","expandShorthandAndAntiAlias","result","longProperties","i","longProperty","longhandValue","convertToArrayForm","effectInput","normalizedEffectInput","values","Array","isArray","keyframe","numKeyframes","length","offset","composite","push","sort","normalizeKeyframes","window","Symbol","iterator","from","keyframes","originalKeyframe","memberValue","isFinite","type","DOMException","NOT_SUPPORTED_ERR","name","message","everyFrameHasOffset","previousOffset","filter","spaceKeyframes","previousIndex","j","silenced","feature","date","advice","plural","auxVerb","today","Date","expiry","setMonth","getMonth","console","warn","toDateString","deprecated","Error","animate","oncancel","now","performance","AnimationCancelEvent","target","currentTime","timelineTime","bubbles","cancelable","currentTarget","defaultPrevented","eventPhase","Event","AT_TARGET","timeStamp","originalElementAnimate","Element","options","animation","call","_cancelHandlers","originalCancel","cancel","event","handlers","concat","setTimeout","handler","originalAddEventListener","addEventListener","originalRemoveEventListener","removeEventListener","index","splice","element","documentElement","animated","originalOpacity","getComputedStyle","getPropertyValue","testOpacity","opacity","error"],"mappings":"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AA;;AAAAA,iBAAAA,CAAAA,CAAAA,CAAAA,EAAAA;AAAAA,iBAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA;;AAAAA,iBAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,eAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,YAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAAAA;;AAAAA,eAAAA,IAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,iBAAAA,IA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","sourcesContent":["// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n//     You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//     See the License for the specific language governing permissions and\n// limitations under the License.\n\n!function(){var a={},b={};!function(a,b){function c(a){if(\"number\"==typeof a)return a;var b={};for(var c in a)b[c]=a[c];return b}function d(){this._delay=0,this._endDelay=0,this._fill=\"none\",this._iterationStart=0,this._iterations=1,this._duration=0,this._playbackRate=1,this._direction=\"normal\",this._easing=\"linear\",this._easingFunction=x}function e(){return a.isDeprecated(\"Invalid timing inputs\",\"2016-03-02\",\"TypeError exceptions will be thrown instead.\",!0)}function f(b,c,e){var f=new d;return c&&(f.fill=\"both\",f.duration=\"auto\"),\"number\"!=typeof b||isNaN(b)?void 0!==b&&Object.getOwnPropertyNames(b).forEach(function(c){if(\"auto\"!=b[c]){if((\"number\"==typeof f[c]||\"duration\"==c)&&(\"number\"!=typeof b[c]||isNaN(b[c])))return;if(\"fill\"==c&&-1==v.indexOf(b[c]))return;if(\"direction\"==c&&-1==w.indexOf(b[c]))return;if(\"playbackRate\"==c&&1!==b[c]&&a.isDeprecated(\"AnimationEffectTiming.playbackRate\",\"2014-11-28\",\"Use Animation.playbackRate instead.\"))return;f[c]=b[c]}}):f.duration=b,f}function g(a){return\"number\"==typeof a&&(a=isNaN(a)?{duration:0}:{duration:a}),a}function h(b,c){return b=a.numericTimingToObject(b),f(b,c)}function i(a,b,c,d){return a<0||a>1||c<0||c>1?x:function(e){function f(a,b,c){return 3*a*(1-c)*(1-c)*c+3*b*(1-c)*c*c+c*c*c}if(e<=0){var g=0;return a>0?g=b/a:!b&&c>0&&(g=d/c),g*e}if(e>=1){var h=0;return c<1?h=(d-1)/(c-1):1==c&&a<1&&(h=(b-1)/(a-1)),1+h*(e-1)}for(var i=0,j=1;i<j;){var k=(i+j)/2,l=f(a,c,k);if(Math.abs(e-l)<1e-5)return f(b,d,k);l<e?i=k:j=k}return f(b,d,k)}}function j(a,b){return function(c){if(c>=1)return 1;var d=1/a;return(c+=b*d)-c%d}}function k(a){C||(C=document.createElement(\"div\").style),C.animationTimingFunction=\"\",C.animationTimingFunction=a;var b=C.animationTimingFunction;if(\"\"==b&&e())throw new TypeError(a+\" is not a valid value for easing\");return b}function l(a){if(\"linear\"==a)return x;var b=E.exec(a);if(b)return i.apply(this,b.slice(1).map(Number));var c=F.exec(a);if(c)return j(Number(c[1]),A);var d=G.exec(a);return d?j(Number(d[1]),{start:y,middle:z,end:A}[d[2]]):B[a]||x}function m(a){return Math.abs(n(a)/a.playbackRate)}function n(a){return 0===a.duration||0===a.iterations?0:a.duration*a.iterations}function o(a,b,c){if(null==b)return H;var d=c.delay+a+c.endDelay;return b<Math.min(c.delay,d)?I:b>=Math.min(c.delay+a,d)?J:K}function p(a,b,c,d,e){switch(d){case I:return\"backwards\"==b||\"both\"==b?0:null;case K:return c-e;case J:return\"forwards\"==b||\"both\"==b?a:null;case H:return null}}function q(a,b,c,d,e){var f=e;return 0===a?b!==I&&(f+=c):f+=d/a,f}function r(a,b,c,d,e,f){var g=a===1/0?b%1:a%1;return 0!==g||c!==J||0===d||0===e&&0!==f||(g=1),g}function s(a,b,c,d){return a===J&&b===1/0?1/0:1===c?Math.floor(d)-1:Math.floor(d)}function t(a,b,c){var d=a;if(\"normal\"!==a&&\"reverse\"!==a){var e=b;\"alternate-reverse\"===a&&(e+=1),d=\"normal\",e!==1/0&&e%2!=0&&(d=\"reverse\")}return\"normal\"===d?c:1-c}function u(a,b,c){var d=o(a,b,c),e=p(a,c.fill,b,d,c.delay);if(null===e)return null;var f=q(c.duration,d,c.iterations,e,c.iterationStart),g=r(f,c.iterationStart,d,c.iterations,e,c.duration),h=s(d,c.iterations,g,f),i=t(c.direction,h,g);return c._easingFunction(i)}var v=\"backwards|forwards|both|none\".split(\"|\"),w=\"reverse|alternate|alternate-reverse\".split(\"|\"),x=function(a){return a};d.prototype={_setMember:function(b,c){this[\"_\"+b]=c,this._effect&&(this._effect._timingInput[b]=c,this._effect._timing=a.normalizeTimingInput(this._effect._timingInput),this._effect.activeDuration=a.calculateActiveDuration(this._effect._timing),this._effect._animation&&this._effect._animation._rebuildUnderlyingAnimation())},get playbackRate(){return this._playbackRate},set delay(a){this._setMember(\"delay\",a)},get delay(){return this._delay},set endDelay(a){this._setMember(\"endDelay\",a)},get endDelay(){return this._endDelay},set fill(a){this._setMember(\"fill\",a)},get fill(){return this._fill},set iterationStart(a){if((isNaN(a)||a<0)&&e())throw new TypeError(\"iterationStart must be a non-negative number, received: \"+a);this._setMember(\"iterationStart\",a)},get iterationStart(){return this._iterationStart},set duration(a){if(\"auto\"!=a&&(isNaN(a)||a<0)&&e())throw new TypeError(\"duration must be non-negative or auto, received: \"+a);this._setMember(\"duration\",a)},get duration(){return this._duration},set direction(a){this._setMember(\"direction\",a)},get direction(){return this._direction},set easing(a){this._easingFunction=l(k(a)),this._setMember(\"easing\",a)},get easing(){return this._easing},set iterations(a){if((isNaN(a)||a<0)&&e())throw new TypeError(\"iterations must be non-negative, received: \"+a);this._setMember(\"iterations\",a)},get iterations(){return this._iterations}};var y=1,z=.5,A=0,B={ease:i(.25,.1,.25,1),\"ease-in\":i(.42,0,1,1),\"ease-out\":i(0,0,.58,1),\"ease-in-out\":i(.42,0,.58,1),\"step-start\":j(1,y),\"step-middle\":j(1,z),\"step-end\":j(1,A)},C=null,D=\"\\\\s*(-?\\\\d+\\\\.?\\\\d*|-?\\\\.\\\\d+)\\\\s*\",E=new RegExp(\"cubic-bezier\\\\(\"+D+\",\"+D+\",\"+D+\",\"+D+\"\\\\)\"),F=/steps\\(\\s*(\\d+)\\s*\\)/,G=/steps\\(\\s*(\\d+)\\s*,\\s*(start|middle|end)\\s*\\)/,H=0,I=1,J=2,K=3;a.cloneTimingInput=c,a.makeTiming=f,a.numericTimingToObject=g,a.normalizeTimingInput=h,a.calculateActiveDuration=m,a.calculateIterationProgress=u,a.calculatePhase=o,a.normalizeEasing=k,a.parseEasingFunction=l}(a),function(a,b){function c(a,b){return a in k?k[a][b]||b:b}function d(a){return\"display\"===a||0===a.lastIndexOf(\"animation\",0)||0===a.lastIndexOf(\"transition\",0)}function e(a,b,e){if(!d(a)){var f=h[a];if(f){i.style[a]=b;for(var g in f){var j=f[g],k=i.style[j];e[j]=c(j,k)}}else e[a]=c(a,b)}}function f(a){var b=[];for(var c in a)if(!(c in[\"easing\",\"offset\",\"composite\"])){var d=a[c];Array.isArray(d)||(d=[d]);for(var e,f=d.length,g=0;g<f;g++)e={},e.offset=\"offset\"in a?a.offset:1==f?1:g/(f-1),\"easing\"in a&&(e.easing=a.easing),\"composite\"in a&&(e.composite=a.composite),e[c]=d[g],b.push(e)}return b.sort(function(a,b){return a.offset-b.offset}),b}function g(b){function c(){var a=d.length;null==d[a-1].offset&&(d[a-1].offset=1),a>1&&null==d[0].offset&&(d[0].offset=0);for(var b=0,c=d[0].offset,e=1;e<a;e++){var f=d[e].offset;if(null!=f){for(var g=1;g<e-b;g++)d[b+g].offset=c+(f-c)*g/(e-b);b=e,c=f}}}if(null==b)return[];window.Symbol&&Symbol.iterator&&Array.prototype.from&&b[Symbol.iterator]&&(b=Array.from(b)),Array.isArray(b)||(b=f(b));for(var d=b.map(function(b){var c={};for(var d in b){var f=b[d];if(\"offset\"==d){if(null!=f){if(f=Number(f),!isFinite(f))throw new TypeError(\"Keyframe offsets must be numbers.\");if(f<0||f>1)throw new TypeError(\"Keyframe offsets must be between 0 and 1.\")}}else if(\"composite\"==d){if(\"add\"==f||\"accumulate\"==f)throw{type:DOMException.NOT_SUPPORTED_ERR,name:\"NotSupportedError\",message:\"add compositing is not supported\"};if(\"replace\"!=f)throw new TypeError(\"Invalid composite mode \"+f+\".\")}else f=\"easing\"==d?a.normalizeEasing(f):\"\"+f;e(d,f,c)}return void 0==c.offset&&(c.offset=null),void 0==c.easing&&(c.easing=\"linear\"),c}),g=!0,h=-1/0,i=0;i<d.length;i++){var j=d[i].offset;if(null!=j){if(j<h)throw new TypeError(\"Keyframes are not loosely sorted by offset. Sort or specify offsets.\");h=j}else g=!1}return d=d.filter(function(a){return a.offset>=0&&a.offset<=1}),g||c(),d}var h={background:[\"backgroundImage\",\"backgroundPosition\",\"backgroundSize\",\"backgroundRepeat\",\"backgroundAttachment\",\"backgroundOrigin\",\"backgroundClip\",\"backgroundColor\"],border:[\"borderTopColor\",\"borderTopStyle\",\"borderTopWidth\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderBottomColor\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\"],borderBottom:[\"borderBottomWidth\",\"borderBottomStyle\",\"borderBottomColor\"],borderColor:[\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\"],borderLeft:[\"borderLeftWidth\",\"borderLeftStyle\",\"borderLeftColor\"],borderRadius:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],borderRight:[\"borderRightWidth\",\"borderRightStyle\",\"borderRightColor\"],borderTop:[\"borderTopWidth\",\"borderTopStyle\",\"borderTopColor\"],borderWidth:[\"borderTopWidth\",\"borderRightWidth\",\"borderBottomWidth\",\"borderLeftWidth\"],flex:[\"flexGrow\",\"flexShrink\",\"flexBasis\"],font:[\"fontFamily\",\"fontSize\",\"fontStyle\",\"fontVariant\",\"fontWeight\",\"lineHeight\"],margin:[\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\"],outline:[\"outlineColor\",\"outlineStyle\",\"outlineWidth\"],padding:[\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\"]},i=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"div\"),j={thin:\"1px\",medium:\"3px\",thick:\"5px\"},k={borderBottomWidth:j,borderLeftWidth:j,borderRightWidth:j,borderTopWidth:j,fontSize:{\"xx-small\":\"60%\",\"x-small\":\"75%\",small:\"89%\",medium:\"100%\",large:\"120%\",\"x-large\":\"150%\",\"xx-large\":\"200%\"},fontWeight:{normal:\"400\",bold:\"700\"},outlineWidth:j,textShadow:{none:\"0px 0px 0px transparent\"},boxShadow:{none:\"0px 0px 0px 0px transparent\"}};a.convertToArrayForm=f,a.normalizeKeyframes=g}(a),function(a){var b={};a.isDeprecated=function(a,c,d,e){var f=e?\"are\":\"is\",g=new Date,h=new Date(c);return h.setMonth(h.getMonth()+3),!(g<h&&(a in b||console.warn(\"Web Animations: \"+a+\" \"+f+\" deprecated and will stop working on \"+h.toDateString()+\". \"+d),b[a]=!0,1))},a.deprecated=function(b,c,d,e){var f=e?\"are\":\"is\";if(a.isDeprecated(b,c,d,e))throw new Error(b+\" \"+f+\" no longer supported. \"+d)}}(a),function(){if(document.documentElement.animate){var c=document.documentElement.animate([],0),d=!0;if(c&&(d=!1,\"play|currentTime|pause|reverse|playbackRate|cancel|finish|startTime|playState\".split(\"|\").forEach(function(a){void 0===c[a]&&(d=!0)})),!d)return}!function(a,b,c){function d(a){for(var b={},c=0;c<a.length;c++)for(var d in a[c])if(\"offset\"!=d&&\"easing\"!=d&&\"composite\"!=d){var e={offset:a[c].offset,easing:a[c].easing,value:a[c][d]};b[d]=b[d]||[],b[d].push(e)}for(var f in b){var g=b[f];if(0!=g[0].offset||1!=g[g.length-1].offset)throw{type:DOMException.NOT_SUPPORTED_ERR,name:\"NotSupportedError\",message:\"Partial keyframes are not supported\"}}return b}function e(c){var d=[];for(var e in c)for(var f=c[e],g=0;g<f.length-1;g++){var h=g,i=g+1,j=f[h].offset,k=f[i].offset,l=j,m=k;0==g&&(l=-1/0,0==k&&(i=h)),g==f.length-2&&(m=1/0,1==j&&(h=i)),d.push({applyFrom:l,applyTo:m,startOffset:f[h].offset,endOffset:f[i].offset,easingFunction:a.parseEasingFunction(f[h].easing),property:e,interpolation:b.propertyInterpolation(e,f[h].value,f[i].value)})}return d.sort(function(a,b){return a.startOffset-b.startOffset}),d}b.convertEffectInput=function(c){var f=a.normalizeKeyframes(c),g=d(f),h=e(g);return function(a,c){if(null!=c)h.filter(function(a){return c>=a.applyFrom&&c<a.applyTo}).forEach(function(d){var e=c-d.startOffset,f=d.endOffset-d.startOffset,g=0==f?0:d.easingFunction(e/f);b.apply(a,d.property,d.interpolation(g))});else for(var d in g)\"offset\"!=d&&\"easing\"!=d&&\"composite\"!=d&&b.clear(a,d)}}}(a,b),function(a,b,c){function d(a){return a.replace(/-(.)/g,function(a,b){return b.toUpperCase()})}function e(a,b,c){h[c]=h[c]||[],h[c].push([a,b])}function f(a,b,c){for(var f=0;f<c.length;f++){e(a,b,d(c[f]))}}function g(c,e,f){var g=c;/-/.test(c)&&!a.isDeprecated(\"Hyphenated property names\",\"2016-03-22\",\"Use camelCase instead.\",!0)&&(g=d(c)),\"initial\"!=e&&\"initial\"!=f||(\"initial\"==e&&(e=i[g]),\"initial\"==f&&(f=i[g]));for(var j=e==f?[]:h[g],k=0;j&&k<j.length;k++){var l=j[k][0](e),m=j[k][0](f);if(void 0!==l&&void 0!==m){var n=j[k][1](l,m);if(n){var o=b.Interpolation.apply(null,n);return function(a){return 0==a?e:1==a?f:o(a)}}}}return b.Interpolation(!1,!0,function(a){return a?f:e})}var h={};b.addPropertiesHandler=f;var i={backgroundColor:\"transparent\",backgroundPosition:\"0% 0%\",borderBottomColor:\"currentColor\",borderBottomLeftRadius:\"0px\",borderBottomRightRadius:\"0px\",borderBottomWidth:\"3px\",borderLeftColor:\"currentColor\",borderLeftWidth:\"3px\",borderRightColor:\"currentColor\",borderRightWidth:\"3px\",borderSpacing:\"2px\",borderTopColor:\"currentColor\",borderTopLeftRadius:\"0px\",borderTopRightRadius:\"0px\",borderTopWidth:\"3px\",bottom:\"auto\",clip:\"rect(0px, 0px, 0px, 0px)\",color:\"black\",fontSize:\"100%\",fontWeight:\"400\",height:\"auto\",left:\"auto\",letterSpacing:\"normal\",lineHeight:\"120%\",marginBottom:\"0px\",marginLeft:\"0px\",marginRight:\"0px\",marginTop:\"0px\",maxHeight:\"none\",maxWidth:\"none\",minHeight:\"0px\",minWidth:\"0px\",opacity:\"1.0\",outlineColor:\"invert\",outlineOffset:\"0px\",outlineWidth:\"3px\",paddingBottom:\"0px\",paddingLeft:\"0px\",paddingRight:\"0px\",paddingTop:\"0px\",right:\"auto\",strokeDasharray:\"none\",strokeDashoffset:\"0px\",textIndent:\"0px\",textShadow:\"0px 0px 0px transparent\",top:\"auto\",transform:\"\",verticalAlign:\"0px\",visibility:\"visible\",width:\"auto\",wordSpacing:\"normal\",zIndex:\"auto\"};b.propertyInterpolation=g}(a,b),function(a,b,c){function d(b){var c=a.calculateActiveDuration(b),d=function(d){return a.calculateIterationProgress(c,d,b)};return d._totalDuration=b.delay+c+b.endDelay,d}b.KeyframeEffect=function(c,e,f,g){var h,i=d(a.normalizeTimingInput(f)),j=b.convertEffectInput(e),k=function(){j(c,h)};return k._update=function(a){return null!==(h=i(a))},k._clear=function(){j(c,null)},k._hasSameTarget=function(a){return c===a},k._target=c,k._totalDuration=i._totalDuration,k._id=g,k}}(a,b),function(a,b){function c(a,b){return!(!b.namespaceURI||-1==b.namespaceURI.indexOf(\"/svg\"))&&(g in a||(a[g]=/Trident|MSIE|IEMobile|Edge|Android 4/i.test(a.navigator.userAgent)),a[g])}function d(a,b,c){c.enumerable=!0,c.configurable=!0,Object.defineProperty(a,b,c)}function e(a){this._element=a,this._surrogateStyle=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"div\").style,this._style=a.style,this._length=0,this._isAnimatedProperty={},this._updateSvgTransformAttr=c(window,a),this._savedTransformAttr=null;for(var b=0;b<this._style.length;b++){var d=this._style[b];this._surrogateStyle[d]=this._style[d]}this._updateIndices()}function f(a){if(!a._webAnimationsPatchedStyle){var b=new e(a);try{d(a,\"style\",{get:function(){return b}})}catch(b){a.style._set=function(b,c){a.style[b]=c},a.style._clear=function(b){a.style[b]=\"\"}}a._webAnimationsPatchedStyle=a.style}}var g=\"_webAnimationsUpdateSvgTransformAttr\",h={cssText:1,length:1,parentRule:1},i={getPropertyCSSValue:1,getPropertyPriority:1,getPropertyValue:1,item:1,removeProperty:1,setProperty:1},j={removeProperty:1,setProperty:1};e.prototype={get cssText(){return this._surrogateStyle.cssText},set cssText(a){for(var b={},c=0;c<this._surrogateStyle.length;c++)b[this._surrogateStyle[c]]=!0;this._surrogateStyle.cssText=a,this._updateIndices();for(var c=0;c<this._surrogateStyle.length;c++)b[this._surrogateStyle[c]]=!0;for(var d in b)this._isAnimatedProperty[d]||this._style.setProperty(d,this._surrogateStyle.getPropertyValue(d))},get length(){return this._surrogateStyle.length},get parentRule(){return this._style.parentRule},_updateIndices:function(){for(;this._length<this._surrogateStyle.length;)Object.defineProperty(this,this._length,{configurable:!0,enumerable:!1,get:function(a){return function(){return this._surrogateStyle[a]}}(this._length)}),this._length++;for(;this._length>this._surrogateStyle.length;)this._length--,Object.defineProperty(this,this._length,{configurable:!0,enumerable:!1,value:void 0})},_set:function(b,c){this._style[b]=c,this._isAnimatedProperty[b]=!0,this._updateSvgTransformAttr&&\"transform\"==a.unprefixedPropertyName(b)&&(null==this._savedTransformAttr&&(this._savedTransformAttr=this._element.getAttribute(\"transform\")),this._element.setAttribute(\"transform\",a.transformToSvgMatrix(c)))},_clear:function(b){this._style[b]=this._surrogateStyle[b],this._updateSvgTransformAttr&&\"transform\"==a.unprefixedPropertyName(b)&&(this._savedTransformAttr?this._element.setAttribute(\"transform\",this._savedTransformAttr):this._element.removeAttribute(\"transform\"),this._savedTransformAttr=null),delete this._isAnimatedProperty[b]}};for(var k in i)e.prototype[k]=function(a,b){return function(){var c=this._surrogateStyle[a].apply(this._surrogateStyle,arguments);return b&&(this._isAnimatedProperty[arguments[0]]||this._style[a].apply(this._style,arguments),this._updateIndices()),c}}(k,k in j);for(var l in document.documentElement.style)l in h||l in i||function(a){d(e.prototype,a,{get:function(){return this._surrogateStyle[a]},set:function(b){this._surrogateStyle[a]=b,this._updateIndices(),this._isAnimatedProperty[a]||(this._style[a]=b)}})}(l);a.apply=function(b,c,d){f(b),b.style._set(a.propertyName(c),d)},a.clear=function(b,c){b._webAnimationsPatchedStyle&&b.style._clear(a.propertyName(c))}}(b),function(a){window.Element.prototype.animate=function(b,c){var d=\"\";return c&&c.id&&(d=c.id),a.timeline._play(a.KeyframeEffect(this,b,c,d))}}(b),function(a,b){function c(a,b,d){if(\"number\"==typeof a&&\"number\"==typeof b)return a*(1-d)+b*d;if(\"boolean\"==typeof a&&\"boolean\"==typeof b)return d<.5?a:b;if(a.length==b.length){for(var e=[],f=0;f<a.length;f++)e.push(c(a[f],b[f],d));return e}throw\"Mismatched interpolation arguments \"+a+\":\"+b}a.Interpolation=function(a,b,d){return function(e){return d(c(a,b,e))}}}(b),function(a,b){function c(a,b,c){return Math.max(Math.min(a,c),b)}function d(b,d,e){var f=a.dot(b,d);f=c(f,-1,1);var g=[];if(1===f)g=b;else for(var h=Math.acos(f),i=1*Math.sin(e*h)/Math.sqrt(1-f*f),j=0;j<4;j++)g.push(b[j]*(Math.cos(e*h)-f*i)+d[j]*i);return g}var e=function(){function a(a,b){for(var c=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],d=0;d<4;d++)for(var e=0;e<4;e++)for(var f=0;f<4;f++)c[d][e]+=b[d][f]*a[f][e];return c}function b(a){return 0==a[0][2]&&0==a[0][3]&&0==a[1][2]&&0==a[1][3]&&0==a[2][0]&&0==a[2][1]&&1==a[2][2]&&0==a[2][3]&&0==a[3][2]&&1==a[3][3]}function c(c,d,e,f,g){for(var h=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],i=0;i<4;i++)h[i][3]=g[i];for(var i=0;i<3;i++)for(var j=0;j<3;j++)h[3][i]+=c[j]*h[j][i];var k=f[0],l=f[1],m=f[2],n=f[3],o=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];o[0][0]=1-2*(l*l+m*m),o[0][1]=2*(k*l-m*n),o[0][2]=2*(k*m+l*n),o[1][0]=2*(k*l+m*n),o[1][1]=1-2*(k*k+m*m),o[1][2]=2*(l*m-k*n),o[2][0]=2*(k*m-l*n),o[2][1]=2*(l*m+k*n),o[2][2]=1-2*(k*k+l*l),h=a(h,o);var p=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];e[2]&&(p[2][1]=e[2],h=a(h,p)),e[1]&&(p[2][1]=0,p[2][0]=e[0],h=a(h,p)),e[0]&&(p[2][0]=0,p[1][0]=e[0],h=a(h,p));for(var i=0;i<3;i++)for(var j=0;j<3;j++)h[i][j]*=d[i];return b(h)?[h[0][0],h[0][1],h[1][0],h[1][1],h[3][0],h[3][1]]:h[0].concat(h[1],h[2],h[3])}return c}();a.composeMatrix=e,a.quat=d}(b),function(a,b,c){a.sequenceNumber=0;var d=function(a,b,c){this.target=a,this.currentTime=b,this.timelineTime=c,this.type=\"finish\",this.bubbles=!1,this.cancelable=!1,this.currentTarget=a,this.defaultPrevented=!1,this.eventPhase=Event.AT_TARGET,this.timeStamp=Date.now()};b.Animation=function(b){this.id=\"\",b&&b._id&&(this.id=b._id),this._sequenceNumber=a.sequenceNumber++,this._currentTime=0,this._startTime=null,this._paused=!1,this._playbackRate=1,this._inTimeline=!0,this._finishedFlag=!0,this.onfinish=null,this._finishHandlers=[],this._effect=b,this._inEffect=this._effect._update(0),this._idle=!0,this._currentTimePending=!1},b.Animation.prototype={_ensureAlive:function(){this.playbackRate<0&&0===this.currentTime?this._inEffect=this._effect._update(-1):this._inEffect=this._effect._update(this.currentTime),this._inTimeline||!this._inEffect&&this._finishedFlag||(this._inTimeline=!0,b.timeline._animations.push(this))},_tickCurrentTime:function(a,b){a!=this._currentTime&&(this._currentTime=a,this._isFinished&&!b&&(this._currentTime=this._playbackRate>0?this._totalDuration:0),this._ensureAlive())},get currentTime(){return this._idle||this._currentTimePending?null:this._currentTime},set currentTime(a){a=+a,isNaN(a)||(b.restart(),this._paused||null==this._startTime||(this._startTime=this._timeline.currentTime-a/this._playbackRate),this._currentTimePending=!1,this._currentTime!=a&&(this._idle&&(this._idle=!1,this._paused=!0),this._tickCurrentTime(a,!0),b.applyDirtiedAnimation(this)))},get startTime(){return this._startTime},set startTime(a){a=+a,isNaN(a)||this._paused||this._idle||(this._startTime=a,this._tickCurrentTime((this._timeline.currentTime-this._startTime)*this.playbackRate),b.applyDirtiedAnimation(this))},get playbackRate(){return this._playbackRate},set playbackRate(a){if(a!=this._playbackRate){var c=this.currentTime;this._playbackRate=a,this._startTime=null,\"paused\"!=this.playState&&\"idle\"!=this.playState&&(this._finishedFlag=!1,this._idle=!1,this._ensureAlive(),b.applyDirtiedAnimation(this)),null!=c&&(this.currentTime=c)}},get _isFinished(){return!this._idle&&(this._playbackRate>0&&this._currentTime>=this._totalDuration||this._playbackRate<0&&this._currentTime<=0)},get _totalDuration(){return this._effect._totalDuration},get playState(){return this._idle?\"idle\":null==this._startTime&&!this._paused&&0!=this.playbackRate||this._currentTimePending?\"pending\":this._paused?\"paused\":this._isFinished?\"finished\":\"running\"},_rewind:function(){if(this._playbackRate>=0)this._currentTime=0;else{if(!(this._totalDuration<1/0))throw new DOMException(\"Unable to rewind negative playback rate animation with infinite duration\",\"InvalidStateError\");this._currentTime=this._totalDuration}},play:function(){this._paused=!1,(this._isFinished||this._idle)&&(this._rewind(),this._startTime=null),this._finishedFlag=!1,this._idle=!1,this._ensureAlive(),b.applyDirtiedAnimation(this)},pause:function(){this._isFinished||this._paused||this._idle?this._idle&&(this._rewind(),this._idle=!1):this._currentTimePending=!0,this._startTime=null,this._paused=!0},finish:function(){this._idle||(this.currentTime=this._playbackRate>0?this._totalDuration:0,this._startTime=this._totalDuration-this.currentTime,this._currentTimePending=!1,b.applyDirtiedAnimation(this))},cancel:function(){this._inEffect&&(this._inEffect=!1,this._idle=!0,this._paused=!1,this._finishedFlag=!0,this._currentTime=0,this._startTime=null,this._effect._update(null),b.applyDirtiedAnimation(this))},reverse:function(){this.playbackRate*=-1,this.play()},addEventListener:function(a,b){\"function\"==typeof b&&\"finish\"==a&&this._finishHandlers.push(b)},removeEventListener:function(a,b){if(\"finish\"==a){var c=this._finishHandlers.indexOf(b);c>=0&&this._finishHandlers.splice(c,1)}},_fireEvents:function(a){if(this._isFinished){if(!this._finishedFlag){var b=new d(this,this._currentTime,a),c=this._finishHandlers.concat(this.onfinish?[this.onfinish]:[]);setTimeout(function(){c.forEach(function(a){a.call(b.target,b)})},0),this._finishedFlag=!0}}else this._finishedFlag=!1},_tick:function(a,b){this._idle||this._paused||(null==this._startTime?b&&(this.startTime=a-this._currentTime/this.playbackRate):this._isFinished||this._tickCurrentTime((a-this._startTime)*this.playbackRate)),b&&(this._currentTimePending=!1,this._fireEvents(a))},get _needsTick(){return this.playState in{pending:1,running:1}||!this._finishedFlag},_targetAnimations:function(){var a=this._effect._target;return a._activeAnimations||(a._activeAnimations=[]),a._activeAnimations},_markTarget:function(){var a=this._targetAnimations();-1===a.indexOf(this)&&a.push(this)},_unmarkTarget:function(){var a=this._targetAnimations(),b=a.indexOf(this);-1!==b&&a.splice(b,1)}}}(a,b),function(a,b,c){function d(a){var b=j;j=[],a<q.currentTime&&(a=q.currentTime),q._animations.sort(e),q._animations=h(a,!0,q._animations)[0],b.forEach(function(b){b[1](a)}),g(),l=void 0}function e(a,b){return a._sequenceNumber-b._sequenceNumber}function f(){this._animations=[],this.currentTime=window.performance&&performance.now?performance.now():0}function g(){o.forEach(function(a){a()}),o.length=0}function h(a,c,d){p=!0,n=!1,b.timeline.currentTime=a,m=!1;var e=[],f=[],g=[],h=[];return d.forEach(function(b){b._tick(a,c),b._inEffect?(f.push(b._effect),b._markTarget()):(e.push(b._effect),b._unmarkTarget()),b._needsTick&&(m=!0);var d=b._inEffect||b._needsTick;b._inTimeline=d,d?g.push(b):h.push(b)}),o.push.apply(o,e),o.push.apply(o,f),m&&requestAnimationFrame(function(){}),p=!1,[g,h]}var i=window.requestAnimationFrame,j=[],k=0;window.requestAnimationFrame=function(a){var b=k++;return 0==j.length&&i(d),j.push([b,a]),b},window.cancelAnimationFrame=function(a){j.forEach(function(b){b[0]==a&&(b[1]=function(){})})},f.prototype={_play:function(c){c._timing=a.normalizeTimingInput(c.timing);var d=new b.Animation(c);return d._idle=!1,d._timeline=this,this._animations.push(d),b.restart(),b.applyDirtiedAnimation(d),d}};var l=void 0,m=!1,n=!1;b.restart=function(){return m||(m=!0,requestAnimationFrame(function(){}),n=!0),n},b.applyDirtiedAnimation=function(a){if(!p){a._markTarget();var c=a._targetAnimations();c.sort(e),h(b.timeline.currentTime,!1,c.slice())[1].forEach(function(a){var b=q._animations.indexOf(a);-1!==b&&q._animations.splice(b,1)}),g()}};var o=[],p=!1,q=new f;b.timeline=q}(a,b),function(a,b){function c(a,b){for(var c=0,d=0;d<a.length;d++)c+=a[d]*b[d];return c}function d(a,b){return[a[0]*b[0]+a[4]*b[1]+a[8]*b[2]+a[12]*b[3],a[1]*b[0]+a[5]*b[1]+a[9]*b[2]+a[13]*b[3],a[2]*b[0]+a[6]*b[1]+a[10]*b[2]+a[14]*b[3],a[3]*b[0]+a[7]*b[1]+a[11]*b[2]+a[15]*b[3],a[0]*b[4]+a[4]*b[5]+a[8]*b[6]+a[12]*b[7],a[1]*b[4]+a[5]*b[5]+a[9]*b[6]+a[13]*b[7],a[2]*b[4]+a[6]*b[5]+a[10]*b[6]+a[14]*b[7],a[3]*b[4]+a[7]*b[5]+a[11]*b[6]+a[15]*b[7],a[0]*b[8]+a[4]*b[9]+a[8]*b[10]+a[12]*b[11],a[1]*b[8]+a[5]*b[9]+a[9]*b[10]+a[13]*b[11],a[2]*b[8]+a[6]*b[9]+a[10]*b[10]+a[14]*b[11],a[3]*b[8]+a[7]*b[9]+a[11]*b[10]+a[15]*b[11],a[0]*b[12]+a[4]*b[13]+a[8]*b[14]+a[12]*b[15],a[1]*b[12]+a[5]*b[13]+a[9]*b[14]+a[13]*b[15],a[2]*b[12]+a[6]*b[13]+a[10]*b[14]+a[14]*b[15],a[3]*b[12]+a[7]*b[13]+a[11]*b[14]+a[15]*b[15]]}function e(a){var b=a.rad||0;return((a.deg||0)/360+(a.grad||0)/400+(a.turn||0))*(2*Math.PI)+b}function f(a){switch(a.t){case\"rotatex\":var b=e(a.d[0]);return[1,0,0,0,0,Math.cos(b),Math.sin(b),0,0,-Math.sin(b),Math.cos(b),0,0,0,0,1];case\"rotatey\":var b=e(a.d[0]);return[Math.cos(b),0,-Math.sin(b),0,0,1,0,0,Math.sin(b),0,Math.cos(b),0,0,0,0,1];case\"rotate\":case\"rotatez\":var b=e(a.d[0]);return[Math.cos(b),Math.sin(b),0,0,-Math.sin(b),Math.cos(b),0,0,0,0,1,0,0,0,0,1];case\"rotate3d\":var c=a.d[0],d=a.d[1],f=a.d[2],b=e(a.d[3]),g=c*c+d*d+f*f;if(0===g)c=1,d=0,f=0;else if(1!==g){var h=Math.sqrt(g);c/=h,d/=h,f/=h}var i=Math.sin(b/2),j=i*Math.cos(b/2),k=i*i;return[1-2*(d*d+f*f)*k,2*(c*d*k+f*j),2*(c*f*k-d*j),0,2*(c*d*k-f*j),1-2*(c*c+f*f)*k,2*(d*f*k+c*j),0,2*(c*f*k+d*j),2*(d*f*k-c*j),1-2*(c*c+d*d)*k,0,0,0,0,1];case\"scale\":return[a.d[0],0,0,0,0,a.d[1],0,0,0,0,1,0,0,0,0,1];case\"scalex\":return[a.d[0],0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];case\"scaley\":return[1,0,0,0,0,a.d[0],0,0,0,0,1,0,0,0,0,1];case\"scalez\":return[1,0,0,0,0,1,0,0,0,0,a.d[0],0,0,0,0,1];case\"scale3d\":return[a.d[0],0,0,0,0,a.d[1],0,0,0,0,a.d[2],0,0,0,0,1];case\"skew\":var l=e(a.d[0]),m=e(a.d[1]);return[1,Math.tan(m),0,0,Math.tan(l),1,0,0,0,0,1,0,0,0,0,1];case\"skewx\":var b=e(a.d[0]);return[1,0,0,0,Math.tan(b),1,0,0,0,0,1,0,0,0,0,1];case\"skewy\":var b=e(a.d[0]);return[1,Math.tan(b),0,0,0,1,0,0,0,0,1,0,0,0,0,1];case\"translate\":var c=a.d[0].px||0,d=a.d[1].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,d,0,1];case\"translatex\":var c=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,0,0,1];case\"translatey\":var d=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,0,d,0,1];case\"translatez\":var f=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,f,1];case\"translate3d\":var c=a.d[0].px||0,d=a.d[1].px||0,f=a.d[2].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,d,f,1];case\"perspective\":return[1,0,0,0,0,1,0,0,0,0,1,a.d[0].px?-1/a.d[0].px:0,0,0,0,1];case\"matrix\":return[a.d[0],a.d[1],0,0,a.d[2],a.d[3],0,0,0,0,1,0,a.d[4],a.d[5],0,1];case\"matrix3d\":return a.d}}function g(a){return 0===a.length?[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]:a.map(f).reduce(d)}function h(a){return[i(g(a))]}var i=function(){function a(a){return a[0][0]*a[1][1]*a[2][2]+a[1][0]*a[2][1]*a[0][2]+a[2][0]*a[0][1]*a[1][2]-a[0][2]*a[1][1]*a[2][0]-a[1][2]*a[2][1]*a[0][0]-a[2][2]*a[0][1]*a[1][0]}function b(b){for(var c=1/a(b),d=b[0][0],e=b[0][1],f=b[0][2],g=b[1][0],h=b[1][1],i=b[1][2],j=b[2][0],k=b[2][1],l=b[2][2],m=[[(h*l-i*k)*c,(f*k-e*l)*c,(e*i-f*h)*c,0],[(i*j-g*l)*c,(d*l-f*j)*c,(f*g-d*i)*c,0],[(g*k-h*j)*c,(j*e-d*k)*c,(d*h-e*g)*c,0]],n=[],o=0;o<3;o++){for(var p=0,q=0;q<3;q++)p+=b[3][q]*m[q][o];n.push(p)}return n.push(1),m.push(n),m}function d(a){return[[a[0][0],a[1][0],a[2][0],a[3][0]],[a[0][1],a[1][1],a[2][1],a[3][1]],[a[0][2],a[1][2],a[2][2],a[3][2]],[a[0][3],a[1][3],a[2][3],a[3][3]]]}function e(a,b){for(var c=[],d=0;d<4;d++){for(var e=0,f=0;f<4;f++)e+=a[f]*b[f][d];c.push(e)}return c}function f(a){var b=g(a);return[a[0]/b,a[1]/b,a[2]/b]}function g(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])}function h(a,b,c,d){return[c*a[0]+d*b[0],c*a[1]+d*b[1],c*a[2]+d*b[2]]}function i(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function j(j){var k=[j.slice(0,4),j.slice(4,8),j.slice(8,12),j.slice(12,16)];if(1!==k[3][3])return null;for(var l=[],m=0;m<4;m++)l.push(k[m].slice());for(var m=0;m<3;m++)l[m][3]=0;if(0===a(l))return null;var n,o=[];k[0][3]||k[1][3]||k[2][3]?(o.push(k[0][3]),o.push(k[1][3]),o.push(k[2][3]),o.push(k[3][3]),n=e(o,d(b(l)))):n=[0,0,0,1];var p=k[3].slice(0,3),q=[];q.push(k[0].slice(0,3));var r=[];r.push(g(q[0])),q[0]=f(q[0]);var s=[];q.push(k[1].slice(0,3)),s.push(c(q[0],q[1])),q[1]=h(q[1],q[0],1,-s[0]),r.push(g(q[1])),q[1]=f(q[1]),s[0]/=r[1],q.push(k[2].slice(0,3)),s.push(c(q[0],q[2])),q[2]=h(q[2],q[0],1,-s[1]),s.push(c(q[1],q[2])),q[2]=h(q[2],q[1],1,-s[2]),r.push(g(q[2])),q[2]=f(q[2]),s[1]/=r[2],s[2]/=r[2];var t=i(q[1],q[2]);if(c(q[0],t)<0)for(var m=0;m<3;m++)r[m]*=-1,q[m][0]*=-1,q[m][1]*=-1,q[m][2]*=-1;var u,v,w=q[0][0]+q[1][1]+q[2][2]+1;return w>1e-4?(u=.5/Math.sqrt(w),v=[(q[2][1]-q[1][2])*u,(q[0][2]-q[2][0])*u,(q[1][0]-q[0][1])*u,.25/u]):q[0][0]>q[1][1]&&q[0][0]>q[2][2]?(u=2*Math.sqrt(1+q[0][0]-q[1][1]-q[2][2]),v=[.25*u,(q[0][1]+q[1][0])/u,(q[0][2]+q[2][0])/u,(q[2][1]-q[1][2])/u]):q[1][1]>q[2][2]?(u=2*Math.sqrt(1+q[1][1]-q[0][0]-q[2][2]),v=[(q[0][1]+q[1][0])/u,.25*u,(q[1][2]+q[2][1])/u,(q[0][2]-q[2][0])/u]):(u=2*Math.sqrt(1+q[2][2]-q[0][0]-q[1][1]),v=[(q[0][2]+q[2][0])/u,(q[1][2]+q[2][1])/u,.25*u,(q[1][0]-q[0][1])/u]),[p,r,s,v,n]}return j}();a.dot=c,a.makeMatrixDecomposition=h,a.transformListToMatrix=g}(b),function(a){function b(a,b){var c=a.exec(b);if(c)return c=a.ignoreCase?c[0].toLowerCase():c[0],[c,b.substr(c.length)]}function c(a,b){b=b.replace(/^\\s*/,\"\");var c=a(b);if(c)return[c[0],c[1].replace(/^\\s*/,\"\")]}function d(a,d,e){a=c.bind(null,a);for(var f=[];;){var g=a(e);if(!g)return[f,e];if(f.push(g[0]),e=g[1],!(g=b(d,e))||\"\"==g[1])return[f,e];e=g[1]}}function e(a,b){for(var c=0,d=0;d<b.length&&(!/\\s|,/.test(b[d])||0!=c);d++)if(\"(\"==b[d])c++;else if(\")\"==b[d]&&(c--,0==c&&d++,c<=0))break;var e=a(b.substr(0,d));return void 0==e?void 0:[e,b.substr(d)]}function f(a,b){for(var c=a,d=b;c&&d;)c>d?c%=d:d%=c;return c=a*b/(c+d)}function g(a){return function(b){var c=a(b);return c&&(c[0]=void 0),c}}function h(a,b){return function(c){return a(c)||[b,c]}}function i(b,c){for(var d=[],e=0;e<b.length;e++){var f=a.consumeTrimmed(b[e],c);if(!f||\"\"==f[0])return;void 0!==f[0]&&d.push(f[0]),c=f[1]}if(\"\"==c)return d}function j(a,b,c,d,e){for(var g=[],h=[],i=[],j=f(d.length,e.length),k=0;k<j;k++){var l=b(d[k%d.length],e[k%e.length]);if(!l)return;g.push(l[0]),h.push(l[1]),i.push(l[2])}return[g,h,function(b){var d=b.map(function(a,b){return i[b](a)}).join(c);return a?a(d):d}]}function k(a,b,c){for(var d=[],e=[],f=[],g=0,h=0;h<c.length;h++)if(\"function\"==typeof c[h]){var i=c[h](a[g],b[g++]);d.push(i[0]),e.push(i[1]),f.push(i[2])}else!function(a){d.push(!1),e.push(!1),f.push(function(){return c[a]})}(h);return[d,e,function(a){for(var b=\"\",c=0;c<a.length;c++)b+=f[c](a[c]);return b}]}a.consumeToken=b,a.consumeTrimmed=c,a.consumeRepeated=d,a.consumeParenthesised=e,a.ignore=g,a.optional=h,a.consumeList=i,a.mergeNestedRepeated=j.bind(null,null),a.mergeWrappedNestedRepeated=j,a.mergeList=k}(b),function(a){function b(b){function c(b){var c=a.consumeToken(/^inset/i,b);return c?(d.inset=!0,c):(c=a.consumeLengthOrPercent(b))?(d.lengths.push(c[0]),c):(c=a.consumeColor(b),c?(d.color=c[0],c):void 0)}var d={inset:!1,lengths:[],color:null},e=a.consumeRepeated(c,/^/,b);if(e&&e[0].length)return[d,e[1]]}function c(c){var d=a.consumeRepeated(b,/^,/,c);if(d&&\"\"==d[1])return d[0]}function d(b,c){for(;b.lengths.length<Math.max(b.lengths.length,c.lengths.length);)b.lengths.push({px:0});for(;c.lengths.length<Math.max(b.lengths.length,c.lengths.length);)c.lengths.push({px:0});if(b.inset==c.inset&&!!b.color==!!c.color){for(var d,e=[],f=[[],0],g=[[],0],h=0;h<b.lengths.length;h++){var i=a.mergeDimensions(b.lengths[h],c.lengths[h],2==h);f[0].push(i[0]),g[0].push(i[1]),e.push(i[2])}if(b.color&&c.color){var j=a.mergeColors(b.color,c.color);f[1]=j[0],g[1]=j[1],d=j[2]}return[f,g,function(a){for(var c=b.inset?\"inset \":\" \",f=0;f<e.length;f++)c+=e[f](a[0][f])+\" \";return d&&(c+=d(a[1])),c}]}}function e(b,c,d,e){function f(a){return{inset:a,color:[0,0,0,0],lengths:[{px:0},{px:0},{px:0},{px:0}]}}for(var g=[],h=[],i=0;i<d.length||i<e.length;i++){var j=d[i]||f(e[i].inset),k=e[i]||f(d[i].inset);g.push(j),h.push(k)}return a.mergeNestedRepeated(b,c,g,h)}var f=e.bind(null,d,\", \");a.addPropertiesHandler(c,f,[\"box-shadow\",\"text-shadow\"])}(b),function(a,b){function c(a){return a.toFixed(3).replace(/0+$/,\"\").replace(/\\.$/,\"\")}function d(a,b,c){return Math.min(b,Math.max(a,c))}function e(a){if(/^\\s*[-+]?(\\d*\\.)?\\d+\\s*$/.test(a))return Number(a)}function f(a,b){return[a,b,c]}function g(a,b){if(0!=a)return i(0,1/0)(a,b)}function h(a,b){return[a,b,function(a){return Math.round(d(1,1/0,a))}]}function i(a,b){return function(e,f){return[e,f,function(e){return c(d(a,b,e))}]}}function j(a){var b=a.trim().split(/\\s*[\\s,]\\s*/);if(0!==b.length){for(var c=[],d=0;d<b.length;d++){var f=e(b[d]);if(void 0===f)return;c.push(f)}return c}}function k(a,b){if(a.length==b.length)return[a,b,function(a){return a.map(c).join(\" \")}]}function l(a,b){return[a,b,Math.round]}a.clamp=d,a.addPropertiesHandler(j,k,[\"stroke-dasharray\"]),a.addPropertiesHandler(e,i(0,1/0),[\"border-image-width\",\"line-height\"]),a.addPropertiesHandler(e,i(0,1),[\"opacity\",\"shape-image-threshold\"]),a.addPropertiesHandler(e,g,[\"flex-grow\",\"flex-shrink\"]),a.addPropertiesHandler(e,h,[\"orphans\",\"widows\"]),a.addPropertiesHandler(e,l,[\"z-index\"]),a.parseNumber=e,a.parseNumberList=j,a.mergeNumbers=f,a.numberToString=c}(b),function(a,b){function c(a,b){if(\"visible\"==a||\"visible\"==b)return[0,1,function(c){return c<=0?a:c>=1?b:\"visible\"}]}a.addPropertiesHandler(String,c,[\"visibility\"])}(b),function(a,b){function c(a){a=a.trim(),f.fillStyle=\"#000\",f.fillStyle=a;var b=f.fillStyle;if(f.fillStyle=\"#fff\",f.fillStyle=a,b==f.fillStyle){f.fillRect(0,0,1,1);var c=f.getImageData(0,0,1,1).data;f.clearRect(0,0,1,1);var d=c[3]/255;return[c[0]*d,c[1]*d,c[2]*d,d]}}function d(b,c){return[b,c,function(b){function c(a){return Math.max(0,Math.min(255,a))}if(b[3])for(var d=0;d<3;d++)b[d]=Math.round(c(b[d]/b[3]));return b[3]=a.numberToString(a.clamp(0,1,b[3])),\"rgba(\"+b.join(\",\")+\")\"}]}var e=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");e.width=e.height=1;var f=e.getContext(\"2d\");a.addPropertiesHandler(c,d,[\"background-color\",\"border-bottom-color\",\"border-left-color\",\"border-right-color\",\"border-top-color\",\"color\",\"fill\",\"flood-color\",\"lighting-color\",\"outline-color\",\"stop-color\",\"stroke\",\"text-decoration-color\"]),a.consumeColor=a.consumeParenthesised.bind(null,c),a.mergeColors=d}(b),function(a,b){function c(a){function b(){var b=h.exec(a);g=b?b[0]:void 0}function c(){var a=Number(g);return b(),a}function d(){if(\"(\"!==g)return c();b();var a=f();return\")\"!==g?NaN:(b(),a)}function e(){for(var a=d();\"*\"===g||\"/\"===g;){var c=g;b();var e=d();\"*\"===c?a*=e:a/=e}return a}function f(){for(var a=e();\"+\"===g||\"-\"===g;){var c=g;b();var d=e();\"+\"===c?a+=d:a-=d}return a}var g,h=/([\\+\\-\\w\\.]+|[\\(\\)\\*\\/])/g;return b(),f()}function d(a,b){if(\"0\"==(b=b.trim().toLowerCase())&&\"px\".search(a)>=0)return{px:0};if(/^[^(]*$|^calc/.test(b)){b=b.replace(/calc\\(/g,\"(\");var d={};b=b.replace(a,function(a){return d[a]=null,\"U\"+a});for(var e=\"U(\"+a.source+\")\",f=b.replace(/[-+]?(\\d*\\.)?\\d+([Ee][-+]?\\d+)?/g,\"N\").replace(new RegExp(\"N\"+e,\"g\"),\"D\").replace(/\\s[+-]\\s/g,\"O\").replace(/\\s/g,\"\"),g=[/N\\*(D)/g,/(N|D)[*\\/]N/g,/(N|D)O\\1/g,/\\((N|D)\\)/g],h=0;h<g.length;)g[h].test(f)?(f=f.replace(g[h],\"$1\"),h=0):h++;if(\"D\"==f){for(var i in d){var j=c(b.replace(new RegExp(\"U\"+i,\"g\"),\"\").replace(new RegExp(e,\"g\"),\"*0\"));if(!isFinite(j))return;d[i]=j}return d}}}function e(a,b){return f(a,b,!0)}function f(b,c,d){var e,f=[];for(e in b)f.push(e);for(e in c)f.indexOf(e)<0&&f.push(e);return b=f.map(function(a){return b[a]||0}),c=f.map(function(a){return c[a]||0}),[b,c,function(b){var c=b.map(function(c,e){return 1==b.length&&d&&(c=Math.max(c,0)),a.numberToString(c)+f[e]}).join(\" + \");return b.length>1?\"calc(\"+c+\")\":c}]}var g=\"px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc\",h=d.bind(null,new RegExp(g,\"g\")),i=d.bind(null,new RegExp(g+\"|%\",\"g\")),j=d.bind(null,/deg|rad|grad|turn/g);a.parseLength=h,a.parseLengthOrPercent=i,a.consumeLengthOrPercent=a.consumeParenthesised.bind(null,i),a.parseAngle=j,a.mergeDimensions=f;var k=a.consumeParenthesised.bind(null,h),l=a.consumeRepeated.bind(void 0,k,/^/),m=a.consumeRepeated.bind(void 0,l,/^,/);a.consumeSizePairList=m;var n=function(a){var b=m(a);if(b&&\"\"==b[1])return b[0]},o=a.mergeNestedRepeated.bind(void 0,e,\" \"),p=a.mergeNestedRepeated.bind(void 0,o,\",\");a.mergeNonNegativeSizePair=o,a.addPropertiesHandler(n,p,[\"background-size\"]),a.addPropertiesHandler(i,e,[\"border-bottom-width\",\"border-image-width\",\"border-left-width\",\"border-right-width\",\"border-top-width\",\"flex-basis\",\"font-size\",\"height\",\"line-height\",\"max-height\",\"max-width\",\"outline-width\",\"width\"]),a.addPropertiesHandler(i,f,[\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-top-left-radius\",\"border-top-right-radius\",\"bottom\",\"left\",\"letter-spacing\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"min-height\",\"min-width\",\"outline-offset\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"perspective\",\"right\",\"shape-margin\",\"stroke-dashoffset\",\"text-indent\",\"top\",\"vertical-align\",\"word-spacing\"])}(b),function(a,b){function c(b){return a.consumeLengthOrPercent(b)||a.consumeToken(/^auto/,b)}function d(b){var d=a.consumeList([a.ignore(a.consumeToken.bind(null,/^rect/)),a.ignore(a.consumeToken.bind(null,/^\\(/)),a.consumeRepeated.bind(null,c,/^,/),a.ignore(a.consumeToken.bind(null,/^\\)/))],b);if(d&&4==d[0].length)return d[0]}function e(b,c){return\"auto\"==b||\"auto\"==c?[!0,!1,function(d){var e=d?b:c;if(\"auto\"==e)return\"auto\";var f=a.mergeDimensions(e,e);return f[2](f[0])}]:a.mergeDimensions(b,c)}function f(a){return\"rect(\"+a+\")\"}var g=a.mergeWrappedNestedRepeated.bind(null,f,e,\", \");a.parseBox=d,a.mergeBoxes=g,a.addPropertiesHandler(d,g,[\"clip\"])}(b),function(a,b){function c(a){return function(b){var c=0;return a.map(function(a){return a===k?b[c++]:a})}}function d(a){return a}function e(b){if(\"none\"==(b=b.toLowerCase().trim()))return[];for(var c,d=/\\s*(\\w+)\\(([^)]*)\\)/g,e=[],f=0;c=d.exec(b);){if(c.index!=f)return;f=c.index+c[0].length;var g=c[1],h=n[g];if(!h)return;var i=c[2].split(\",\"),j=h[0];if(j.length<i.length)return;for(var k=[],o=0;o<j.length;o++){var p,q=i[o],r=j[o];if(void 0===(p=q?{A:function(b){return\"0\"==b.trim()?m:a.parseAngle(b)},N:a.parseNumber,T:a.parseLengthOrPercent,L:a.parseLength}[r.toUpperCase()](q):{a:m,n:k[0],t:l}[r]))return;k.push(p)}if(e.push({t:g,d:k}),d.lastIndex==b.length)return e}}function f(a){return a.toFixed(6).replace(\".000000\",\"\")}function g(b,c){if(b.decompositionPair!==c){b.decompositionPair=c;var d=a.makeMatrixDecomposition(b)}if(c.decompositionPair!==b){c.decompositionPair=b;var e=a.makeMatrixDecomposition(c)}return null==d[0]||null==e[0]?[[!1],[!0],function(a){return a?c[0].d:b[0].d}]:(d[0].push(0),e[0].push(1),[d,e,function(b){var c=a.quat(d[0][3],e[0][3],b[5]);return a.composeMatrix(b[0],b[1],b[2],c,b[4]).map(f).join(\",\")}])}function h(a){return a.replace(/[xy]/,\"\")}function i(a){return a.replace(/(x|y|z|3d)?$/,\"3d\")}function j(b,c){var d=a.makeMatrixDecomposition&&!0,e=!1;if(!b.length||!c.length){b.length||(e=!0,b=c,c=[]);for(var f=0;f<b.length;f++){var j=b[f].t,k=b[f].d,l=\"scale\"==j.substr(0,5)?1:0;c.push({t:j,d:k.map(function(a){if(\"number\"==typeof a)return l;var b={};for(var c in a)b[c]=l;return b})})}}var m=function(a,b){return\"perspective\"==a&&\"perspective\"==b||(\"matrix\"==a||\"matrix3d\"==a)&&(\"matrix\"==b||\"matrix3d\"==b)},o=[],p=[],q=[];if(b.length!=c.length){if(!d)return;var r=g(b,c);o=[r[0]],p=[r[1]],q=[[\"matrix\",[r[2]]]]}else for(var f=0;f<b.length;f++){var j,s=b[f].t,t=c[f].t,u=b[f].d,v=c[f].d,w=n[s],x=n[t];if(m(s,t)){if(!d)return;var r=g([b[f]],[c[f]]);o.push(r[0]),p.push(r[1]),q.push([\"matrix\",[r[2]]])}else{if(s==t)j=s;else if(w[2]&&x[2]&&h(s)==h(t))j=h(s),u=w[2](u),v=x[2](v);else{if(!w[1]||!x[1]||i(s)!=i(t)){if(!d)return;var r=g(b,c);o=[r[0]],p=[r[1]],q=[[\"matrix\",[r[2]]]];break}j=i(s),u=w[1](u),v=x[1](v)}for(var y=[],z=[],A=[],B=0;B<u.length;B++){var C=\"number\"==typeof u[B]?a.mergeNumbers:a.mergeDimensions,r=C(u[B],v[B]);y[B]=r[0],z[B]=r[1],A.push(r[2])}o.push(y),p.push(z),q.push([j,A])}}if(e){var D=o;o=p,p=D}return[o,p,function(a){return a.map(function(a,b){var c=a.map(function(a,c){return q[b][1][c](a)}).join(\",\");return\"matrix\"==q[b][0]&&16==c.split(\",\").length&&(q[b][0]=\"matrix3d\"),q[b][0]+\"(\"+c+\")\"}).join(\" \")}]}var k=null,l={px:0},m={deg:0},n={matrix:[\"NNNNNN\",[k,k,0,0,k,k,0,0,0,0,1,0,k,k,0,1],d],matrix3d:[\"NNNNNNNNNNNNNNNN\",d],rotate:[\"A\"],rotatex:[\"A\"],rotatey:[\"A\"],rotatez:[\"A\"],rotate3d:[\"NNNA\"],perspective:[\"L\"],scale:[\"Nn\",c([k,k,1]),d],scalex:[\"N\",c([k,1,1]),c([k,1])],scaley:[\"N\",c([1,k,1]),c([1,k])],scalez:[\"N\",c([1,1,k])],scale3d:[\"NNN\",d],skew:[\"Aa\",null,d],skewx:[\"A\",null,c([k,m])],skewy:[\"A\",null,c([m,k])],translate:[\"Tt\",c([k,k,l]),d],translatex:[\"T\",c([k,l,l]),c([k,l])],translatey:[\"T\",c([l,k,l]),c([l,k])],translatez:[\"L\",c([l,l,k])],translate3d:[\"TTL\",d]};a.addPropertiesHandler(e,j,[\"transform\"]),a.transformToSvgMatrix=function(b){var c=a.transformListToMatrix(e(b));return\"matrix(\"+f(c[0])+\" \"+f(c[1])+\" \"+f(c[4])+\" \"+f(c[5])+\" \"+f(c[12])+\" \"+f(c[13])+\")\"}}(b),function(a){function b(a){var b=Number(a);if(!(isNaN(b)||b<100||b>900||b%100!=0))return b}function c(b){return b=100*Math.round(b/100),b=a.clamp(100,900,b),400===b?\"normal\":700===b?\"bold\":String(b)}function d(a,b){return[a,b,c]}a.addPropertiesHandler(b,d,[\"font-weight\"])}(b),function(a){function b(a){var b={};for(var c in a)b[c]=-a[c];return b}function c(b){return a.consumeToken(/^(left|center|right|top|bottom)\\b/i,b)||a.consumeLengthOrPercent(b)}function d(b,d){var e=a.consumeRepeated(c,/^/,d);if(e&&\"\"==e[1]){var f=e[0];if(f[0]=f[0]||\"center\",f[1]=f[1]||\"center\",3==b&&(f[2]=f[2]||{px:0}),f.length==b){if(/top|bottom/.test(f[0])||/left|right/.test(f[1])){var h=f[0];f[0]=f[1],f[1]=h}if(/left|right|center|Object/.test(f[0])&&/top|bottom|center|Object/.test(f[1]))return f.map(function(a){return\"object\"==typeof a?a:g[a]})}}}function e(d){var e=a.consumeRepeated(c,/^/,d);if(e){for(var f=e[0],h=[{\"%\":50},{\"%\":50}],i=0,j=!1,k=0;k<f.length;k++){var l=f[k];\"string\"==typeof l?(j=/bottom|right/.test(l),i={left:0,right:0,center:i,top:1,bottom:1}[l],h[i]=g[l],\"center\"==l&&i++):(j&&(l=b(l),l[\"%\"]=(l[\"%\"]||0)+100),h[i]=l,i++,j=!1)}return[h,e[1]]}}function f(b){var c=a.consumeRepeated(e,/^,/,b);if(c&&\"\"==c[1])return c[0]}var g={left:{\"%\":0},center:{\"%\":50},right:{\"%\":100},top:{\"%\":0},bottom:{\"%\":100}},h=a.mergeNestedRepeated.bind(null,a.mergeDimensions,\" \");a.addPropertiesHandler(d.bind(null,3),h,[\"transform-origin\"]),a.addPropertiesHandler(d.bind(null,2),h,[\"perspective-origin\"]),a.consumePosition=e,a.mergeOffsetList=h;var i=a.mergeNestedRepeated.bind(null,h,\", \");a.addPropertiesHandler(f,i,[\"background-position\",\"object-position\"])}(b),function(a){function b(b){var c=a.consumeToken(/^circle/,b);if(c&&c[0])return[\"circle\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\\(/)),d,a.ignore(a.consumeToken.bind(void 0,/^at/)),a.consumePosition,a.ignore(a.consumeToken.bind(void 0,/^\\)/))],c[1]));var f=a.consumeToken(/^ellipse/,b);if(f&&f[0])return[\"ellipse\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\\(/)),e,a.ignore(a.consumeToken.bind(void 0,/^at/)),a.consumePosition,a.ignore(a.consumeToken.bind(void 0,/^\\)/))],f[1]));var g=a.consumeToken(/^polygon/,b);return g&&g[0]?[\"polygon\"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\\(/)),a.optional(a.consumeToken.bind(void 0,/^nonzero\\s*,|^evenodd\\s*,/),\"nonzero,\"),a.consumeSizePairList,a.ignore(a.consumeToken.bind(void 0,/^\\)/))],g[1])):void 0}function c(b,c){if(b[0]===c[0])return\"circle\"==b[0]?a.mergeList(b.slice(1),c.slice(1),[\"circle(\",a.mergeDimensions,\" at \",a.mergeOffsetList,\")\"]):\"ellipse\"==b[0]?a.mergeList(b.slice(1),c.slice(1),[\"ellipse(\",a.mergeNonNegativeSizePair,\" at \",a.mergeOffsetList,\")\"]):\"polygon\"==b[0]&&b[1]==c[1]?a.mergeList(b.slice(2),c.slice(2),[\"polygon(\",b[1],g,\")\"]):void 0}var d=a.consumeParenthesised.bind(null,a.parseLengthOrPercent),e=a.consumeRepeated.bind(void 0,d,/^/),f=a.mergeNestedRepeated.bind(void 0,a.mergeDimensions,\" \"),g=a.mergeNestedRepeated.bind(void 0,f,\",\");a.addPropertiesHandler(b,c,[\"shape-outside\"])}(b),function(a,b){function c(a,b){b.concat([a]).forEach(function(b){b in document.documentElement.style&&(d[a]=b),e[b]=a})}var d={},e={};c(\"transform\",[\"webkitTransform\",\"msTransform\"]),c(\"transformOrigin\",[\"webkitTransformOrigin\"]),c(\"perspective\",[\"webkitPerspective\"]),c(\"perspectiveOrigin\",[\"webkitPerspectiveOrigin\"]),a.propertyName=function(a){return d[a]||a},a.unprefixedPropertyName=function(a){return e[a]||a}}(b)}(),function(){if(void 0===document.createElement(\"div\").animate([]).oncancel){var a;if(window.performance&&performance.now)var a=function(){return performance.now()};else var a=function(){return Date.now()};var b=function(a,b,c){this.target=a,this.currentTime=b,this.timelineTime=c,this.type=\"cancel\",this.bubbles=!1,this.cancelable=!1,this.currentTarget=a,this.defaultPrevented=!1,this.eventPhase=Event.AT_TARGET,this.timeStamp=Date.now()},c=window.Element.prototype.animate;window.Element.prototype.animate=function(d,e){var f=c.call(this,d,e);f._cancelHandlers=[],f.oncancel=null;var g=f.cancel;f.cancel=function(){g.call(this);var c=new b(this,null,a()),d=this._cancelHandlers.concat(this.oncancel?[this.oncancel]:[]);setTimeout(function(){d.forEach(function(a){a.call(c.target,c)})},0)};var h=f.addEventListener;f.addEventListener=function(a,b){\"function\"==typeof b&&\"cancel\"==a?this._cancelHandlers.push(b):h.call(this,a,b)};var i=f.removeEventListener;return f.removeEventListener=function(a,b){if(\"cancel\"==a){var c=this._cancelHandlers.indexOf(b);c>=0&&this._cancelHandlers.splice(c,1)}else i.call(this,a,b)},f}}}(),function(a){var b=document.documentElement,c=null,d=!1;try{var e=getComputedStyle(b).getPropertyValue(\"opacity\"),f=\"0\"==e?\"1\":\"0\";c=b.animate({opacity:[f,f]},{duration:1}),c.currentTime=0,d=getComputedStyle(b).getPropertyValue(\"opacity\")==f}catch(a){}finally{c&&c.cancel()}if(!d){var g=window.Element.prototype.animate;window.Element.prototype.animate=function(b,c){return window.Symbol&&Symbol.iterator&&Array.prototype.from&&b[Symbol.iterator]&&(b=Array.from(b)),Array.isArray(b)||null===b||(b=a.convertToArrayForm(b)),g.call(this,b,c)}}}(a)}();\n//# sourceMappingURL=web-animations.min.js.map"]},"metadata":{},"sourceType":"script"}