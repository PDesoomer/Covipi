{"ast":null,"code":"import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n  closed: true,\n  next: function next(value) {},\n  error: function error(err) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete: function complete() {}\n};","map":{"version":3,"sources":["../../src/internal/Observer.ts"],"names":[],"mappings":"AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,eAAT,QAAgC,wBAAhC;AAEA,OAAO,IAAM,KAAK,GAAkB;AAClC,EAAA,MAAM,EAAE,IAD0B;AAElC,EAAA,IAFkC,gBAE7B,KAF6B,EAEnB,CAAqB,CAFF;AAGlC,EAAA,KAHkC,iBAG5B,GAH4B,EAGpB;AACZ,QAAI,MAAM,CAAC,qCAAX,EAAkD;AAChD,YAAM,GAAN;AACD,KAFD,MAEO;AACL,MAAA,eAAe,CAAC,GAAD,CAAf;AACD;AACF,GATiC;AAUlC,EAAA,QAVkC,sBAU1B,CAAqB;AAVK,CAA7B","sourcesContent":["import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport const empty = {\n    closed: true,\n    next(value) { },\n    error(err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete() { }\n};\n//# sourceMappingURL=Observer.js.map"]},"metadata":{},"sourceType":"module"}