{"ast":null,"code":"import _assertThisInitialized from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/dougair/Documents/WebDev/Angular/Covipi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Material. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nvar _c2 = [\"*\"];\nvar VERSION = new Version('10.2.4');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nvar AnimationCurves = function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n};\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nvar AnimationDurations = function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n};\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n\nvar VERSION$1 = new Version('10.2.4');\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  function MatCommonModule(highContrastModeDetector, sanityChecks,\n  /** @breaking-change 11.0.0 make document required */\n  document) {\n    _classCallCheck(this, MatCommonModule);\n\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    this._document = document; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses(); // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n\n\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._checkCdkVersionMatch();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /** Access injected document if available or fallback to global document reference */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_getDocument\",\n    value: function _getDocument() {\n      var doc = this._document || document;\n      return typeof doc === 'object' && doc ? doc : null;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n\n  }, {\n    key: \"_getWindow\",\n    value: function _getWindow() {\n      var doc = this._getDocument();\n\n      var win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n      return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n\n  }, {\n    key: \"_checksAreEnabled\",\n    value: function _checksAreEnabled() {\n      // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n      // it. Since these checks can have performance implications and they aren't tree shakeable\n      // in their current form, we can leave the `isDevMode` check in for now.\n      // tslint:disable-next-line:ban\n      return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n\n  }, {\n    key: \"_isTestEnv\",\n    value: function _isTestEnv() {\n      var window = this._getWindow();\n\n      return window && (window.__karma__ || window.jasmine);\n    }\n  }, {\n    key: \"_checkDoctypeIsDefined\",\n    value: function _checkDoctypeIsDefined() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.doctype);\n\n      var document = this._getDocument();\n\n      if (isEnabled && document && !document.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n      }\n    }\n  }, {\n    key: \"_checkThemeIsPresent\",\n    value: function _checkThemeIsPresent() {\n      // We need to assert that the `body` is defined, because these checks run very early\n      // and the `body` won't be defined if the consumer put their scripts in the `head`.\n      var isDisabled = !this._checksAreEnabled() || this._sanityChecks === false || !this._sanityChecks.theme;\n\n      var document = this._getDocument();\n\n      if (isDisabled || !document || !document.body || typeof getComputedStyle !== 'function') {\n        return;\n      }\n\n      var testElement = document.createElement('div');\n      testElement.classList.add('mat-theme-loaded-marker');\n      document.body.appendChild(testElement);\n      var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n      }\n\n      document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n\n  }, {\n    key: \"_checkCdkVersionMatch\",\n    value: function _checkCdkVersionMatch() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.version);\n\n      if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n        console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' + 'the Angular CDK version (' + VERSION$2.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n      }\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCommonModule_Factory(t) {\n    return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8));\n  },\n  imports: [[BidiModule], BidiModule]\n});\n\nMatCommonModule.ctorParameters = function () {\n  return [{\n    type: HighContrastModeDetector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [BidiModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `disabled` property. */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `color` property. */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    _createClass(_class2, [{\n      key: \"color\",\n      get: function get() {\n        return this._color;\n      },\n      set: function set(value) {\n        var colorPalette = value || this.defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n    }]);\n\n    return _class2;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `disableRipple` property. */\n\n\nfunction mixinDisableRipple(base) {\n  var Mixin = /*#__PURE__*/function (_base3) {\n    _inherits(Mixin, _base3);\n\n    var _super3 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this3;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    _createClass(Mixin, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with a `tabIndex` property. */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  var Mixin = /*#__PURE__*/function (_base4) {\n    _inherits(Mixin, _base4);\n\n    var _super4 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this4;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      _this4.defaultTabIndex = defaultTabIndex;\n      return _this4;\n    }\n\n    _createClass(Mixin, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      },\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class3, _base5);\n\n    var _super5 = _createSuper(_class3);\n\n    function _class3() {\n      var _this5;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /** Whether the component is in an error state. */\n\n      _this5.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n\n      _this5.stateChanges = new Subject();\n      return _this5;\n    }\n\n    _createClass(_class3, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        var oldState = this.errorState;\n        var parent = this._parentFormGroup || this._parentForm;\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var control = this.ngControl ? this.ngControl.control : null;\n        var newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class4, _base6);\n\n    var _super6 = _createSuper(_class4);\n\n    function _class4() {\n      var _this6;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /** Whether this directive has been marked as initialized. */\n\n      _this6._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n\n\n    _createClass(_class4, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /** Emits and completes the subscriber stream (should only emit once). */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\n\n\nvar MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"getValidDateOrNull\",\n    value: function getValidDateOrNull(obj) {\n      return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        var firstValid = this.isValid(first);\n        var secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/** Whether the browser supports the Intl API. */\n\nvar SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\n\n\nvar DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nvar ɵ0 = function ɵ0(i) {\n  return String(i + 1);\n};\n/** The default date names to use if Intl API is not available. */\n\n\nvar DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\n\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  function NativeDateAdapter(matDateLocale, platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    _this7.useUtcForDisplay = true;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n\n    _this7.useUtcForDisplay = !platform.TRIDENT;\n    _this7._clampDate = platform.TRIDENT || platform.EDGE;\n    return _this7;\n  }\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          month: style,\n          timeZone: 'utc'\n        });\n        return range(12, function (i) {\n          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));\n        });\n      }\n\n      return DEFAULT_MONTH_NAMES[style];\n    }\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          day: 'numeric',\n          timeZone: 'utc'\n        });\n        return range(31, function (i) {\n          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DATE_NAMES;\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          weekday: style,\n          timeZone: 'utc'\n        });\n        return range(7, function (i) {\n          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          year: 'numeric',\n          timeZone: 'utc'\n        });\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return String(this.getYear(date));\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n        }\n\n        if (date < 1) {\n          throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n        }\n      }\n\n      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      if (SUPPORTS_INTL_API) {\n        // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n        // if we attempt to format a date whose year is less than 1 or greater than 9999.\n        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n          date = this.clone(date);\n          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n        }\n\n        displayFormat = Object.assign(Object.assign({}, displayFormat), {\n          timeZone: 'utc'\n        });\n        var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return this._stripDirectionalityCharacters(date.toDateString());\n    }\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          var date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      var d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n\n  }, {\n    key: \"_stripDirectionalityCharacters\",\n    value: function _stripDirectionalityCharacters(str) {\n      return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      var d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform));\n};\n\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\nNativeDateAdapter.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: Platform\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar NativeDateModule = function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n};\n\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NativeDateModule_Factory(t) {\n    return new (t || NativeDateModule)();\n  },\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function imports() {\n      return [PlatformModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nvar MatNativeDateModule = function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n};\n\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatNativeDateModule_Factory(t) {\n    return new (t || MatNativeDateModule)();\n  },\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [[NativeDateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nvar MatLine = function MatLine() {\n  _classCallCheck(this, MatLine);\n};\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\n\n\nfunction setLines(lines, element) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mat';\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(function (_ref) {\n    var length = _ref.length;\n    setClass(element, \"\".concat(prefix, \"-2-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-3-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-multi-line\"), false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, \"\".concat(prefix, \"-\").concat(length, \"-line\"), true);\n    } else if (length > 3) {\n      setClass(element, \"\".concat(prefix, \"-multi-line\"), true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  var classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\n\n\nvar MatLineSetter = function MatLineSetter(lines, element) {\n  _classCallCheck(this, MatLineSetter);\n\n  setLines(lines, element);\n};\n\nvar MatLineModule = function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n};\n\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatLineModule_Factory(t) {\n    return new (t || MatLineModule)();\n  },\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a previously launched ripple element.\n */\n\n\nvar RippleRef = /*#__PURE__*/function () {\n  function RippleRef(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config) {\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}();\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nvar defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nvar ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\n\nvar passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\n\nvar pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nvar pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this11 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n\n      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      var offsetX = x - containerRect.left;\n      var offsetY = y - containerRect.top;\n      var duration = animationConfig.enterDuration;\n      var ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If a custom color has been specified, set it as inline style. If no color is\n      // set, the default color will be applied through the ripple theme styles.\n\n      if (config.color != null) {\n        ripple.style.backgroundColor = config.color;\n      }\n\n      ripple.style.transitionDuration = \"\".concat(duration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n      enforceStyleRecalculation(ripple);\n      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n      var rippleRef = new RippleRef(this, ripple, config);\n      rippleRef.state = 0\n      /* FADING_IN */\n      ; // Add the ripple reference to the list of all active ripples.\n\n      this._activeRipples.add(rippleRef);\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      } // Wait for the ripple element to be completely faded in.\n      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n      this._runTimeoutOutsideZone(function () {\n        var isMostRecentTransientRipple = rippleRef === _this11._mostRecentTransientRipple;\n        rippleRef.state = 1\n        /* VISIBLE */\n        ; // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n\n        if (!config.persistent && (!isMostRecentTransientRipple || !_this11._isPointerDown)) {\n          rippleRef.fadeOut();\n        }\n      }, duration);\n\n      return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      var wasActive = this._activeRipples.delete(rippleRef);\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      } // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n      if (!wasActive) {\n        return;\n      }\n\n      var rippleEl = rippleRef.element;\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = 2\n      /* FADING_OUT */\n      ; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n      this._runTimeoutOutsideZone(function () {\n        rippleRef.state = 3\n        /* HIDDEN */\n        ;\n        rippleEl.parentNode.removeChild(rippleEl);\n      }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._activeRipples.forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /** Sets up the trigger event listeners */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(elementOrElementRef) {\n      var element = coerceElement(elementOrElementRef);\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._triggerElement = element;\n\n      this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (event.type === 'mousedown') {\n        this._onMousedown(event);\n      } else if (event.type === 'touchstart') {\n        this._onTouchStart(event);\n      } else {\n        this._onPointerUp();\n      } // If pointer-up events haven't been registered yet, do so now.\n      // We do this on-demand in order to reduce the total number of event listeners\n      // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n      if (!this._pointerUpEventsRegistered) {\n        this._registerEvents(pointerUpEvents);\n\n        this._pointerUpEventsRegistered = true;\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n\n  }, {\n    key: \"_onMousedown\",\n    value: function _onMousedown(event) {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n      var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      var isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      if (!this._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        var touches = event.changedTouches;\n\n        for (var i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n    /** Function being called whenever the trigger is being released. */\n\n  }, {\n    key: \"_onPointerUp\",\n    value: function _onPointerUp() {\n      if (!this._isPointerDown) {\n        return;\n      }\n\n      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      this._activeRipples.forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        var isVisible = ripple.state === 1\n        /* VISIBLE */\n        || ripple.config.terminateOnPointerUp && ripple.state === 0\n        /* FADING_IN */\n        ;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n\n  }, {\n    key: \"_runTimeoutOutsideZone\",\n    value: function _runTimeoutOutsideZone(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n    /** Registers event listeners for a given list of events. */\n\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents(eventTypes) {\n      var _this12 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        eventTypes.forEach(function (type) {\n          _this12._triggerElement.addEventListener(type, _this12, passiveEventOptions);\n        });\n      });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this13 = this;\n\n      if (this._triggerElement) {\n        pointerDownEvents.forEach(function (type) {\n          _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n        });\n\n        if (this._pointerUpEventsRegistered) {\n          pointerUpEvents.forEach(function (type) {\n            _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n          });\n        }\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to specify the global ripple options. */\n\n\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n      }\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    },\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}), this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\nMatRipple.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatRippleModule = function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n};\n\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatRippleModule_Factory(t) {\n    return new (t || MatRippleModule)();\n  },\n  imports: [[MatCommonModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function declarations() {\n      return [MatRipple];\n    },\n    imports: function imports() {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n\n\nvar MatPseudoCheckbox = function MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /** Display state of the checkbox. */\n\n  this.state = 'unchecked';\n  /** Whether the checkbox is disabled. */\n\n  this.disabled = false;\n};\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatPseudoCheckbox.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n};\n\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatPseudoCheckboxModule_Factory(t) {\n    return new (t || MatPseudoCheckboxModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\n\nvar MatOptgroupBase = function MatOptgroupBase() {\n  _classCallCheck(this, MatOptgroupBase);\n};\n\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n\nvar _uniqueOptgroupIdCounter = 0;\n\nvar _MatOptgroupBase = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(_MatOptgroupBase, _MatOptgroupMixinBase2);\n\n  var _super8 = _createSuper(_MatOptgroupBase);\n\n  function _MatOptgroupBase() {\n    var _this14;\n\n    _classCallCheck(this, _MatOptgroupBase);\n\n    _this14 = _super8.apply(this, arguments);\n    /** Unique id for the underlying label. */\n\n    _this14._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    return _this14;\n  }\n\n  return _MatOptgroupBase;\n}(_MatOptgroupMixinBase);\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return ɵ_MatOptgroupBase_BaseFactory(t || _MatOptgroupBase);\n};\n\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n_MatOptgroupBase.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\nvar ɵ_MatOptgroupBase_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(_MatOptgroupBase);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nvar MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupBase2) {\n  _inherits(MatOptgroup, _MatOptgroupBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    _classCallCheck(this, MatOptgroup);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return MatOptgroup;\n}(_MatOptgroupBase);\n\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) {\n  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);\n};\n\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar ɵMatOptgroup_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nvar _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nvar MatOptionSelectionChange = function MatOptionSelectionChange(\n/** Reference to the option that emitted the event. */\nsource) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\nvar _MatOptionBase = /*#__PURE__*/function () {\n  function _MatOptionBase(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, _MatOptionBase);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = \"mat-option-\".concat(_uniqueIdCounter++);\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n\n\n  _createClass(_MatOptionBase, [{\n    key: \"select\",\n\n    /** Selects the option. */\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Deselects the option. */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Sets focus onto this option. */\n\n  }, {\n    key: \"focus\",\n    value: function focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      var element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n\n  }, {\n    key: \"_getAriaSelected\",\n    value: function _getAriaSelected() {\n      return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        var viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }, {\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._parent && this._parent.disableRipple;\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n  }]);\n\n  return _MatOptionBase;\n}();\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase));\n};\n\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n_MatOptionBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined\n  }, {\n    type: _MatOptgroupBase\n  }];\n};\n\n_MatOptionBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\n\nvar MatOption = /*#__PURE__*/function (_MatOptionBase2) {\n  _inherits(MatOption, _MatOptionBase2);\n\n  var _super10 = _createSuper(MatOption);\n\n  function MatOption(element, changeDetectorRef, parent, group) {\n    _classCallCheck(this, MatOption);\n\n    return _super10.call(this, element, changeDetectorRef, parent, group);\n  }\n\n  return MatOption;\n}(_MatOptionBase);\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTGROUP]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    var optionsArray = options.toArray();\n    var groups = optionGroups.toArray();\n    var groupCounter = 0;\n\n    for (var i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatOptionModule = function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n};\n\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatOptionModule_Factory(t) {\n    return new (t || MatOptionModule)();\n  },\n  imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function declarations() {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function imports() {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function exports() {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\n\n\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\n\nvar JAN = 0,\n    FEB = 1,\n    MAR = 2,\n    APR = 3,\n    MAY = 4,\n    JUN = 5,\n    JUL = 6,\n    AUG = 7,\n    SEP = 8,\n    OCT = 9,\n    NOV = 10,\n    DEC = 11;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };","map":{"version":3,"sources":["../../../../../../src/material/core/version.ts","../../../../../../src/material/core/animation/animation.ts","../../../../../../src/material/core/common-behaviors/common-module.ts","../../../../../../src/material/core/common-behaviors/disabled.ts","../../../../../../src/material/core/common-behaviors/color.ts","../../../../../../src/material/core/common-behaviors/disable-ripple.ts","../../../../../../src/material/core/common-behaviors/tabindex.ts","../../../../../../src/material/core/common-behaviors/error-state.ts","../../../../../../src/material/core/common-behaviors/initialized.ts","../../../../../../src/material/core/common-behaviors/index.ts","../../../../../../src/material/core/datetime/date-adapter.ts","../../../../../../src/material/core/datetime/date-formats.ts","../../../../../../src/material/core/datetime/native-date-adapter.ts","../../../../../../src/material/core/datetime/native-date-formats.ts","../../../../../../src/material/core/datetime/index.ts","../../../../../../src/material/core/error/error-options.ts","../../../../../../src/material/core/line/line.ts","../../../../../../src/material/core/ripple/ripple-ref.ts","../../../../../../src/material/core/ripple/ripple-renderer.ts","../../../../../../src/material/core/ripple/ripple.ts","../../../../../../src/material/core/ripple/index.ts","../../../../../../src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../../../../src/material/core/selection/index.ts","../../../../../../src/material/core/option/optgroup.ts","../../../../../../src/material/core/option/option.ts","../../../../../../src/material/core/option/index.ts","../../../../../../src/material/core/label/label-options.ts","../../../../../../src/material/core/month-constants.ts","../../../../../../src/material/core/public-api.ts","../../../../../../src/material/core/index.ts"],"names":["VERSION","CDK_VERSION"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Material. */\nexport const VERSION = new Version('10.2.4');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HighContrastModeDetector} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {Inject, InjectionToken, isDevMode, NgModule, Optional, Version} from '@angular/core';\nimport {VERSION as CDK_VERSION} from '@angular/cdk';\nimport {DOCUMENT} from '@angular/common';\n\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('10.2.4');\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): SanityChecks {\n  return true;\n}\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<SanityChecks>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/**\n * Possible sanity checks that can be enabled. If set to\n * true/false, all checks will be enabled/disabled.\n */\nexport type SanityChecks = boolean | GranularSanityChecks;\n\n/** Object that can be used to configure the sanity checks granularly. */\nexport interface GranularSanityChecks {\n  doctype: boolean;\n  theme: boolean;\n  version: boolean;\n\n  /**\n   * @deprecated No longer being used.\n   * @breaking-change 10.0.0\n   */\n  hammer: boolean;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Configured sanity checks. */\n  private _sanityChecks: SanityChecks;\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(\n      highContrastModeDetector: HighContrastModeDetector,\n      @Optional() @Inject(MATERIAL_SANITY_CHECKS) sanityChecks: any,\n      /** @breaking-change 11.0.0 make document required */\n      @Optional() @Inject(DOCUMENT) document?: any) {\n    this._document = document;\n\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n\n    // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._checkCdkVersionMatch();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n    /** Access injected document if available or fallback to global document reference */\n    private _getDocument(): Document | null {\n      const doc = this._document || document;\n      return typeof doc === 'object' && doc ? doc : null;\n    }\n\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    private _getWindow(): Window | null {\n      const doc = this._getDocument();\n      const win = doc?.defaultView || window;\n      return typeof win === 'object' && win ? win : null;\n    }\n\n  /** Whether any sanity checks are enabled. */\n  private _checksAreEnabled(): boolean {\n    // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n    // it. Since these checks can have performance implications and they aren't tree shakeable\n    // in their current form, we can leave the `isDevMode` check in for now.\n    // tslint:disable-next-line:ban\n    return isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    const window = this._getWindow() as any;\n    return window && (window.__karma__ || window.jasmine);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    const isEnabled = this._checksAreEnabled() &&\n      (this._sanityChecks === true || (this._sanityChecks as GranularSanityChecks).doctype);\n    const document = this._getDocument();\n\n    if (isEnabled && document && !document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    const isDisabled = !this._checksAreEnabled() ||\n      (this._sanityChecks === false || !(this._sanityChecks as GranularSanityChecks).theme);\n    const document = this._getDocument();\n\n    if (isDisabled || !document || !document.body ||\n        typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n    document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement);\n\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn(\n        'Could not find Angular Material core theme. Most Material ' +\n        'components may not work as expected. For more info refer ' +\n        'to the theming guide: https://material.angular.io/guide/theming'\n      );\n    }\n\n    document.body.removeChild(testElement);\n  }\n\n  /** Checks whether the material version matches the cdk version */\n  private _checkCdkVersionMatch(): void {\n    const isEnabled = this._checksAreEnabled() &&\n      (this._sanityChecks === true || (this._sanityChecks as GranularSanityChecks).version);\n\n    if (isEnabled && VERSION.full !== CDK_VERSION.full) {\n      console.warn(\n          'The Angular Material version (' + VERSION.full + ') does not match ' +\n          'the Angular CDK version (' + CDK_VERSION.full + ').\\n' +\n          'Please ensure the versions of these two packages exactly match.'\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n\n  /** Default color to fall back to if no value is set. */\n  defaultColor: ThemePalette | undefined;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n    defaultColor = defaultColor;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || this.defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor, AbstractConstructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends AbstractConstructor<{}>>(\n  base: T): CanDisableRippleCtor & T {\n  abstract class Mixin extends (base as unknown as Constructor<{}>) {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & CanDisableRippleCtor;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Constructor, AbstractConstructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n\n  /** Tabindex to which to fall back to if no value is set. */\n  defaultTabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends AbstractConstructor<CanDisable>>(\n  base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  abstract class Mixin extends (base as unknown as Constructor<CanDisable>) {\n    private _tabIndex: number = defaultTabIndex;\n    defaultTabIndex = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & Constructor<HasTabIndex>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  MatCommonModule,\n  MATERIAL_SANITY_CHECKS,\n  SanityChecks,\n  GranularSanityChecks,\n} from './common-module';\nexport {CanDisable, CanDisableCtor, mixinDisabled} from './disabled';\nexport {CanColor, CanColorCtor, mixinColor, ThemePalette} from './color';\nexport {CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple} from './disable-ripple';\nexport {HasTabIndex, HasTabIndexCtor, mixinTabIndex} from './tabindex';\nexport {CanUpdateErrorState, CanUpdateErrorStateCtor, mixinErrorState} from './error-state';\nexport {HasInitialized, HasInitializedCtor, mixinInitialized} from './initialized';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n  protected _localeChanges = new Subject<void>();\n\n  /** A stream that emits when the locale changes. */\n  readonly localeChanges: Observable<void> = this._localeChanges;\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n /**\n  * Given a potential date object, returns that same date object if it is\n  * a valid date, or `null` if it's not a valid date.\n  * @param obj The object to check.\n  * @returns A date or `null`.\n  */\n  getValidDateOrNull(obj: unknown): D | null {\n    return this.isDateInstance(obj) && this.isValid(obj as D) ? obj as D : null;\n  }\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from its utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {startWith} from 'rxjs/operators';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport function setLines(lines: QueryList<unknown>, element: ElementRef<HTMLElement>,\n                         prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({length}) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nexport class MatLineSetter {\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n    setLines(lines, element);\n  }\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Possible states for a ripple element. */\nexport const enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: {fadeOutRipple(ref: RippleRef): void},\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {RippleRef, RippleState, RippleConfig} from './ripple-ref';\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer implements EventListenerObject {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /** Whether pointer-up event listeners have been registered. */\n  private _pointerUpEventsRegistered = false;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementOrElementRef: HTMLElement | ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef: HTMLElement | ElementRef<HTMLElement>) {\n    const element = coerceElement(elementOrElementRef);\n\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._triggerElement = element;\n    this._registerEvents(pointerDownEvents);\n  }\n\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event: Event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event as MouseEvent);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event as TouchEvent);\n    } else {\n      this._onPointerUp();\n    }\n\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private _onMousedown(event: MouseEvent) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private _onTouchStart(event: TouchEvent) {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private _runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Registers event listeners for a given list of events. */\n  private _registerEvents(eventTypes: string[]) {\n    this._ngZone.runOutsideAngular(() => {\n      eventTypes.forEach((type) => {\n        this._triggerElement!.addEventListener(type, this, passiveEventOptions);\n      });\n    });\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach((type) => {\n        this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n      });\n\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach((type) => {\n          this._triggerElement!.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleAnimationConfig, RippleConfig, RippleRef} from './ripple-ref';\nimport {RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse or touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) private _animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {enterDuration: 0, exitDuration: 0} : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  InjectionToken,\n  Input,\n  ViewEncapsulation,\n  Directive\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase { }\nconst _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n@Directive()\nexport class _MatOptgroupBase extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nexport const MAT_OPTGROUP = new InjectionToken<MatOptgroup>('MatOptgroup');\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  },\n  providers: [{provide: MAT_OPTGROUP, useExisting: MatOptgroup}],\n})\nexport class MatOptgroup extends _MatOptgroupBase {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n  Directive,\n} from '@angular/core';\nimport {FocusOptions, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup, _MatOptgroupBase, MAT_OPTGROUP} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n\n@Directive()\nexport class _MatOptionBase implements FocusableOption, AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _parent: MatOptionParentComponent,\n    readonly group: _MatOptgroupBase) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(_origin?: FocusOrigin, options?: FocusOptions): void {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean|null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option mat-focus-indicator',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption extends _MatOptionBase {\n  constructor(\n    element: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) parent: MatOptionParentComponent,\n    @Optional() @Inject(MAT_OPTGROUP) group: MatOptgroup) {\n    super(element, changeDetectorRef, parent, group);\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionOffset: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/**\n * Type for the available floatLabel values.\n * @deprecated Use `FloatLabelType` from `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n  OCT = 9, NOV = 10, DEC = 11;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './version';\nexport * from './animation/animation';\nexport * from './common-behaviors/index';\nexport * from './datetime/index';\nexport * from './error/error-options';\nexport * from './line/line';\nexport * from './option/index';\nexport * from './label/label-options';\nexport * from './ripple/index';\nexport * from './selection/index';\n\n// TODO(devversion): remove this with v8\nexport * from './month-constants';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MATERIAL_SANITY_CHECKS_FACTORY as Éµangular_material_src_material_core_core_a} from './common-behaviors/common-module';"]},"metadata":{},"sourceType":"module"}